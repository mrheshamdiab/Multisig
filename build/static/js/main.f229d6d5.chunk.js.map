{"version":3,"sources":["contracts sync /^/.*/.address/.js$","contracts/MetaMultiSigWallet.address.js","contracts/Monyo.address.js","contracts/MetaMultiSigWallet.abi.js","contracts/Monyo.abi.js","contracts/MetaMultiSigWallet.bytecode.js","contracts/Monyo.bytecode.js","contracts/contracts.js","hooks/ContractLoader.js","hooks/ContractExistsAtAddress.js","constants.js","hooks/UserProvider.js","hooks/Poller.js","hooks/OnBlock.js","hooks/ContractReader.js","hooks/Balance.js","hooks/EventListener.js","hooks/LocalStorage.js","hooks/LookupAddress.js","components/Address.jsx","components/Balance.jsx","helpers/Transactor.js","components/Blockie.jsx","components/AddressInput.jsx","components/EtherInput.jsx","components/Wallet.jsx","components/TransactionDetails.jsx","components/Account.jsx","components/Contract/utils.js","components/Contract/DisplayVariable.jsx","components/Contract/FunctionForm.jsx","components/Contract/index.jsx","components/Ramp.jsx","components/Faucet.jsx","components/Header.jsx","components/Timeline.jsx","components/GasGauge.jsx","components/BytesStringInput.jsx","components/TransactionDetailsModal.jsx","components/TransactionListItem.jsx","components/ThemeSwitch.jsx","views/CreateTransaction.jsx","views/Subgraph.jsx","views/Owners.jsx","views/FrontPage.jsx","views/Transactions.jsx","views/Streams.jsx","App.jsx","hooks/ExchangePrice.js","hooks/GasPrice.js","hooks/ExternalContractLoader.js","index.jsx","contracts sync /^/.*/.abi/.js$","contracts sync /^/.*/.bytecode/.js$"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","loadContract","contractName","signer","newContract","Contract","require","bytecode","console","log","useContractLoader","providerOrSigner","useState","contracts","setContracts","useEffect","a","listAccounts","accounts","length","getSigner","contractList","newContracts","reduce","accumulator","loadContracts","useContractExistsAtAddress","provider","contractAddress","contractIsDeployed","setContractIsDeployed","checkDeployment","isAddress","getCode","INFURA_ID","DAI_ABI","NETWORK","chainId","n","NETWORKS","localhost","name","color","blockExplorer","rpcUrl","window","location","hostname","mainnet","kovan","faucet","rinkeby","ropsten","goerli","xdai","price","gasPrice","matic","mumbai","useUserProvider","injectedProvider","localProvider","useMemo","burnerConfig","pathname","indexOf","rawPK","incomingPK","hash","replace","privateKey","history","pushState","currentPrivateKey","localStorage","getItem","setItem","Date","now","connection","url","Web3Provider","BurnerProvider","networkName","_network","usePoller","fn","delay","extraWatch","savedCallback","useRef","current","setInterval","clearInterval","useOnBlock","args","listener","blockNumber","on","off","useContractReader","functionName","pollTime","formatter","onChange","adjustPollTime","value","setValue","setTimeout","bind","updateValue","newValue","useBalance","address","balance","setBalance","pollBalance","useCallback","getBalance","newBalance","useEventListener","eventName","startBlock","updates","setUpdates","resetEventsBlock","messages","assign","pop","removeListener","useLocalStorage","key","initialValue","ttl","item","parsedItem","JSON","parse","getTime","expiry","removeItem","error","storedValue","setStoredValue","valueToStore","Function","stringify","lookupAddress","reportedName","resolveName","resolvedAddress","getAddress","useLookupAddress","ensName","setEnsName","cache","timestamp","then","Text","Typography","Address","props","ens","ensProvider","currentTheme","useThemeSwitcher","avatar","paragraph","rows","displayAddress","substr","size","text","etherscanLink","blockExplorerLink","minimized","style","verticalAlign","target","href","rel","seed","toLowerCase","scale","editable","copyable","fontSize","paddingLeft","Balance","dollarMode","setDollarMode","floatBalance","parseFloat","usingBalance","etherBalance","formatEther","toFixed","displayBalance","dollarMultiplier","padding","cursor","onClick","Transactor","etherscan","tx","getNetwork","network","options","dappId","system","networkId","transactionHandler","txInformation","notify","Notify","etherscanNetwork","etherscanTxUrl","Promise","result","parseUnits","gasLimit","hexlify","sendTransaction","emitter","transaction","onclick","open","notification","info","message","description","placement","Blockie","AddressInput","scan","setScan","currentValue","scannerButton","marginTop","count","CameraOutlined","QrcodeOutlined","updateAddress","possibleAddress","scanner","zIndex","position","left","top","width","resolution","onError","onScan","possibleNewValue","lastIndexOf","autoComplete","autoFocus","placeholder","prefix","addonAfter","EtherInput","mode","setMode","display","setDisplay","option","title","usdValue","ethValue","Paragraph","Wallet","receiveButton","privateKeyButton","signerAddress","useUserAddress","selectedAddress","setOpen","qr","setQr","amount","setAmount","toAddress","setToAddress","pk","setPK","providerSend","WalletOutlined","rotate","level","includeMargin","renderAs","imageSettings","excavate","KeyOutlined","wallet","ethers","extraPkDisplayAdded","extraPkDisplay","push","backgroundStyle","pastpk","pastwallet","createRandom","_signingKey","reload","inputStyle","visible","float","paddingRight","onOk","onCancel","footer","type","disabled","loading","parseEther","to","SendOutlined","Account","userProvider","mainnetProvider","web3Modal","loadWeb3Modal","logoutOfWeb3Modal","modalButtons","cachedProvider","marginLeft","shape","tryToDisplay","thing","toNumber","formatUnits","DisplayVariable","contractFunction","functionInfo","refreshRequired","triggerRefresh","variable","setVariable","refresh","funcResponse","span","textAlign","opacity","utils","FunctionForm","form","setForm","txValue","setTxValue","returnValue","setReturnValue","inputIndex","inputs","input","buttons","isHexString","formUpdate","parseBytes32String","formatBytes32String","toUtf8String","toUtf8Bytes","trim","margin","event","suffix","txValueInput","floatValue","BigNumber","from","toHexString","payable","buttonIcon","defaultValue","bordered","height","innerIndex","baseType","stateMutability","returned","overrides","noContractDisplay","class","borderRadius","fontWeight","marginRight","role","aria-label","contract","customContract","account","show","displayedContractFunctions","values","interface","functions","filter","contractDisplay","isQueryable","connect","Ramp","modalUp","setModalUp","allFaucets","networks","DollarCircleOutlined","RampInstantSDK","hostAppName","hostLogoUrl","swapAmount","swapAsset","userAddress","Faucet","blockie","setAddress","icon","Header","subTitle","GasGauge","parseInt","constants","TransactionDetailsModal","handleOk","txnInfo","destroyOnClose","closable","maskClosable","functionFragment","signature","element","index","flexDirection","alignItems","justifyContent","sighash","TransactionListItem","txnData","readContracts","children","isModalVisible","setIsModalVisible","data","parseTransaction","Item","nonce","EllipsisOutlined","ThemeSwitcher","theme","isDarkMode","setIsDarkMode","switcher","themes","status","className","right","bottom","checked","isChecked","dark","light","Option","Select","axios","CreateTransaction","poolServerUrl","setRoute","yourLocalBalance","writeContracts","useHistory","calldataInputRef","resultDisplay","customNonce","setCustomNonce","setTo","setData","isCreateTxnEnabled","setCreateTxnEnabled","decodedDataState","setDecodedData","methodName","setMethodName","selectDisabled","setSelectDisabled","decodedData","setResult","inputTimer","marginBottom","clearTimeout","border","ref","getTransactionHash","newHash","send","recover","isOwner","post","signatures","signers","res","highlight","Subgraph","EXAMPLE_GRAPHQL","EXAMPLE_GQL","gql","useQuery","pollInterval","purposeColumns","dataIndex","render","record","sender","d","toISOString","newPurpose","setNewPurpose","deployWarning","paddingBottom","YourContract","setPurpose","dataSource","purposes","columns","rowKey","fetcher","graphQLParams","fetch","subgraphUri","method","headers","body","response","json","docExplorerOpen","query","Owners","ownerEvents","signaturesRequired","newOwner","setNewOwner","newSignaturesRequired","setNewSignaturesRequired","maxWidth","renderItem","calldata","encodeFunctionData","FrontPage","executeTransactionEvents","Transactions","transactions","setTransactions","getTransactions","get","newTransactions","i","thisNonce","gte","validSignatures","s","update","getSortedSigList","allSigs","sigList","sort","b","sub","finalSigList","finalSigners","used","hasSigned","hasEnoughSignatures","executeTransaction","targetNetwork","scaffoldEthProvider","JsonRpcProvider","mainnetInfura","localProviderUrl","localProviderUrlFromEnv","process","REACT_APP_PROVIDER","StaticJsonRpcProvider","Web3Modal","cacheProvider","providerOptions","walletconnect","package","WalletConnectProvider","infuraId","clearCachedProvider","ethereum","App","setInjectedProvider","setPrice","DAI","Token","Fetcher","fetchPairData","WETH","pair","route","Route","midPrice","toSignificant","getPrice","useExchangePrice","speed","setGasPrice","loadGasPrice","newGasPrice","catch","useGasPrice","localChainId","selectedChainId","faucetTx","yourMainnetBalance","mainnetDAIContract","ABI","optionalBytecode","setContract","useExternalContractLoader","_lastBlockNumber","purpose","setPurposeEvents","networkDisplay","openStreamEvents","withdrawStreamEvents","faucetHint","faucetAvailable","faucetClicked","setFaucetClicked","selectedKeys","exact","path","align","gutter","prevTheme","client","ApolloClient","uri","InMemoryCache","ReactDOM","themeMap","defaultTheme","document","getElementById"],"mappings":"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","file":"static/js/main.f229d6d5.chunk.js","sourcesContent":["var map = {\n\t\"./MetaMultiSigWallet.address.js\": 1122,\n\t\"./Monyo.address.js\": 1123\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 1121;","module.exports = \"0x603176B5Aa231c6E04eE354793F8CDBbe3C468a7\";","module.exports = \"0x3B87D7FFd57A11CC84EEA24c4b55C5c42EB25bc4\";","module.exports = [\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"_chainId\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"address[]\",\n        \"name\": \"_owners\",\n        \"type\": \"address[]\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"_signaturesRequired\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"CloseStream\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"sender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"balance\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Deposit\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"address payable\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"value\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"bytes\",\n        \"name\": \"data\",\n        \"type\": \"bytes\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"nonce\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"bytes32\",\n        \"name\": \"hash\",\n        \"type\": \"bytes32\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"bytes\",\n        \"name\": \"result\",\n        \"type\": \"bytes\"\n      }\n    ],\n    \"name\": \"ExecuteTransaction\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"frequency\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"OpenStream\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"bool\",\n        \"name\": \"added\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"name\": \"Owner\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"string\",\n        \"name\": \"reason\",\n        \"type\": \"string\"\n      }\n    ],\n    \"name\": \"Withdraw\",\n    \"type\": \"event\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"newSigner\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"newSignaturesRequired\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"addSigner\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"chainId\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address payable\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"closeStream\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address payable\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"value\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"bytes\",\n        \"name\": \"data\",\n        \"type\": \"bytes\"\n      },\n      {\n        \"internalType\": \"bytes[]\",\n        \"name\": \"signatures\",\n        \"type\": \"bytes[]\"\n      }\n    ],\n    \"name\": \"executeTransaction\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bytes\",\n        \"name\": \"\",\n        \"type\": \"bytes\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"_nonce\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"value\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"bytes\",\n        \"name\": \"data\",\n        \"type\": \"bytes\"\n      }\n    ],\n    \"name\": \"getTransactionHash\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bytes32\",\n        \"name\": \"\",\n        \"type\": \"bytes32\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"isOwner\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"nonce\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"frequency\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"openStream\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"bytes32\",\n        \"name\": \"_hash\",\n        \"type\": \"bytes32\"\n      },\n      {\n        \"internalType\": \"bytes\",\n        \"name\": \"_signature\",\n        \"type\": \"bytes\"\n      }\n    ],\n    \"name\": \"recover\",\n    \"outputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"pure\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"oldSigner\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"newSignaturesRequired\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"removeSigner\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"signaturesRequired\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"streamBalance\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"string\",\n        \"name\": \"reason\",\n        \"type\": \"string\"\n      }\n    ],\n    \"name\": \"streamWithdraw\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"streams\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"frequency\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"last\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"newSignaturesRequired\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"updateSignaturesRequired\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"stateMutability\": \"payable\",\n    \"type\": \"receive\"\n  }\n];","module.exports = [\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"account\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"initialSupply\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"value\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"value\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"type\": \"event\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint8\",\n        \"name\": \"\",\n        \"type\": \"uint8\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"subtractedValue\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"decreaseAllowance\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"addedValue\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"increaseAllowance\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"internalType\": \"string\",\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"internalType\": \"string\",\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];","module.exports = \"0x60806040523480156200001157600080fd5b5060405162001ca238038062001ca2833981016040819052620000349162000238565b600081116200009e5760405162461bcd60e51b815260206004820152602b60248201527f636f6e7374727563746f723a206d757374206265206e6f6e2d7a65726f20736960448201526a19dcc81c995c5d5a5c995960aa1b60648201526084015b60405180910390fd5b600181905560005b82518110156200020f576000838281518110620000c757620000c762000352565b6020026020010151905060006001600160a01b0316816001600160a01b03161415620001365760405162461bcd60e51b815260206004820152601960248201527f636f6e7374727563746f723a207a65726f206164647265737300000000000000604482015260640162000095565b6001600160a01b03811660009081526020819052604090205460ff1615620001a15760405162461bcd60e51b815260206004820152601d60248201527f636f6e7374727563746f723a206f776e6572206e6f7420756e69717565000000604482015260640162000095565b6001600160a01b03811660008181526020818152604091829020805460ff1916600190811790915591519182527ffe545f48304051c4029eb2da9927daa59da0414b4b084fdceaf2955b609b899e910160405180910390a25080620002068162000328565b915050620000a6565b5050506003556200037e565b80516001600160a01b03811681146200023357600080fd5b919050565b6000806000606084860312156200024e57600080fd5b8351602080860151919450906001600160401b03808211156200027057600080fd5b818701915087601f8301126200028557600080fd5b8151818111156200029a576200029a62000368565b8060051b604051601f19603f83011681018181108582111715620002c257620002c262000368565b604052828152858101935084860182860187018c1015620002e257600080fd5b600095505b838610156200031057620002fb816200021b565b855260019590950194938601938601620002e7565b50809750505050505050604084015190509250925092565b60006000198214156200034b57634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b611914806200038e6000396000f3fe6080604052600436106100ec5760003560e01c8063836992751161008a578063ce757d2911610059578063ce757d2914610302578063d1fbffa014610318578063de4b9e9314610345578063e0a2ff541461036557600080fd5b8063836992751461025f5780639a8a0592146102b6578063a8397ddc146102cc578063affed0e0146102ec57600080fd5b80633034a742116100c65780633034a742146101d15780633bad5426146101f1578063545a4a3c1461021157806365af1bed1461023f57600080fd5b806319045a25146101325780632a387d5d1461016f5780632f54bf6e1461019157600080fd5b3661012d576040805134815247602082015233917f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15910160405180910390a2005b600080fd5b34801561013e57600080fd5b5061015261014d366004611526565b610385565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561017b57600080fd5b5061018f61018a3660046114f1565b6103ef565b005b34801561019d57600080fd5b506101c16101ac36600461139f565b60006020819052908152604090205460ff1681565b6040519015158152602001610166565b3480156101dd57600080fd5b5061018f6101ec36600461156d565b61057d565b3480156101fd57600080fd5b5061018f61020c3660046114c5565b610617565b34801561021d57600080fd5b5061023161022c366004611586565b610766565b604051908152602001610166565b34801561024b57600080fd5b5061018f61025a3660046114c5565b6107a5565b34801561026b57600080fd5b5061029b61027a36600461139f565b60046020526000908152604090208054600182015460029092015490919083565b60408051938452602084019290925290820152606001610166565b3480156102c257600080fd5b5061023160035481565b3480156102d857600080fd5b5061018f6102e73660046115e9565b610943565b3480156102f857600080fd5b5061023160025481565b34801561030e57600080fd5b5061023160015481565b34801561032457600080fd5b506103386103333660046113bc565b6109ae565b604051610166919061172f565b34801561035157600080fd5b5061018f61036036600461139f565b610cc8565b34801561037157600080fd5b5061023161038036600461139f565b610e00565b60006103e8826103e2856040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01604051602081830303815290604052805190602001209050919050565b90610e60565b9392505050565b3330146104175760405162461bcd60e51b815260040161040e90611742565b60405180910390fd5b6001600160a01b0383166000908152600460205260409020541561047d5760405162461bcd60e51b815260206004820152601f60248201527f6f70656e53747265616d3a2073747265616d20616c7265616479206f70656e00604482015260640161040e565b600082116104c55760405162461bcd60e51b81526020600482015260156024820152741bdc195b94dd1c99585b4e881b9bc8185b5bdd5b9d605a1b604482015260640161040e565b600081116105155760405162461bcd60e51b815260206004820152601860248201527f6f70656e53747265616d3a206e6f206672657175656e63790000000000000000604482015260640161040e565b6001600160a01b038316600081815260046020908152604091829020858155600181018590554260029091015581518581529081018490527f81236f9eb471668cf00861415085dace409d719678881c59b03e49683bbef716910160405180910390a2505050565b33301461059c5760405162461bcd60e51b815260040161040e90611742565b600081116106125760405162461bcd60e51b815260206004820152603860248201527f7570646174655369676e61747572657352657175697265643a206d757374206260448201527f65206e6f6e2d7a65726f20736967732072657175697265640000000000000000606482015260840161040e565b600155565b3330146106365760405162461bcd60e51b815260040161040e90611742565b6001600160a01b03821660009081526020819052604090205460ff1661069e5760405162461bcd60e51b815260206004820152601760248201527f72656d6f76655369676e65723a206e6f74206f776e6572000000000000000000604482015260640161040e565b600081116107035760405162461bcd60e51b815260206004820152602c60248201527f72656d6f76655369676e65723a206d757374206265206e6f6e2d7a65726f207360448201526b1a59dcc81c995c5d5a5c995960a21b606482015260840161040e565b6001600160a01b03821660008181526020818152604091829020805460ff19168155600185905554915160ff909216151582527ffe545f48304051c4029eb2da9927daa59da0414b4b084fdceaf2955b609b899e91015b60405180910390a25050565b6000306003548686868660405160200161078596959493929190611666565b604051602081830303815290604052805190602001209050949350505050565b3330146107c45760405162461bcd60e51b815260040161040e90611742565b6001600160a01b03821661081a5760405162461bcd60e51b815260206004820152601760248201527f6164645369676e65723a207a65726f2061646472657373000000000000000000604482015260640161040e565b6001600160a01b03821660009081526020819052604090205460ff16156108835760405162461bcd60e51b815260206004820152601b60248201527f6164645369676e65723a206f776e6572206e6f7420756e697175650000000000604482015260640161040e565b600081116108e55760405162461bcd60e51b815260206004820152602960248201527f6164645369676e65723a206d757374206265206e6f6e2d7a65726f2073696773604482015268081c995c5d5a5c995960ba1b606482015260840161040e565b6001600160a01b03821660008181526020818152604091829020805460ff19166001908117825585905554915160ff909216151582527ffe545f48304051c4029eb2da9927daa59da0414b4b084fdceaf2955b609b899e910161075a565b3360009081526004602052604090205461099f5760405162461bcd60e51b815260206004820152601860248201527f77697468647261773a206e6f206f70656e2073747265616d0000000000000000604482015260640161040e565b6109aa338383610e84565b5050565b3360009081526020819052604090205460609060ff16610a245760405162461bcd60e51b815260206004820152602b60248201527f657865637574655472616e73616374696f6e3a206f6e6c79206f776e6572732060448201526a63616e206578656375746560a81b606482015260840161040e565b6000610a34600254878787610766565b600280549192506000610a4683611856565b919050555060008060005b8551811015610b47576000610a7f85888481518110610a7257610a7261189d565b6020026020010151610385565b9050826001600160a01b0316816001600160a01b031611610b005760405162461bcd60e51b815260206004820152603560248201527f657865637574655472616e73616374696f6e3a206475706c6963617465206f7260448201527420756e6f726465726564207369676e61747572657360581b606482015260840161040e565b6001600160a01b038116600090815260208190526040902054909250829060ff1615610b345783610b3081611856565b9450505b5080610b3f81611856565b915050610a51565b50600154821015610bb25760405162461bcd60e51b815260206004820152602f60248201527f657865637574655472616e73616374696f6e3a206e6f7420656e6f756768207660448201526e616c6964207369676e61747572657360881b606482015260840161040e565b600080896001600160a01b03168989604051610bce91906116c1565b60006040518083038185875af1925050503d8060008114610c0b576040519150601f19603f3d011682016040523d82523d6000602084013e610c10565b606091505b509150915081610c625760405162461bcd60e51b815260206004820152601d60248201527f657865637574655472616e73616374696f6e3a207478206661696c6564000000604482015260640161040e565b336001600160a01b03167f9053e9ec105157fac8c9308d63e6b22be5f50fe915a3e567419b624311a02d748b8b8b6001600254610c9f919061180f565b8a87604051610cb3969594939291906116dd565b60405180910390a29998505050505050505050565b333014610ce75760405162461bcd60e51b815260040161040e90611742565b6001600160a01b038116600090815260046020526040902054610d575760405162461bcd60e51b815260206004820152602260248201527f636c6f736553747265616d3a2073747265616d20616c726561647920636c6f73604482015261195960f21b606482015260840161040e565b610daf8160046000846001600160a01b03166001600160a01b03168152602001908152602001600020600001546040518060400160405280600d81526020016c1cdd1c99585b4818db1bdcd959609a1b815250610e84565b6001600160a01b03811660008181526004602052604080822082815560018101839055600201829055517fcc362a45d32c94d02a329570bd5935709d77f6dc79ac6afa5107b513642461c29190a250565b6001600160a01b03811660009081526004602052604081206001810154600290910154610e2d904261180f565b6001600160a01b038416600090815260046020526040902054610e5091906117f0565b610e5a91906117ce565b92915050565b6000806000610e6f8585610fd3565b91509150610e7c81611043565b509392505050565b6000610e8f84610e00565b905082811015610ed85760405162461bcd60e51b81526020600482015260146024820152730eed2e8d0c8e4c2ee7440dcdee840cadcdeeaced60631b604482015260640161040e565b6001600160a01b03841660009081526004602052604090206002015481908490610f02904261180f565b610f0c91906117f0565b610f1691906117ce565b6001600160a01b038516600090815260046020526040902060020154610f3c91906117b6565b6001600160a01b038516600081815260046020526040908190206002019290925590517f485f1bb6524c663555797e00171a10f341656e59b02d6b557a0a38ba7d5d975190610f8e9086908690611764565b60405180910390a26040516001600160a01b0385169084156108fc029085906000818181858888f19350505050158015610fcc573d6000803e3d6000fd5b5050505050565b60008082516041141561100a5760208301516040840151606085015160001a610ffe87828585611201565b9450945050505061103c565b82516040141561103457602083015160408401516110298683836112ee565b93509350505061103c565b506000905060025b9250929050565b600081600481111561105757611057611887565b14156110605750565b600181600481111561107457611074611887565b14156110c25760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015260640161040e565b60028160048111156110d6576110d6611887565b14156111245760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640161040e565b600381600481111561113857611138611887565b14156111915760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b606482015260840161040e565b60048160048111156111a5576111a5611887565b14156111fe5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b606482015260840161040e565b50565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561123857506000905060036112e5565b8460ff16601b1415801561125057508460ff16601c14155b1561126157506000905060046112e5565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156112b5573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166112de576000600192509250506112e5565b9150600090505b94509492505050565b6000806001600160ff1b0383168161130b60ff86901c601b6117b6565b905061131987828885611201565b935093505050935093915050565b600067ffffffffffffffff831115611341576113416118b3565b611354601f8401601f1916602001611785565b905082815283838301111561136857600080fd5b828260208301376000602084830101529392505050565b600082601f83011261139057600080fd5b6103e883833560208501611327565b6000602082840312156113b157600080fd5b81356103e8816118c9565b600080600080608085870312156113d257600080fd5b84356113dd816118c9565b93506020858101359350604086013567ffffffffffffffff8082111561140257600080fd5b61140e89838a0161137f565b9450606088013591508082111561142457600080fd5b818801915088601f83011261143857600080fd5b81358181111561144a5761144a6118b3565b8060051b611459858201611785565b8281528581019085870183870188018e101561147457600080fd5b600093505b848410156114b35780358681111561149057600080fd5b61149e8f8a838b010161137f565b84525060019390930192918701918701611479565b50999c989b5096995050505050505050565b600080604083850312156114d857600080fd5b82356114e3816118c9565b946020939093013593505050565b60008060006060848603121561150657600080fd5b8335611511816118c9565b95602085013595506040909401359392505050565b6000806040838503121561153957600080fd5b82359150602083013567ffffffffffffffff81111561155757600080fd5b6115638582860161137f565b9150509250929050565b60006020828403121561157f57600080fd5b5035919050565b6000806000806080858703121561159c57600080fd5b8435935060208501356115ae816118c9565b925060408501359150606085013567ffffffffffffffff8111156115d157600080fd5b6115dd8782880161137f565b91505092959194509250565b600080604083850312156115fc57600080fd5b82359150602083013567ffffffffffffffff81111561161a57600080fd5b8301601f8101851361162b57600080fd5b61156385823560208401611327565b60008151808452611652816020860160208601611826565b601f01601f19169290920160200192915050565b60006bffffffffffffffffffffffff19808960601b168352876014840152866034840152808660601b1660548401525083606883015282516116af816088850160208701611826565b91909101608801979650505050505050565b600082516116d3818460208701611826565b9190910192915050565b60018060a01b038716815285602082015260c06040820152600061170460c083018761163a565b85606084015284608084015282810360a0840152611722818561163a565b9998505050505050505050565b6020815260006103e8602083018461163a565b6020808252600890820152672737ba1029b2b63360c11b604082015260600190565b82815260406020820152600061177d604083018461163a565b949350505050565b604051601f8201601f1916810167ffffffffffffffff811182821017156117ae576117ae6118b3565b604052919050565b600082198211156117c9576117c9611871565b500190565b6000826117eb57634e487b7160e01b600052601260045260246000fd5b500490565b600081600019048311821515161561180a5761180a611871565b500290565b60008282101561182157611821611871565b500390565b60005b83811015611841578181015183820152602001611829565b83811115611850576000848401525b50505050565b600060001982141561186a5761186a611871565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146111fe57600080fdfea2646970667358221220c3263779eed87dfdbd99b7f7f27ae5b37b993dc1fe0217c98c180d76e9d2119364736f6c63430008060033\";","module.exports = \"0x60806040523480156200001157600080fd5b5060405162000bc538038062000bc5833981016040819052620000349162000247565b604051806040016040528060058152602001644d6f6e796f60d81b8152506040518060400160405280600381526020016226a7a760e91b815250816003908051906020019062000086929190620001a1565b5080516200009c906004906020840190620001a1565b505050620000b18282620000b960201b60201c565b5050620002e7565b6001600160a01b038216620001145760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b806002600082825462000128919062000283565b90915550506001600160a01b038216600090815260208190526040812080548392906200015790849062000283565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b828054620001af90620002aa565b90600052602060002090601f016020900481019282620001d357600085556200021e565b82601f10620001ee57805160ff19168380011785556200021e565b828001600101855582156200021e579182015b828111156200021e57825182559160200191906001019062000201565b506200022c92915062000230565b5090565b5b808211156200022c576000815560010162000231565b600080604083850312156200025b57600080fd5b82516001600160a01b03811681146200027357600080fd5b6020939093015192949293505050565b60008219821115620002a557634e487b7160e01b600052601160045260246000fd5b500190565b600181811c90821680620002bf57607f821691505b60208210811415620002e157634e487b7160e01b600052602260045260246000fd5b50919050565b6108ce80620002f76000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101c6565b6040516100c391906107e2565b60405180910390f35b6100df6100da3660046107b8565b610258565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f36600461077c565b610270565b604051601281526020016100c3565b6100df6101313660046107b8565b610294565b6100f3610144366004610727565b6001600160a01b031660009081526020819052604090205490565b6100b66102d3565b6100df6101753660046107b8565b6102e2565b6100df6101883660046107b8565b610379565b6100f361019b366004610749565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101d59061085d565b80601f01602080910402602001604051908101604052809291908181526020018280546102019061085d565b801561024e5780601f106102235761010080835404028352916020019161024e565b820191906000526020600020905b81548152906001019060200180831161023157829003601f168201915b5050505050905090565b600033610266818585610387565b5060019392505050565b60003361027e8582856104ab565b61028985858561053d565b506001949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919061026690829086906102ce908790610837565b610387565b6060600480546101d59061085d565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091908381101561036c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102898286868403610387565b60003361026681858561053d565b6001600160a01b0383166103e95760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610363565b6001600160a01b03821661044a5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610363565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610537578181101561052a5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610363565b6105378484848403610387565b50505050565b6001600160a01b0383166105a15760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610363565b6001600160a01b0382166106035760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610363565b6001600160a01b0383166000908152602081905260409020548181101561067b5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610363565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906106b2908490610837565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106fe91815260200190565b60405180910390a3610537565b80356001600160a01b038116811461072257600080fd5b919050565b60006020828403121561073957600080fd5b6107428261070b565b9392505050565b6000806040838503121561075c57600080fd5b6107658361070b565b91506107736020840161070b565b90509250929050565b60008060006060848603121561079157600080fd5b61079a8461070b565b92506107a86020850161070b565b9150604084013590509250925092565b600080604083850312156107cb57600080fd5b6107d48361070b565b946020939093013593505050565b600060208083528351808285015260005b8181101561080f578581018301518582016040015282016107f3565b81811115610821576000604083870101525b50601f01601f1916929092016040019392505050565b6000821982111561085857634e487b7160e01b600052601160045260246000fd5b500190565b600181811c9082168061087157607f821691505b6020821081141561089257634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212208b0ec1c4c37ccd4406532935af6ea5cbfc0baf20b1b22c3d1c37a5f7faf43c5a64736f6c63430008060033\";","module.exports = [\"MetaMultiSigWallet\",\"Monyo\"];","/* eslint-disable import/no-dynamic-require */\r\n/* eslint-disable global-require */\r\nimport { Contract } from \"@ethersproject/contracts\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\n/*\r\n  ~ What it does? ~\r\n\r\n  Loads your local contracts and gives options to read values from contracts \r\n                                              or write transactions into them\r\n\r\n  ~ How can I use? ~\r\n\r\n  const readContracts = useContractLoader(localProvider) // or\r\n  const writeContracts = useContractLoader(userProvider)\r\n\r\n  ~ Features ~\r\n\r\n  - localProvider enables reading values from contracts\r\n  - userProvider enables writing transactions into contracts\r\n  - Example of keeping track of \"purpose\" variable by loading contracts into readContracts \r\n    and using ContractReader.js hook:\r\n    const purpose = useContractReader(readContracts,\"YourContract\", \"purpose\")\r\n  - Example of using setPurpose function from our contract and writing transactions by Transactor.js helper:\r\n    tx( writeContracts.YourContract.setPurpose(newPurpose) )\r\n*/\r\n\r\nconst loadContract = (contractName, signer) => {\r\n  const newContract = new Contract(\r\n    require(`../contracts/${contractName}.address.js`),\r\n    require(`../contracts/${contractName}.abi.js`),\r\n    signer,\r\n  );\r\n  try {\r\n    newContract.bytecode = require(`../contracts/${contractName}.bytecode.js`);\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n  return newContract;\r\n};\r\n\r\nexport default function useContractLoader(providerOrSigner) {\r\n  const [contracts, setContracts] = useState();\r\n  useEffect(() => {\r\n    async function loadContracts() {\r\n      if (typeof providerOrSigner !== \"undefined\") {\r\n        try {\r\n          // we need to check to see if this providerOrSigner has a signer or not\r\n          let signer;\r\n          let accounts;\r\n          if (providerOrSigner && typeof providerOrSigner.listAccounts === \"function\") {\r\n            accounts = await providerOrSigner.listAccounts();\r\n          }\r\n\r\n          if (accounts && accounts.length > 0) {\r\n            signer = providerOrSigner.getSigner();\r\n          } else {\r\n            signer = providerOrSigner;\r\n          }\r\n\r\n          const contractList = require(\"../contracts/contracts.js\");\r\n\r\n          const newContracts = contractList.reduce((accumulator, contractName) => {\r\n            accumulator[contractName] = loadContract(contractName, signer);\r\n            return accumulator;\r\n          }, {});\r\n          setContracts(newContracts);\r\n        } catch (e) {\r\n          console.log(\"ERROR LOADING CONTRACTS!!\", e);\r\n        }\r\n      }\r\n    }\r\n    loadContracts();\r\n  }, [providerOrSigner]);\r\n  return contracts;\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { isAddress } from \"@ethersproject/address\";\r\n\r\n/*\r\n  ~ What it does? ~\r\n\r\n  Checks whether a contract exists on the blockchain, returns true if it exists, otherwise false\r\n\r\n  ~ How can I use? ~\r\n\r\n  const contractIsDeployed = useContractExistsAtAddress(localProvider, contractAddress);\r\n\r\n  ~ Features ~\r\n\r\n  - Provide contractAddress to check if the contract is deployed\r\n  - Change provider to check contract address on different chains (ex. mainnetProvider)\r\n*/\r\n\r\nconst useContractExistsAtAddress = (provider, contractAddress) => {\r\n  const [contractIsDeployed, setContractIsDeployed] = useState(false);\r\n\r\n  // We can look at the blockchain and see what's stored at `contractAddress`\r\n  // If we find code then we know that a contract exists there.\r\n  // If we find nothing (0x0) then there is no contract deployed to that address\r\n  useEffect(() => {\r\n    // eslint-disable-next-line consistent-return\r\n    const checkDeployment = async () => {\r\n      if (!isAddress(contractAddress)) return false;\r\n      const bytecode = await provider.getCode(contractAddress);\r\n      setContractIsDeployed(bytecode !== \"0x0\");\r\n    };\r\n    if (provider) checkDeployment();\r\n  }, [provider, contractAddress]);\r\n\r\n  return contractIsDeployed;\r\n};\r\n\r\nexport default useContractExistsAtAddress;\r\n","// MY INFURA_ID, SWAP IN YOURS FROM https://infura.io/dashboard/ethereum\r\nexport const INFURA_ID = \"5676cf23733b445a85676fd13c1a7424\";\r\n//dev - 568af3da01a043ecb2ac80bf69927b38\r\n// prod - 62e4d4d8e861447686db464b423bc591\r\n//MY ETHERSCAN_ID, SWAP IN YOURS FROM https://etherscan.io/myapikey\r\nexport const ETHERSCAN_KEY = \"PSW8C433Q667DVEX5BCRMGNAH9FSGFZ7Q8\";\r\n\r\n//BLOCKNATIVE ID FOR Notify.js:\r\nexport const BLOCKNATIVE_DAPPID = \"0b58206a-f3c0-4701-a62f-73c7243e8c77\"\r\n\r\n\r\n// EXTERNAL CONTRACTS\r\n\r\nexport const DAI_ADDRESS = \"0x6B175474E89094C44Da98b954EedeAC495271d0F\"\r\n\r\nexport const DAI_ABI = [{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"chainId_\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes4\",\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"arg1\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"arg2\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"deny\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"rely\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"wards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]\r\n\r\nexport const NETWORK = (chainId)=>{\r\n  for(let n in NETWORKS){\r\n    if(NETWORKS[n].chainId==chainId){\r\n      return NETWORKS[n]\r\n    }\r\n  }\r\n}\r\n\r\nexport const NETWORKS = {\r\n    localhost: {\r\n        name: \"localhost\",\r\n        color: '#666666',\r\n        chainId: 31337,\r\n        blockExplorer: '',\r\n        rpcUrl: \"http://\" + window.location.hostname + \":8545\",\r\n    },\r\n    mainnet: {\r\n        name: \"mainnet\",\r\n        color: '#ff8b9e',\r\n        chainId: 1,\r\n        rpcUrl: `https://mainnet.infura.io/v3/${INFURA_ID}`,\r\n        blockExplorer: \"https://etherscan.io/\",\r\n    },\r\n    kovan: {\r\n        name: \"kovan\",\r\n        color: '#7003DD',\r\n        chainId: 42,\r\n        rpcUrl: `https://kovan.infura.io/v3/${INFURA_ID}`,\r\n        blockExplorer: \"https://kovan.etherscan.io/\",\r\n        faucet: \"https://gitter.im/kovan-testnet/faucet\",//https://faucet.kovan.network/\r\n    },\r\n    rinkeby: {\r\n        name: \"rinkeby\",\r\n        color: '#e0d068',\r\n        chainId: 4,\r\n        rpcUrl: `https://rinkeby.infura.io/v3/${INFURA_ID}`,\r\n        faucet: \"https://faucet.rinkeby.io/\",\r\n        blockExplorer: \"https://rinkeby.etherscan.io/\",\r\n    },\r\n    ropsten: {\r\n        name: \"ropsten\",\r\n        color: '#F60D09',\r\n        chainId: 3,\r\n        faucet: \"https://faucet.ropsten.be/\",\r\n        blockExplorer: \"https://ropsten.etherscan.io/\",\r\n        rpcUrl: `https://ropsten.infura.io/v3/${INFURA_ID}`,\r\n    },\r\n    goerli: {\r\n        name: \"goerli\",\r\n        color: '#0975F6',\r\n        chainId: 5,\r\n        faucet: \"https://goerli-faucet.slock.it/\",\r\n        blockExplorer: \"https://goerli.etherscan.io/\",\r\n        rpcUrl: `https://goerli.infura.io/v3/${INFURA_ID}`,\r\n    },\r\n    xdai: {\r\n        name: \"xdai\",\r\n        color: '#48a9a6',\r\n        chainId: 100,\r\n        price: 1,\r\n        gasPrice:1000000000,\r\n        rpcUrl: \"https://dai.poa.network\",\r\n        faucet: \"https://xdai-faucet.top/\",\r\n        blockExplorer: \"https://blockscout.com/poa/xdai/\",\r\n    },\r\n    matic: {\r\n        name: \"matic\",\r\n        color: '#2bbdf7',\r\n        chainId: 137,\r\n        price: 1,\r\n        gasPrice:1000000000,\r\n        rpcUrl: \"https://rpc-mainnet.maticvigil.com\",\r\n        faucet: \"https://faucet.matic.network/\",\r\n        blockExplorer: \"https://explorer-mainnet.maticvigil.com//\",\r\n    },\r\n    mumbai: {\r\n        name: \"mumbai\",\r\n        color: '#92D9FA',\r\n        chainId: 80001,\r\n        price: 1,\r\n        gasPrice:1000000000,\r\n        rpcUrl: \"https://rpc-mumbai.maticvigil.com\",\r\n        faucet: \"https://faucet.matic.network/\",\r\n        blockExplorer: \"https://mumbai-explorer.matic.today/\",\r\n    }\r\n}\r\n","import { useMemo } from \"react\";\r\nimport { Web3Provider } from \"@ethersproject/providers\";\r\nimport BurnerProvider from \"burner-provider\";\r\nimport { INFURA_ID } from \"../constants\";\r\n\r\n/*\r\n  ~ What it does? ~\r\n\r\n  Gets user provider\r\n\r\n  ~ How can I use? ~\r\n\r\n  const userProvider = useUserProvider(injectedProvider, localProvider);\r\n\r\n  ~ Features ~\r\n\r\n  - Specify the injected provider from Metamask\r\n  - Specify the local provider\r\n  - Usage examples:\r\n    const address = useUserAddress(userProvider);\r\n    const tx = Transactor(userProvider, gasPrice)\r\n*/\r\n\r\nconst useUserProvider = (injectedProvider, localProvider) =>\r\nuseMemo(() => {\r\n  if (injectedProvider) {\r\n    console.log(\"🦊 Using injected provider\");\r\n    return injectedProvider;\r\n  }\r\n  if (!localProvider) return undefined;\r\n\r\n  let burnerConfig = {}\r\n\r\n  if(window.location.pathname){\r\n    if(window.location.pathname.indexOf(\"/pk\")>=0){\r\n      let incomingPK = window.location.hash.replace(\"#\",\"\")\r\n      let rawPK\r\n      if(incomingPK.length===64||incomingPK.length===66){\r\n        console.log(\"🔑 Incoming Private Key...\");\r\n        rawPK=incomingPK\r\n        burnerConfig.privateKey = rawPK\r\n        window.history.pushState({},\"\", \"/\");\r\n        let currentPrivateKey = window.localStorage.getItem(\"metaPrivateKey\");\r\n        if(currentPrivateKey && currentPrivateKey!==rawPK){\r\n          window.localStorage.setItem(\"metaPrivateKey_backup\"+Date.now(),currentPrivateKey);\r\n        }\r\n        window.localStorage.setItem(\"metaPrivateKey\",rawPK);\r\n      }\r\n    }\r\n  }\r\n\r\n  console.log(\"🔥 Using burner provider\",burnerConfig);\r\n  if (localProvider.connection && localProvider.connection.url) {\r\n    burnerConfig.rpcUrl = localProvider.connection.url\r\n    return new Web3Provider(new BurnerProvider(burnerConfig));\r\n  }else{\r\n    // eslint-disable-next-line no-underscore-dangle\r\n    const networkName = localProvider._network && localProvider._network.name;\r\n    burnerConfig.rpcUrl = `https://${networkName || \"mainnet\"}.infura.io/v3/${INFURA_ID}`\r\n    return new Web3Provider(new BurnerProvider(burnerConfig));\r\n  }\r\n}, [injectedProvider, localProvider]);\r\n\r\nexport default useUserProvider;\r\n","import { useEffect, useRef } from \"react\";\r\n\r\n// helper hook to call a function regularly in time intervals\r\n\r\nexport default function usePoller(fn, delay, extraWatch) {\r\n  const savedCallback = useRef();\r\n  // Remember the latest fn.\r\n  useEffect(() => {\r\n    savedCallback.current = fn;\r\n  }, [fn]);\r\n  // Set up the interval.\r\n  // eslint-disable-next-line consistent-return\r\n  useEffect(() => {\r\n    function tick() {\r\n      savedCallback.current();\r\n    }\r\n    if (delay !== null) {\r\n      const id = setInterval(tick, delay);\r\n      return () => clearInterval(id);\r\n    }\r\n  }, [delay]);\r\n  // run at start too\r\n  useEffect(() => {\r\n    fn();\r\n  },[ extraWatch ]);\r\n}\r\n","import { useEffect, useRef } from \"react\";\r\n\r\n// helper hook to call a function regularly in time intervals\r\nlet DEBUG = false\r\n\r\nexport default function useOnBlock(provider, fn, args) {\r\n  const savedCallback = useRef();\r\n  // Remember the latest fn.\r\n  useEffect(() => {\r\n    savedCallback.current = fn;\r\n  }, [fn]);\r\n\r\n  // Turn on the listener if we have a function & a provider\r\n  useEffect(() => {\r\n  if (fn && provider) {\r\n\r\n    const listener = (blockNumber) => {\r\n      if (DEBUG) console.log(blockNumber, fn, args, provider.listeners())\r\n\r\n      if (args && args.length > 0) {\r\n        savedCallback.current(...args);\r\n      } else {\r\n        savedCallback.current();\r\n      }\r\n\r\n    }\r\n\r\n    provider.on(\"block\", listener)\r\n\r\n    return () => {\r\n        provider.off(\"block\", listener)\r\n    }\r\n}\r\n},[provider])\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport usePoller from \"./Poller\";\r\nimport useOnBlock from \"./OnBlock\";\r\nimport { Provider } from \"@ethersproject/providers\";\r\n\r\nconst DEBUG = false;\r\n\r\n/*\r\n  ~ What it does? ~\r\n\r\n  Enables you to read values from contracts and keep track of them in the local React states\r\n\r\n  ~ How can I use? ~\r\n\r\n  const purpose = useContractReader(readContracts,\"YourContract\", \"purpose\")\r\n\r\n  ~ Features ~\r\n\r\n  - Provide readContracts by loading contracts (see more on ContractLoader.js)\r\n  - Specify the name of the contract, in this case it is \"YourContract\"\r\n  - Specify the name of the variable in the contract, in this case we keep track of \"purpose\" variable\r\n  - Pass an args array if the function requires\r\n  - Pass pollTime - if no pollTime is specified, the function will update on every new block\r\n*/\r\n\r\nexport default function useContractReader(contracts, contractName, functionName, args, pollTime, formatter, onChange) {\r\n  let adjustPollTime = 0;\r\n  if (pollTime) {\r\n    adjustPollTime = pollTime;\r\n  } else if (!pollTime && typeof args === \"number\") {\r\n    // it's okay to pass poll time as last argument without args for the call\r\n    adjustPollTime = args;\r\n  }\r\n\r\n  const [value, setValue] = useState();\r\n  useEffect(() => {\r\n    if (typeof onChange === \"function\") {\r\n      setTimeout(onChange.bind(this, value), 1);\r\n    }\r\n  }, [value, onChange]);\r\n\r\n  const updateValue = async () => {\r\n    try {\r\n      let newValue;\r\n      if (DEBUG) console.log(\"CALLING \", contractName, functionName, \"with args\", args);\r\n      if (args && args.length > 0) {\r\n        newValue = await contracts[contractName][functionName](...args);\r\n        if (DEBUG)\r\n          console.log(\"contractName\", contractName, \"functionName\", functionName, \"args\", args, \"RESULT:\", newValue);\r\n      } else {\r\n        newValue = await contracts[contractName][functionName]();\r\n      }\r\n      if (formatter && typeof formatter === \"function\") {\r\n        newValue = formatter(newValue);\r\n      }\r\n      // console.log(\"GOT VALUE\",newValue)\r\n      if (newValue !== value) {\r\n        setValue(newValue);\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n// Only pass a provider to watch on a block if we have a contract and no PollTime\r\n  useOnBlock(\r\n    (contracts && contracts[contractName] && adjustPollTime === 0)&&contracts[contractName].provider,\r\n    () => {\r\n    if (contracts && contracts[contractName] && adjustPollTime === 0) {\r\n      updateValue()\r\n  }\r\n  })\r\n\r\n// Use a poller if a pollTime is provided\r\nusePoller(async () => {\r\n  if (contracts && contracts[contractName] && adjustPollTime > 0) {\r\n    if (DEBUG) console.log('polling!', contractName, functionName)\r\n    updateValue()\r\n  }\r\n}, adjustPollTime, contracts && contracts[contractName])\r\n\r\n  return value;\r\n}\r\n","import { useState, useEffect, useCallback } from \"react\";\r\nimport usePoller from \"./Poller\";\r\nimport useOnBlock from \"./OnBlock\";\r\n\r\n/*\r\n  ~ What it does? ~\r\n\r\n  Gets your balance in ETH from given address and provider\r\n\r\n  ~ How can I use? ~\r\n\r\n  const yourLocalBalance = useBalance(localProvider, address);\r\n\r\n  ~ Features ~\r\n\r\n  - Provide address and get balance corresponding to given address\r\n  - Change provider to access balance on different chains (ex. mainnetProvider)\r\n  - If no pollTime is passed, the balance will update on every new block\r\n*/\r\n\r\nlet DEBUG = false\r\n\r\nexport default function useBalance(provider, address, pollTime = 0) {\r\n\r\nconst [balance, setBalance] = useState();\r\n\r\nconst pollBalance = useCallback(async (provider, address) => {\r\n  if (provider && address) {\r\n    const newBalance = await provider.getBalance(address);\r\n    if (newBalance !== balance) {\r\n      setBalance(newBalance);\r\n    }\r\n  }\r\n}, [provider, address]);\r\n\r\n// Only pass a provider to watch on a block if there is no pollTime\r\nuseOnBlock((pollTime === 0)&&provider, () => {\r\n  if (provider && address && pollTime === 0) {\r\n    pollBalance(provider, address);\r\n}\r\n})\r\n\r\n// Use a poller if a pollTime is provided\r\nusePoller(async () => {\r\n  if (provider && address && pollTime > 0) {\r\n    if (DEBUG) console.log('polling!', address)\r\n    pollBalance()\r\n  }\r\n}, pollTime, provider && address)\r\n\r\nreturn balance;\r\n}\r\n","import { useState, useEffect } from \"react\";\r\n\r\n/*\r\n  ~ What it does? ~\r\n\r\n  Enables you to keep track of events \r\n\r\n  ~ How can I use? ~\r\n\r\n  const setPurposeEvents = useEventListener(readContracts, \"YourContract\", \"SetPurpose\", localProvider, 1);\r\n\r\n  ~ Features ~\r\n\r\n  - Provide readContracts by loading contracts (see more on ContractLoader.js)\r\n  - Specify the name of the contract, in this case it is \"YourContract\"\r\n  - Specify the name of the event in the contract, in this case we keep track of \"SetPurpose\" event\r\n  - Specify the provider \r\n*/\r\n\r\nexport default function useEventListener(contracts, contractName, eventName, provider, startBlock, args) {\r\n  const [updates, setUpdates] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (typeof provider !== \"undefined\" && typeof startBlock !== \"undefined\") {\r\n      // if you want to read _all_ events from your contracts, set this to the block number it is deployed\r\n      provider.resetEventsBlock(startBlock);\r\n    }\r\n    if (contracts && contractName && contracts[contractName]) {\r\n      try {\r\n        contracts[contractName].on(eventName, (...args) => {\r\n          let blockNumber = args[args.length-1].blockNumber\r\n          setUpdates(messages => [Object.assign({blockNumber},args.pop().args), ...messages]);\r\n        });\r\n        return () => {\r\n          contracts[contractName].removeListener(eventName);\r\n        };\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    }\r\n  }, [provider, startBlock, contracts, contractName, eventName]);\r\n\r\n  return updates;\r\n}\r\n","import { useState } from 'react';\r\n// Hook from useHooks! (https://usehooks.com/useLocalStorage/)\r\nexport default function useLocalStorage(key, initialValue, ttl) {\r\n  // State to store our value\r\n  // Pass initial state function to useState so logic is only executed once\r\n  const [storedValue, setStoredValue] = useState(() => {\r\n    try {\r\n      // Get from local storage by key\r\n      const item = window.localStorage.getItem(key);\r\n      let parsedItem = item ? JSON.parse(item) : initialValue;\r\n\r\n      if(typeof parsedItem === 'object' && parsedItem !== null\r\n        && 'expiry' in parsedItem && 'value' in parsedItem) {\r\n          const now = new Date()\r\n          if (ttl && now.getTime() > parsedItem.expiry) {\r\n        \t\t// If the item is expired, delete the item from storage\r\n        \t\t// and return null\r\n        \t\twindow.localStorage.removeItem(key)\r\n        \t\treturn initialValue\r\n        \t} else {\r\n            return parsedItem.value\r\n          }\r\n      }\r\n      // Parse stored json or if none return initialValue\r\n      return parsedItem\r\n    } catch (error) {\r\n      // If error also return initialValue\r\n      console.log(error);\r\n      return initialValue;\r\n    }\r\n  });\r\n\r\n  // Return a wrapped version of useState's setter function that ...\r\n  // ... persists the new value to localStorage.\r\n  const setValue = value => {\r\n    try {\r\n      // Allow value to be a function so we have same API as useState\r\n      const valueToStore =\r\n        value instanceof Function ? value(storedValue) : value;\r\n      // Save state\r\n      setStoredValue(valueToStore);\r\n      // Save to local storage\r\n      if(ttl) {\r\n        const now = new Date()\r\n\r\n        // `item` is an object which contains the original value\r\n        // as well as the time when it's supposed to expire\r\n        const item = {\r\n          value: valueToStore,\r\n          expiry: now.getTime() + ttl,\r\n        }\r\n        window.localStorage.setItem(key, JSON.stringify(item))\r\n      } else {\r\n        window.localStorage.setItem(key, JSON.stringify(valueToStore));\r\n      }\r\n    } catch (error) {\r\n      // A more advanced implementation would handle the error case\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return [storedValue, setValue];\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport { getAddress, isAddress } from \"@ethersproject/address\";\r\nimport { useLocalStorage } from \".\"\r\n\r\n// resolved if(name){} to not save \"\" into cache\r\n\r\n/*\r\n  ~ What it does? ~\r\n\r\n  Gets ENS name from given address and provider\r\n\r\n  ~ How can I use? ~\r\n\r\n  const ensName = useLookupAddress(mainnetProvider, address);\r\n\r\n  ~ Features ~\r\n\r\n  - Provide address and get ENS name corresponding to given address\r\n*/\r\n\r\nconst lookupAddress = async (provider, address) => {\r\n  if(isAddress(address)) {\r\n    //console.log(`looking up ${address}`)\r\n    try {\r\n      // Accuracy of reverse resolution is not enforced.\r\n      // We then manually ensure that the reported ens name resolves to address\r\n      const reportedName = await provider.lookupAddress(address);\r\n\r\n      const resolvedAddress = await provider.resolveName(reportedName);\r\n\r\n      if (getAddress(address) === getAddress(resolvedAddress)) {\r\n        return reportedName;\r\n      } else {\r\n        return getAddress(address)\r\n      }\r\n    } catch (e) {\r\n      return getAddress(address)\r\n    }\r\n  }\r\n  return 0;\r\n};\r\n\r\nconst useLookupAddress = (provider, address) => {\r\n  const [ensName, setEnsName] = useState(address);\r\n  //const [ensCache, setEnsCache] = useLocalStorage('ensCache_'+address); Writing directly due to sync issues\r\n\r\n  useEffect(() => {\r\n\r\n    let cache = window.localStorage.getItem('ensCache_'+address);\r\n    cache = cache && JSON.parse(cache)\r\n\r\n    if( cache && cache.timestamp>Date.now()){\r\n      setEnsName(cache.name)\r\n    }else{\r\n      if (provider) {\r\n        lookupAddress(provider, address).then((name) => {\r\n          if (name) {\r\n            setEnsName(name);\r\n            window.localStorage.setItem('ensCache_'+address, JSON.stringify({\r\n              timestamp:Date.now()+360000,\r\n              name:name\r\n            }))\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }, [provider, address, setEnsName]);\r\n\r\n  return ensName;\r\n};\r\n\r\nexport default useLookupAddress;\r\n","import React from \"react\";\r\nimport Blockies from \"react-blockies\";\r\nimport { Typography, Skeleton } from \"antd\";\r\nimport { useLookupAddress } from \"../hooks\";\r\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\r\n\r\n// changed value={address} to address={address}\r\n\r\n/*\r\n  ~ What it does? ~\r\n\r\n  Displays an address with a blockie image and option to copy address\r\n\r\n  ~ How can I use? ~\r\n\r\n  <Address\r\n    address={address}\r\n    ensProvider={mainnetProvider}\r\n    blockExplorer={blockExplorer}\r\n    fontSize={fontSize}\r\n  />\r\n\r\n  ~ Features ~\r\n\r\n  - Provide ensProvider={mainnetProvider} and your address will be replaced by ENS name\r\n              (ex. \"0xa870\" => \"user.eth\")\r\n  - Provide blockExplorer={blockExplorer}, click on address and get the link\r\n              (ex. by default \"https://etherscan.io/\" or for xdai \"https://blockscout.com/poa/xdai/\")\r\n  - Provide fontSize={fontSize} to change the size of address text\r\n*/\r\n\r\nconst { Text } = Typography;\r\n\r\nconst blockExplorerLink = (address, blockExplorer) => `${blockExplorer || \"https://etherscan.io/\"}${\"address/\"}${address}`;\r\n\r\nexport default function Address(props) {\r\n\r\n  const address = props.value || props.address;\r\n\r\n  const ens = useLookupAddress(props.ensProvider, address);\r\n\r\n  const { currentTheme } = useThemeSwitcher();\r\n\r\n  if (!address) {\r\n    return (\r\n      <span>\r\n        <Skeleton avatar paragraph={{ rows: 1 }} />\r\n      </span>\r\n    );\r\n  }\r\n\r\n  let displayAddress = address.substr(0, 6);\r\n\r\n  if (ens && ens.indexOf(\"0x\")<0) {\r\n    displayAddress = ens;\r\n  } else if (props.size === \"short\") {\r\n    displayAddress += \"...\" + address.substr(-4);\r\n  } else if (props.size === \"long\") {\r\n    displayAddress = address;\r\n  }\r\n\r\n  const etherscanLink = blockExplorerLink(address, props.blockExplorer);\r\n  if (props.minimized) {\r\n    return (\r\n      <span style={{ verticalAlign: \"middle\" }}>\r\n        <a style={{ color: currentTheme == \"light\" ? \"#222222\" : \"#ddd\" }} target={\"_blank\"} href={etherscanLink} rel=\"noopener noreferrer\">\r\n          <Blockies seed={address.toLowerCase()} size={8} scale={2} />\r\n        </a>\r\n      </span>\r\n    );\r\n  }\r\n\r\n  let text;\r\n  if (props.onChange) {\r\n    text = (\r\n      <Text editable={{ onChange: props.onChange }} copyable={{ text: address }}>\r\n        <a style={{ color: currentTheme == \"light\" ? \"#222222\" : \"#ddd\" }} target={\"_blank\"} href={etherscanLink} rel=\"noopener noreferrer\">\r\n          {displayAddress}\r\n        </a>\r\n      </Text>\r\n    );\r\n  } else {\r\n    text = (\r\n      <Text copyable={{ text: address }}>\r\n        <a style={{ color: currentTheme == \"light\" ? \"#222222\" : \"#ddd\" }} target={\"_blank\"} href={etherscanLink} rel=\"noopener noreferrer\">\r\n          {displayAddress}\r\n        </a>\r\n      </Text>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <span>\r\n      <span style={{ verticalAlign: \"middle\" }}>\r\n        <Blockies seed={address.toLowerCase()} size={8} scale={props.fontSize?props.fontSize/7:4} />\r\n      </span>\r\n      <span style={{ verticalAlign: \"middle\", paddingLeft: 5, fontSize: props.fontSize?props.fontSize:28 }}>{text}</span>\r\n    </span>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { formatEther } from \"@ethersproject/units\";\r\nimport { usePoller } from \"eth-hooks\";\r\nimport { useBalance } from \"../hooks\"\r\n\r\n/*\r\n  ~ What it does? ~\r\n\r\n  Displays a balance of given address in ether & dollar\r\n\r\n  ~ How can I use? ~\r\n\r\n  <Balance\r\n    address={address}\r\n    provider={mainnetProvider}\r\n    price={price}\r\n  />\r\n\r\n  ~ If you already have the balance as a bignumber ~\r\n  <Balance\r\n    balance={balance}\r\n    price={price}\r\n  />\r\n  \r\n  <Balance\r\n    balance={hardCodedBalance}\r\n    dollarMultiplier={props.price}\r\n  />\r\n\r\n  ~ Features ~\r\n\r\n  - Provide address={address} and get balance corresponding to given address\r\n  - Provide provider={mainnetProvider} to access balance on mainnet or any other network (ex. localProvider)\r\n  - Provide price={price} of ether and get your balance converted to dollars\r\n*/\r\n\r\n\r\nexport default function Balance(props) {\r\n  const [dollarMode, setDollarMode] = useState(true);\r\n\r\n  const [listening, setListening] = useState(false);\r\n\r\n  const balance = useBalance(props.provider, props.address)\r\n\r\n  let floatBalance = parseFloat(\"0.00\");\r\n\r\n  let usingBalance = balance;\r\n\r\n  if (typeof props.balance !== \"undefined\") {\r\n    usingBalance = props.balance;\r\n  }\r\n  if (typeof props.value !== \"undefined\") {\r\n    usingBalance = props.value;\r\n  }\r\n\r\n  if (usingBalance) {\r\n    const etherBalance = formatEther(usingBalance);\r\n    parseFloat(etherBalance).toFixed(2);\r\n    floatBalance = parseFloat(etherBalance);\r\n  }\r\n\r\n  let displayBalance = floatBalance.toFixed(4);\r\n\r\n  const price = props.price || props.dollarMultiplier\r\n\r\n  if (price && dollarMode) {\r\n    displayBalance = \"$\" + (floatBalance * price).toFixed(2);\r\n  }\r\n\r\n  return (\r\n    <span\r\n      style={{\r\n        verticalAlign: \"middle\",\r\n        fontSize: props.fontSize ? props.fontSize : 24,\r\n        padding: 8,\r\n        cursor: \"pointer\",\r\n      }}\r\n      onClick={() => {\r\n        setDollarMode(!dollarMode);\r\n      }}\r\n    >\r\n      {displayBalance}\r\n    </span>\r\n  );\r\n}\r\n","import { hexlify } from \"@ethersproject/bytes\";\r\nimport { parseUnits } from \"@ethersproject/units\";\r\nimport { notification } from \"antd\";\r\nimport { BLOCKNATIVE_DAPPID, } from \"../constants\";\r\n\r\nimport Notify from \"bnc-notify\";\r\n\r\n// this should probably just be renamed to \"notifier\"\r\n// it is basically just a wrapper around BlockNative's wonderful Notify.js\r\n// https://docs.blocknative.com/notify\r\n\r\nexport default function Transactor(provider, gasPrice, etherscan) {\r\n  if (typeof provider !== \"undefined\") {\r\n    // eslint-disable-next-line consistent-return\r\n    return async tx => {\r\n      const signer = provider.getSigner();\r\n      const network = await provider.getNetwork();\r\n      console.log(\"network\", network);\r\n      const options = {\r\n        dappId: \"6cf66bae-0fa2-4d79-a97a-1eff0061117c\", // GET YOUR OWN KEY AT https://account.blocknative.com\r\n        system: \"ethereum\",\r\n        networkId: network.chainId,\r\n        // darkMode: Boolean, // (default: false)\r\n        transactionHandler: txInformation => {\r\n          console.log(\"HANDLE TX\", txInformation);\r\n        },\r\n      };\r\n      const notify = Notify(options);\r\n\r\n      let etherscanNetwork = \"\";\r\n      if (network.name && network.chainId > 1) {\r\n        etherscanNetwork = network.name + \".\";\r\n      }\r\n\r\n      let etherscanTxUrl = \"https://\" + etherscanNetwork + \"etherscan.io/tx/\";\r\n      if (network.chainId === 100) {\r\n        etherscanTxUrl = \"https://blockscout.com/poa/xdai/tx/\";\r\n      }\r\n\r\n      try {\r\n        let result;\r\n        if (tx instanceof Promise) {\r\n          console.log(\"AWAITING TX\", tx);\r\n          result = await tx;\r\n        } else {\r\n          if (!tx.gasPrice) {\r\n            tx.gasPrice = gasPrice || parseUnits(\"4.1\", \"gwei\");\r\n          }\r\n          if (!tx.gasLimit) {\r\n            tx.gasLimit = hexlify(120000);\r\n          }\r\n          console.log(\"RUNNING TX\", tx);\r\n          result = await signer.sendTransaction(tx);\r\n        }\r\n        console.log(\"RESULT:\", result);\r\n        console.log(\"Notify\", notify);\r\n\r\n        // if it is a valid Notify.js network, use that, if not, just send a default notification\r\n        if ([1, 3, 4, 5, 42, 100].indexOf(network.chainId) >= 0) {\r\n          const { emitter } = notify.hash(result.hash);\r\n          emitter.on(\"all\", transaction => {\r\n            return {\r\n              onclick: () => window.open((etherscan || etherscanTxUrl) + transaction.hash),\r\n            };\r\n          });\r\n        } else {\r\n          notification.info({\r\n            message: \"Local Transaction Sent\",\r\n            description: result.hash,\r\n            placement: \"bottomRight\",\r\n          });\r\n        }\r\n\r\n        return result;\r\n      } catch (e) {\r\n        console.log(e);\r\n        console.log(\"Transaction Error:\", e.message);\r\n        notification.error({\r\n          message: \"Transaction Error\",\r\n          description: e.message,\r\n        });\r\n      }\r\n    };\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Blockies from \"react-blockies\";\r\n\r\n// provides a blockie image for the address using \"react-blockies\" library\r\n\r\nexport default function Blockie(props) {\r\n  if (!props.address || typeof props.address.toLowerCase !== \"function\") {\r\n    return <span />;\r\n  }\r\n  // eslint-disable-next-line react/jsx-props-no-spreading\r\n  return <Blockies seed={props.address.toLowerCase()} {...props} />;\r\n}\r\n","import React, { useState, useCallback } from \"react\";\r\nimport QrReader from \"react-qr-reader\";\r\nimport { CameraOutlined, QrcodeOutlined } from \"@ant-design/icons\";\r\nimport { Input, Badge } from \"antd\";\r\nimport { useLookupAddress } from \"eth-hooks\";\r\nimport Blockie from \"./Blockie\";\r\n\r\n// probably we need to change value={toAddress} to address={toAddress}\r\n\r\n/*\r\n  ~ What it does? ~\r\n\r\n  Displays an address input with QR scan option\r\n\r\n  ~ How can I use? ~\r\n\r\n  <AddressInput\r\n    autoFocus\r\n    ensProvider={mainnetProvider}\r\n    placeholder=\"Enter address\"\r\n    value={toAddress}\r\n    onChange={setToAddress}\r\n  />\r\n\r\n  ~ Features ~\r\n\r\n  - Provide ensProvider={mainnetProvider} and your address will be replaced by ENS name\r\n              (ex. \"0xa870\" => \"user.eth\") or you can enter directly ENS name instead of address\r\n  - Provide placeholder=\"Enter address\" value for the input\r\n  - Value of the address input is stored in value={toAddress}\r\n  - Control input change by onChange={setToAddress} \r\n                          or onChange={address => { setToAddress(address);}}\r\n*/\r\n\r\nexport default function AddressInput(props) {\r\n  const [value, setValue] = useState(props.value);\r\n  const [scan, setScan] = useState(false);\r\n\r\n  const currentValue = typeof props.value !== \"undefined\" ? props.value : value;\r\n  const ens = useLookupAddress(props.ensProvider, currentValue);\r\n\r\n  const scannerButton = (\r\n    <div\r\n      style={{ marginTop: 4, cursor: \"pointer\" }}\r\n      onClick={() => {\r\n        setScan(!scan);\r\n      }}\r\n    >\r\n      <Badge count={<CameraOutlined style={{ fontSize: 9 }} />}>\r\n        <QrcodeOutlined style={{ fontSize: 18 }} />\r\n      </Badge>{\" \"}\r\n      Scan\r\n    </div>\r\n  );\r\n\r\n  const {ensProvider, onChange} = props;\r\n  const updateAddress = useCallback(\r\n    async newValue => {\r\n      if (typeof newValue !== \"undefined\") {\r\n        let address = newValue;\r\n        if (address.indexOf(\".eth\") > 0 || address.indexOf(\".xyz\") > 0) {\r\n          try {\r\n            const possibleAddress = await ensProvider.resolveName(address);\r\n            if (possibleAddress) {\r\n              address = possibleAddress;\r\n            }\r\n            // eslint-disable-next-line no-empty\r\n          } catch (e) {}\r\n        }\r\n        setValue(address);\r\n        if (typeof onChange === \"function\") {\r\n          onChange(address);\r\n        }\r\n      }\r\n    },\r\n    [ensProvider, onChange],\r\n  );\r\n\r\n  const scanner = scan ? (\r\n    <div\r\n      style={{\r\n        zIndex: 256,\r\n        position: \"absolute\",\r\n        left: 0,\r\n        top: 0,\r\n        width: \"100%\",\r\n      }}\r\n      onClick={() => {\r\n        setScan(false);\r\n      }}\r\n    >\r\n      <QrReader\r\n        delay={250}\r\n        resolution={1200}\r\n        onError={e => {\r\n          console.log(\"SCAN ERROR\", e);\r\n          setScan(false);\r\n        }}\r\n        onScan={newValue => {\r\n          if (newValue) {\r\n            console.log(\"SCAN VALUE\", newValue);\r\n            let possibleNewValue = newValue;\r\n            if (possibleNewValue.indexOf(\"/\") >= 0) {\r\n              possibleNewValue = possibleNewValue.substr(possibleNewValue.lastIndexOf(\"0x\"));\r\n              console.log(\"CLEANED VALUE\", possibleNewValue);\r\n            }\r\n            setScan(false);\r\n            updateAddress(possibleNewValue);\r\n          }\r\n        }}\r\n        style={{ width: \"100%\" }}\r\n      />\r\n    </div>\r\n  ) : (\r\n    \"\"\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      {scanner}\r\n      <Input\r\n        id={\"0xAddress\"}//name it something other than address for auto fill doxxing\r\n        name={\"0xAddress\"}//name it something other than address for auto fill doxxing\r\n        autoComplete=\"off\"\r\n        autoFocus={props.autoFocus}\r\n        placeholder={props.placeholder ? props.placeholder : \"address\"}\r\n        prefix={<Blockie address={currentValue} size={8} scale={3} />}\r\n        value={ens || currentValue}\r\n        addonAfter={scannerButton}\r\n        onChange={e => {\r\n          updateAddress(e.target.value);\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Input } from \"antd\";\r\n\r\n// small change in useEffect, display currentValue if it's provided by user\r\n\r\n/*\r\n  ~ What it does? ~\r\n\r\n  Displays input field for ETH/USD amount, with an option to convert between ETH and USD\r\n\r\n  ~ How can I use? ~\r\n\r\n  <EtherInput\r\n    autofocus\r\n    price={price}\r\n    value=100\r\n    placeholder=\"Enter amount\"\r\n    onChange={value => {\r\n      setAmount(value);\r\n    }}\r\n  />\r\n\r\n  ~ Features ~\r\n\r\n  - Provide price={price} of ether and easily convert between USD and ETH\r\n  - Provide value={value} to specify initial amount of ether\r\n  - Provide placeholder=\"Enter amount\" value for the input\r\n  - Control input change by onChange={value => { setAmount(value);}}\r\n*/\r\n\r\nexport default function EtherInput(props) {\r\n  const [mode, setMode] = useState(\"USD\");\r\n  const [display, setDisplay] = useState();\r\n  const [value, setValue] = useState();\r\n\r\n  const currentValue = typeof props.value !== \"undefined\" ? props.value : value;\r\n\r\n  const option = title => {\r\n    if (!props.price) return \"\";\r\n    return (\r\n      <div\r\n        style={{ cursor: \"pointer\" }}\r\n        onClick={() => {\r\n          if (mode === \"USD\") {\r\n            setMode(\"ETH\");\r\n            setDisplay(currentValue);\r\n          } else {\r\n            setMode(\"USD\");\r\n            if (currentValue) {\r\n              const usdValue = \"\" + (parseFloat(currentValue) * props.price).toFixed(2);\r\n              setDisplay(usdValue);\r\n            } else {\r\n              setDisplay(currentValue);\r\n            }\r\n          }\r\n        }}\r\n      >\r\n        {title}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  let prefix;\r\n  let addonAfter;\r\n  if (mode === \"USD\") {\r\n    prefix = \"$\";\r\n    addonAfter = option(\"USD 🔀\");\r\n  } else {\r\n    prefix = \"Ξ\";\r\n    addonAfter = option(\"ETH 🔀\");\r\n  }\r\n\r\n  useEffect(\r\n    ()=>{\r\n      if(!currentValue){\r\n        setDisplay(\"\");\r\n      }\r\n    }\r\n  ,[ currentValue ])\r\n\r\n  return (\r\n    <Input\r\n      placeholder={props.placeholder ? props.placeholder : \"amount in \" + mode}\r\n      autoFocus={props.autoFocus}\r\n      prefix={prefix}\r\n      value={display}\r\n      addonAfter={addonAfter}\r\n      onChange={async e => {\r\n        const newValue = e.target.value;\r\n        if (mode === \"USD\") {\r\n          const possibleNewValue = parseFloat(newValue)\r\n          if(possibleNewValue){\r\n            const ethValue = possibleNewValue / props.price;\r\n            setValue(ethValue);\r\n            if (typeof props.onChange === \"function\") {\r\n              props.onChange(ethValue);\r\n            }\r\n            setDisplay(newValue);\r\n          }else{\r\n            setDisplay(newValue);\r\n          }\r\n        } else {\r\n          setValue(newValue);\r\n          if (typeof props.onChange === \"function\") {\r\n            props.onChange(newValue);\r\n          }\r\n          setDisplay(newValue);\r\n        }\r\n      }}\r\n    />\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { WalletOutlined, QrcodeOutlined, SendOutlined, KeyOutlined } from \"@ant-design/icons\";\r\nimport { Tooltip, Spin, Modal, Button, Typography } from \"antd\";\r\nimport QR from \"qrcode.react\";\r\nimport { parseEther } from \"@ethersproject/units\";\r\nimport { useUserAddress } from \"eth-hooks\";\r\nimport { Transactor } from \"../helpers\";\r\nimport Address from \"./Address\";\r\nimport Balance from \"./Balance\";\r\nimport AddressInput from \"./AddressInput\";\r\nimport EtherInput from \"./EtherInput\";\r\nimport { ethers } from \"ethers\";\r\nconst { Text, Paragraph } = Typography;\r\n\r\n/*\r\n  ~ What it does? ~\r\n\r\n  Displays a wallet where you can specify address and send USD/ETH, with options to\r\n  scan address, to convert between USD and ETH, to see and generate private keys,\r\n  to send, receive and extract the burner wallet\r\n\r\n  ~ How can I use? ~\r\n\r\n  <Wallet\r\n    provider={userProvider}\r\n    address={address}\r\n    ensProvider={mainnetProvider}\r\n    price={price}\r\n    color='red'\r\n  />\r\n\r\n  ~ Features ~\r\n\r\n  - Provide provider={userProvider} to display a wallet\r\n  - Provide address={address} if you want to specify address, otherwise\r\n                                                    your default address will be used\r\n  - Provide ensProvider={mainnetProvider} and your address will be replaced by ENS name\r\n              (ex. \"0xa870\" => \"user.eth\") or you can enter directly ENS name instead of address\r\n  - Provide price={price} of ether and easily convert between USD and ETH\r\n  - Provide color to specify the color of wallet icon\r\n*/\r\n\r\nexport default function Wallet(props) {\r\n  const signerAddress = useUserAddress(props.provider);\r\n  const selectedAddress = props.address || signerAddress;\r\n\r\n  const [open, setOpen] = useState();\r\n  const [qr, setQr] = useState();\r\n  const [amount, setAmount] = useState();\r\n  const [toAddress, setToAddress] = useState();\r\n  const [pk, setPK] = useState()\r\n\r\n  const providerSend = props.provider ? (\r\n    <Tooltip title=\"Wallet\">\r\n      <WalletOutlined\r\n        onClick={() => {\r\n          setOpen(!open);\r\n        }}\r\n        rotate={-90}\r\n        style={{\r\n          padding: 7,\r\n          color: props.color ? props.color : \"\",\r\n          cursor: \"pointer\",\r\n          fontSize: 28,\r\n          verticalAlign: \"middle\",\r\n        }}\r\n      />\r\n    </Tooltip>\r\n  ) : (\r\n    \"\"\r\n  );\r\n\r\n  let display;\r\n  let receiveButton;\r\n  let privateKeyButton\r\n  if (qr) {\r\n    display = (\r\n      <div>\r\n        <div>\r\n          <Text copyable>{selectedAddress}</Text>\r\n        </div>\r\n        <QR\r\n          value={selectedAddress}\r\n          size=\"450\"\r\n          level=\"H\"\r\n          includeMargin\r\n          renderAs=\"svg\"\r\n          imageSettings={{ excavate: false }}\r\n        />\r\n      </div>\r\n    );\r\n    receiveButton = (\r\n      <Button\r\n        key=\"hide\"\r\n        onClick={() => {\r\n          setQr(\"\");\r\n        }}\r\n      >\r\n        <QrcodeOutlined /> Hide\r\n      </Button>\r\n    );\r\n    privateKeyButton = (\r\n     <Button key=\"hide\" onClick={()=>{setPK(selectedAddress);setQr(\"\")}}>\r\n       <KeyOutlined /> Private Key\r\n     </Button>\r\n   )\r\n }else if(pk){\r\n\r\n   let pk = localStorage.getItem(\"metaPrivateKey\")\r\n   let wallet = new ethers.Wallet(pk)\r\n\r\n   if(wallet.address!==selectedAddress){\r\n     display = (\r\n       <div>\r\n         <b>*injected account*, private key unknown</b>\r\n       </div>\r\n     )\r\n   }else{\r\n\r\n     let extraPkDisplayAdded = {}\r\n     let extraPkDisplay = []\r\n     extraPkDisplayAdded[wallet.address] = true\r\n     extraPkDisplay.push(\r\n       <div style={{fontSize:16,padding:2,backgroundStyle:\"#89e789\"}}>\r\n          <a href={\"/pk#\"+pk}>\r\n            <Address minimized={true} address={wallet.address} ensProvider={props.ensProvider} /> {wallet.address.substr(0,6)}\r\n          </a>\r\n       </div>\r\n     )\r\n     for (var key in localStorage){\r\n       if(key.indexOf(\"metaPrivateKey_backup\")>=0){\r\n         console.log(key)\r\n         let pastpk = localStorage.getItem(key)\r\n         let pastwallet = new ethers.Wallet(pastpk)\r\n         if(!extraPkDisplayAdded[pastwallet.address] /*&& selectedAddress!=pastwallet.address*/){\r\n           extraPkDisplayAdded[pastwallet.address] = true\r\n           extraPkDisplay.push(\r\n             <div style={{fontSize:16}}>\r\n                <a href={\"/pk#\"+pastpk}>\r\n                  <Address minimized={true} address={pastwallet.address} ensProvider={props.ensProvider} /> {pastwallet.address.substr(0,6)}\r\n                </a>\r\n             </div>\r\n           )\r\n         }\r\n       }\r\n     }\r\n\r\n\r\n     display = (\r\n       <div>\r\n         <b>Private Key:</b>\r\n\r\n         <div>\r\n          <Text copyable>{pk}</Text>\r\n          </div>\r\n\r\n          <hr/>\r\n\r\n         <i>Point your kcamera phone at qr code to open in\r\n           <a target=\"_blank\" href={\"https://xdai.io/\"+pk} rel=\"noopener noreferrer\">burner wallet</a>:\r\n         </i>\r\n         <QR value={\"https://xdai.io/\"+pk} size={\"450\"} level={\"H\"} includeMargin={true} renderAs={\"svg\"} imageSettings={{excavate:false}}/>\r\n\r\n         <Paragraph style={{fontSize:\"16\"}} copyable>{\"https://xdai.io/\"+pk}</Paragraph>\r\n\r\n         {extraPkDisplay?(\r\n           <div>\r\n             <h3>\r\n              Known Private Keys:\r\n             </h3>\r\n             {extraPkDisplay}\r\n             <Button onClick={()=>{\r\n               let currentPrivateKey = window.localStorage.getItem(\"metaPrivateKey\");\r\n               if(currentPrivateKey){\r\n                 window.localStorage.setItem(\"metaPrivateKey_backup\"+Date.now(),currentPrivateKey);\r\n               }\r\n               const randomWallet = ethers.Wallet.createRandom()\r\n               const privateKey = randomWallet._signingKey().privateKey\r\n               window.localStorage.setItem(\"metaPrivateKey\",privateKey);\r\n               window.location.reload()\r\n             }}>\r\n              Generate\r\n             </Button>\r\n           </div>\r\n         ):\"\"}\r\n\r\n       </div>\r\n     )\r\n   }\r\n\r\n   receiveButton = (\r\n     <Button key=\"receive\" onClick={()=>{setQr(selectedAddress);setPK(\"\")}}>\r\n       <QrcodeOutlined /> Receive\r\n     </Button>\r\n   )\r\n   privateKeyButton = (\r\n     <Button key=\"hide\" onClick={()=>{setPK(\"\");setQr(\"\")}}>\r\n       <KeyOutlined /> Hide\r\n     </Button>\r\n   )\r\n  } else {\r\n    const inputStyle = {\r\n      padding: 10,\r\n    };\r\n\r\n    display = (\r\n      <div>\r\n        <div style={inputStyle}>\r\n          <AddressInput\r\n            autoFocus\r\n            ensProvider={props.ensProvider}\r\n            placeholder=\"to address\"\r\n            address={toAddress}\r\n            onChange={setToAddress}\r\n          />\r\n        </div>\r\n        <div style={inputStyle}>\r\n          <EtherInput\r\n            price={props.price}\r\n            value={amount}\r\n            onChange={value => {\r\n              setAmount(value);\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n    receiveButton = (\r\n      <Button\r\n        key=\"receive\"\r\n        onClick={() => {\r\n          setQr(selectedAddress);\r\n          setPK(\"\");\r\n        }}\r\n      >\r\n        <QrcodeOutlined /> Receive\r\n      </Button>\r\n    );\r\n    privateKeyButton = (\r\n      <Button key=\"hide\" onClick={()=>{setPK(selectedAddress);setQr(\"\")}}>\r\n        <KeyOutlined /> Private Key\r\n      </Button>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <span>\r\n      {providerSend}\r\n      <Modal\r\n        visible={open}\r\n        title={\r\n          <div>\r\n            {selectedAddress ? <Address address={selectedAddress} ensProvider={props.ensProvider} /> : <Spin />}\r\n            <div style={{ float: \"right\", paddingRight: 25 }}>\r\n              <Balance address={selectedAddress} provider={props.provider} dollarMultiplier={props.price} />\r\n            </div>\r\n          </div>\r\n        }\r\n        onOk={() => {\r\n          setQr();\r\n          setPK();\r\n          setOpen(!open);\r\n        }}\r\n        onCancel={() => {\r\n          setQr();\r\n          setPK();\r\n          setOpen(!open);\r\n        }}\r\n        footer={[\r\n          privateKeyButton, receiveButton,\r\n          <Button\r\n            key=\"submit\"\r\n            type=\"primary\"\r\n            disabled={!amount || !toAddress || qr}\r\n            loading={false}\r\n            onClick={() => {\r\n              const tx = Transactor(props.provider);\r\n\r\n              let value;\r\n              try {\r\n                value = parseEther(\"\" + amount);\r\n              } catch (e) {\r\n                // failed to parseEther, try something else\r\n                value = parseEther(\"\" + parseFloat(amount).toFixed(8));\r\n              }\r\n\r\n              tx({\r\n                to: toAddress,\r\n                value,\r\n              });\r\n              setOpen(!open);\r\n              setQr();\r\n            }}\r\n          >\r\n            <SendOutlined /> Send\r\n          </Button>,\r\n        ]}\r\n      >\r\n        {display}\r\n      </Modal>\r\n    </span>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { WalletOutlined, QrcodeOutlined, SendOutlined, KeyOutlined } from \"@ant-design/icons\";\r\nimport { Tooltip, Spin, Modal, Button, Typography } from \"antd\";\r\nimport QR from \"qrcode.react\";\r\nimport { parseEther } from \"@ethersproject/units\";\r\nimport { useUserAddress } from \"eth-hooks\";\r\nimport { ethers } from \"ethers\";\r\nimport { Transactor } from \"../helpers\";\r\nimport Address from \"./Address\";\r\nimport Balance from \"./Balance\";\r\nimport AddressInput from \"./AddressInput\";\r\nimport EtherInput from \"./EtherInput\";\r\n\r\nconst { Text, Paragraph } = Typography;\r\n\r\n/*\r\n  ~ What it does? ~\r\n\r\n  Displays a wallet where you can specify address and send USD/ETH, with options to\r\n  scan address, to convert between USD and ETH, to see and generate private keys,\r\n  to send, receive and extract the burner wallet\r\n\r\n  ~ How can I use? ~\r\n\r\n  <Wallet\r\n    provider={userProvider}\r\n    address={address}\r\n    ensProvider={mainnetProvider}\r\n    price={price}\r\n    color='red'\r\n  />\r\n\r\n  ~ Features ~\r\n\r\n  - Provide provider={userProvider} to display a wallet\r\n  - Provide address={address} if you want to specify address, otherwise\r\n                                                    your default address will be used\r\n  - Provide ensProvider={mainnetProvider} and your address will be replaced by ENS name\r\n              (ex. \"0xa870\" => \"user.eth\") or you can enter directly ENS name instead of address\r\n  - Provide price={price} of ether and easily convert between USD and ETH\r\n  - Provide color to specify the color of wallet icon\r\n*/\r\n\r\nexport default function Wallet(props) {\r\n  const signerAddress = useUserAddress(props.provider);\r\n  const selectedAddress = props.address || signerAddress;\r\n\r\n  const [open, setOpen] = useState();\r\n  const [qr, setQr] = useState();\r\n  const [amount, setAmount] = useState();\r\n  const [toAddress, setToAddress] = useState();\r\n  const [pk, setPK] = useState();\r\n\r\n  const providerSend = props.provider ? (\r\n    <Tooltip title=\"Wallet\">\r\n      <WalletOutlined\r\n        onClick={() => {\r\n          setOpen(!open);\r\n        }}\r\n        rotate={-90}\r\n        style={{\r\n          padding: 7,\r\n          color: props.color ? props.color : \"#1890ff\",\r\n          cursor: \"pointer\",\r\n          fontSize: 28,\r\n          verticalAlign: \"middle\",\r\n        }}\r\n      />\r\n    </Tooltip>\r\n  ) : (\r\n    \"\"\r\n  );\r\n\r\n  let display;\r\n  let receiveButton;\r\n  let privateKeyButton;\r\n  if (qr) {\r\n    display = (\r\n      <div>\r\n        <div>\r\n          <Text copyable>{selectedAddress}</Text>\r\n        </div>\r\n        <QR\r\n          value={selectedAddress}\r\n          size=\"450\"\r\n          level=\"H\"\r\n          includeMargin\r\n          renderAs=\"svg\"\r\n          imageSettings={{ excavate: false }}\r\n        />\r\n      </div>\r\n    );\r\n    receiveButton = (\r\n      <Button\r\n        key=\"hide\"\r\n        onClick={() => {\r\n          setQr(\"\");\r\n        }}\r\n      >\r\n        <QrcodeOutlined /> Hide\r\n      </Button>\r\n    );\r\n    privateKeyButton = (\r\n      <Button\r\n        key=\"hide\"\r\n        onClick={() => {\r\n          setPK(selectedAddress);\r\n          setQr(\"\");\r\n        }}\r\n      >\r\n        <KeyOutlined /> Private Key\r\n      </Button>\r\n    );\r\n  } else if (pk) {\r\n    const pk = localStorage.getItem(\"metaPrivateKey\");\r\n    const wallet = new ethers.Wallet(pk);\r\n\r\n    if (wallet.address !== selectedAddress) {\r\n      display = (\r\n        <div>\r\n          <b>*injected account*, private key unknown</b>\r\n        </div>\r\n      );\r\n    } else {\r\n      const extraPkDisplayAdded = {};\r\n      const extraPkDisplay = [];\r\n      extraPkDisplayAdded[wallet.address] = true;\r\n      extraPkDisplay.push(\r\n        <div style={{ fontSize: 16, padding: 2, backgroundStyle: \"#89e789\" }}>\r\n          <a href={\"/pk#\" + pk}>\r\n            <Address minimized address={wallet.address} ensProvider={props.ensProvider} /> {wallet.address.substr(0, 6)}\r\n          </a>\r\n        </div>,\r\n      );\r\n      for (const key in localStorage) {\r\n        if (key.indexOf(\"metaPrivateKey_backup\") >= 0) {\r\n          console.log(key);\r\n          const pastpk = localStorage.getItem(key);\r\n          const pastwallet = new ethers.Wallet(pastpk);\r\n          if (!extraPkDisplayAdded[pastwallet.address] /* && selectedAddress!=pastwallet.address */) {\r\n            extraPkDisplayAdded[pastwallet.address] = true;\r\n            extraPkDisplay.push(\r\n              <div style={{ fontSize: 16 }}>\r\n                <a href={\"/pk#\" + pastpk}>\r\n                  <Address minimized address={pastwallet.address} ensProvider={props.ensProvider} />{\" \"}\r\n                  {pastwallet.address.substr(0, 6)}\r\n                </a>\r\n              </div>,\r\n            );\r\n          }\r\n        }\r\n      }\r\n\r\n      display = (\r\n        <div>\r\n          <b>Private Key:</b>\r\n\r\n          <div>\r\n            <Text copyable>{pk}</Text>\r\n          </div>\r\n\r\n          <hr />\r\n\r\n          <i>\r\n            TD Point your camera phone at qr code to open in\r\n            <a target=\"_blank\" href={\"https://xdai.io/\" + pk} rel=\"noopener noreferrer\">\r\n              burner wallet\r\n            </a>\r\n            :\r\n          </i>\r\n          <QR\r\n            value={\"https://xdai.io/\" + pk}\r\n            size=\"450\"\r\n            level=\"H\"\r\n            includeMargin\r\n            renderAs=\"svg\"\r\n            imageSettings={{ excavate: false }}\r\n          />\r\n\r\n          <Paragraph style={{ fontSize: \"16\" }} copyable>\r\n            {\"https://xdai.io/\" + pk}\r\n          </Paragraph>\r\n\r\n          {extraPkDisplay ? (\r\n            <div>\r\n              <h3>Known Private Keys:</h3>\r\n              {extraPkDisplay}\r\n              <Button\r\n                onClick={() => {\r\n                  const currentPrivateKey = window.localStorage.getItem(\"metaPrivateKey\");\r\n                  if (currentPrivateKey) {\r\n                    window.localStorage.setItem(\"metaPrivateKey_backup\" + Date.now(), currentPrivateKey);\r\n                  }\r\n                  const randomWallet = ethers.Wallet.createRandom();\r\n                  const privateKey = randomWallet._signingKey().privateKey;\r\n                  window.localStorage.setItem(\"metaPrivateKey\", privateKey);\r\n                  window.location.reload();\r\n                }}\r\n              >\r\n                Generate\r\n              </Button>\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    receiveButton = (\r\n      <Button\r\n        key=\"receive\"\r\n        onClick={() => {\r\n          setQr(selectedAddress);\r\n          setPK(\"\");\r\n        }}\r\n      >\r\n        <QrcodeOutlined /> Receive\r\n      </Button>\r\n    );\r\n    privateKeyButton = (\r\n      <Button\r\n        key=\"hide\"\r\n        onClick={() => {\r\n          setPK(\"\");\r\n          setQr(\"\");\r\n        }}\r\n      >\r\n        <KeyOutlined /> Hide\r\n      </Button>\r\n    );\r\n  } else {\r\n    const inputStyle = {\r\n      padding: 10,\r\n    };\r\n\r\n    display = (\r\n      <div>\r\n        <div style={inputStyle}>\r\n          <AddressInput\r\n            autoFocus\r\n            ensProvider={props.ensProvider}\r\n            placeholder=\"to address\"\r\n            address={toAddress}\r\n            onChange={setToAddress}\r\n          />\r\n        </div>\r\n        <div style={inputStyle}>\r\n          <EtherInput\r\n            price={props.price}\r\n            value={amount}\r\n            onChange={value => {\r\n              setAmount(value);\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n    receiveButton = (\r\n      <Button\r\n        key=\"receive\"\r\n        onClick={() => {\r\n          setQr(selectedAddress);\r\n          setPK(\"\");\r\n        }}\r\n      >\r\n        <QrcodeOutlined /> Receive\r\n      </Button>\r\n    );\r\n    privateKeyButton = (\r\n      <Button\r\n        key=\"hide\"\r\n        onClick={() => {\r\n          setPK(selectedAddress);\r\n          setQr(\"\");\r\n        }}\r\n      >\r\n        <KeyOutlined /> Private Key\r\n      </Button>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <span>\r\n      {providerSend}\r\n      <Modal\r\n        visible={open}\r\n        title={\r\n          <div>\r\n            {selectedAddress ? <Address address={selectedAddress} ensProvider={props.ensProvider} /> : <Spin />}\r\n            <div style={{ float: \"right\", paddingRight: 25 }}>\r\n              <Balance address={selectedAddress} provider={props.provider} dollarMultiplier={props.price} />\r\n            </div>\r\n          </div>\r\n        }\r\n        onOk={() => {\r\n          setQr();\r\n          setPK();\r\n          setOpen(!open);\r\n        }}\r\n        onCancel={() => {\r\n          setQr();\r\n          setPK();\r\n          setOpen(!open);\r\n        }}\r\n        footer={[\r\n          privateKeyButton,\r\n          receiveButton,\r\n          <Button\r\n            key=\"submit\"\r\n            type=\"primary\"\r\n            disabled={!amount || !toAddress || qr}\r\n            loading={false}\r\n            onClick={() => {\r\n              const tx = Transactor(props.provider);\r\n\r\n              let value;\r\n              try {\r\n                value = parseEther(\"\" + amount);\r\n              } catch (e) {\r\n                // failed to parseEther, try something else\r\n                value = parseEther(\"\" + parseFloat(amount).toFixed(8));\r\n              }\r\n\r\n              tx({\r\n                to: toAddress,\r\n                value,\r\n              });\r\n              setOpen(!open);\r\n              setQr();\r\n            }}\r\n          >\r\n            <SendOutlined /> Send\r\n          </Button>,\r\n        ]}\r\n      >\r\n        {display}\r\n      </Modal>\r\n    </span>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Button } from \"antd\";\r\nimport Address from \"./Address\";\r\nimport Balance from \"./Balance\";\r\nimport Wallet from \"./Wallet\";\r\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\r\nimport TransactionDetails from \"./TransactionDetails\";\r\n\r\n/*\r\n  ~ What it does? ~\r\n\r\n  Displays an Address, Balance, and Wallet as one Account component,\r\n  also allows users to log in to existing accounts and log out\r\n\r\n  ~ How can I use? ~\r\n\r\n  <Account\r\n    address={address}\r\n    localProvider={localProvider}\r\n    userProvider={userProvider}\r\n    mainnetProvider={mainnetProvider}\r\n    price={price}\r\n    web3Modal={web3Modal}\r\n    loadWeb3Modal={loadWeb3Modal}\r\n    logoutOfWeb3Modal={logoutOfWeb3Modal}\r\n    blockExplorer={blockExplorer}\r\n  />\r\n\r\n  ~ Features ~\r\n\r\n  - Provide address={address} and get balance corresponding to the given address\r\n  - Provide localProvider={localProvider} to access balance on local network\r\n  - Provide userProvider={userProvider} to display a wallet\r\n  - Provide mainnetProvider={mainnetProvider} and your address will be replaced by ENS name\r\n              (ex. \"0xa870\" => \"user.eth\")\r\n  - Provide price={price} of ether and get your balance converted to dollars\r\n  - Provide web3Modal={web3Modal}, loadWeb3Modal={loadWeb3Modal}, logoutOfWeb3Modal={logoutOfWeb3Modal}\r\n              to be able to log in/log out to/from existing accounts\r\n  - Provide blockExplorer={blockExplorer}, click on address and get the link\r\n              (ex. by default \"https://etherscan.io/\" or for xdai \"https://blockscout.com/poa/xdai/\")\r\n*/\r\n\r\nexport default function Account({\r\n  address,\r\n  userProvider,\r\n  localProvider,\r\n  mainnetProvider,\r\n  price,\r\n  minimized,\r\n  web3Modal,\r\n  loadWeb3Modal,\r\n  logoutOfWeb3Modal,\r\n  blockExplorer,\r\n}) {\r\n  const modalButtons = [];\r\n  if (web3Modal) {\r\n    if (web3Modal.cachedProvider) {\r\n      modalButtons.push(\r\n        <Button\r\n          key=\"logoutbutton\"\r\n          style={{ verticalAlign: \"top\", marginLeft: 8, marginTop: 4 }}\r\n          shape=\"round\"\r\n          size=\"large\"\r\n          onClick={logoutOfWeb3Modal}\r\n        >\r\n          logout\r\n        </Button>,\r\n      );\r\n    } else {\r\n      modalButtons.push(\r\n        <Button\r\n          key=\"loginbutton\"\r\n          style={{ verticalAlign: \"top\", marginLeft: 8, marginTop: 4 }}\r\n          shape=\"round\"\r\n          size=\"large\"\r\n          /*type={minimized ? \"default\" : \"primary\"}     too many people just defaulting to MM and having a bad time*/\r\n          onClick={loadWeb3Modal}\r\n        >\r\n          connect\r\n        </Button>,\r\n      );\r\n    }\r\n  }\r\n\r\n  const { currentTheme } = useThemeSwitcher();\r\n\r\n  const display = minimized ? (\r\n    \"\"\r\n  ) : (\r\n    <span>\r\n      {address ? <Address address={address} ensProvider={mainnetProvider} blockExplorer={blockExplorer} /> : \"Connecting...\"}\r\n      <Balance address={address} provider={localProvider} price={price} />\r\n      <Wallet address={address} provider={userProvider} ensProvider={mainnetProvider} price={price} color={currentTheme == \"light\" ? \"#1890ff\" : \"#2caad9\"}/>\r\n      <TransactionDetails />\r\n    </span>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      {display}\r\n      {modalButtons}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { formatUnits } from \"@ethersproject/units\";\r\nimport { isAddress } from \"@ethersproject/address\";\r\nimport { Address } from \"../../components\";\r\n\r\nconst tryToDisplay = thing => {\r\n  if (thing && thing.toNumber) {\r\n    try {\r\n      return thing.toNumber();\r\n    } catch (e) {\r\n      return \"Ξ\"+formatUnits(thing, \"ether\");\r\n    }\r\n  }\r\n  if(thing && thing.indexOf && thing.indexOf(\"0x\")==0 && thing.length == 42){\r\n    return (\r\n      <Address\r\n        address={thing}\r\n        fontSize={22}\r\n      />\r\n    )\r\n  }\r\n  return JSON.stringify(thing);\r\n};\r\n\r\nexport default tryToDisplay;\r\n","/* eslint-disable jsx-a11y/accessible-emoji */\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { useState, useEffect, useCallback } from \"react\";\r\nimport { Row, Col, Divider } from \"antd\";\r\nimport tryToDisplay from \"./utils\";\r\n\r\nconst DisplayVariable = ({ contractFunction, functionInfo, refreshRequired, triggerRefresh}) => {\r\n  const [variable, setVariable] = useState(\"\");\r\n\r\n  const refresh = useCallback(async () => {\r\n    try {\r\n      const funcResponse = await contractFunction();\r\n      setVariable(funcResponse);\r\n      triggerRefresh(false);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }, [setVariable, contractFunction, triggerRefresh]);\r\n\r\n  useEffect(() => {\r\n    refresh();\r\n  }, [refresh, refreshRequired, contractFunction]);\r\n\r\n  return (\r\n    <div>\r\n      <Row>\r\n        <Col\r\n          span={8}\r\n          style={{\r\n            textAlign: \"right\",\r\n            opacity: 0.333,\r\n            paddingRight: 6,\r\n            fontSize: 24,\r\n          }}\r\n        >\r\n          {functionInfo.name}\r\n        </Col>\r\n        <Col span={14}>\r\n          <h2>{tryToDisplay(variable)}</h2>\r\n        </Col>\r\n        <Col span={2}>\r\n          <h2>\r\n            <a href=\"#\" onClick={refresh}>\r\n              🔄\r\n            </a>\r\n          </h2>\r\n        </Col>\r\n      </Row>\r\n      <Divider />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DisplayVariable;\r\n","/* eslint-disable jsx-a11y/click-events-have-key-events */\r\n/* eslint-disable jsx-a11y/no-static-element-interactions */\r\n/* eslint-disable jsx-a11y/accessible-emoji */\r\nimport React, { useState } from \"react\";\r\nimport { BigNumber } from \"@ethersproject/bignumber\";\r\nimport { hexlify } from \"@ethersproject/bytes\";\r\nimport { Row, Col, Input, Divider, Tooltip, Button } from \"antd\";\r\nimport { Transactor } from \"../../helpers\";\r\nimport tryToDisplay from \"./utils\";\r\nimport Blockies from \"react-blockies\";\r\nconst { utils } = require(\"ethers\");\r\n\r\n\r\nexport default function FunctionForm({ contractFunction, functionInfo, provider, gasPrice, triggerRefresh }) {\r\n  const [form, setForm] = useState({});\r\n  const [txValue, setTxValue] = useState();\r\n  const [returnValue, setReturnValue] = useState();\r\n\r\n  const tx = Transactor(provider, gasPrice);\r\n\r\n  let inputIndex = 0;\r\n  const inputs = functionInfo.inputs.map(input => {\r\n\r\n    const key = functionInfo.name + \"_\" + input.name + \"_\" + input.type + \"_\" + inputIndex++\r\n\r\n    let buttons = \"\"\r\n    if (input.type === \"bytes32\") {\r\n      buttons = (\r\n        <Tooltip placement=\"right\" title={\"to bytes32\"}>\r\n          <div\r\n            type=\"dashed\"\r\n            style={{ cursor: \"pointer\" }}\r\n            onClick={async () => {\r\n              if (utils.isHexString(form[key])) {\r\n                const formUpdate = { ...form };\r\n                formUpdate[key] = utils.parseBytes32String(form[key]);\r\n                setForm(formUpdate);\r\n              } else {\r\n                const formUpdate = { ...form };\r\n                formUpdate[key] = utils.formatBytes32String(form[key]);\r\n                setForm(formUpdate);\r\n              }\r\n            }}\r\n          >\r\n            #️⃣\r\n            </div>\r\n        </Tooltip>\r\n      )\r\n    } else if (input.type === \"bytes\") {\r\n      buttons = (\r\n        <Tooltip placement=\"right\" title={\"to hex\"}>\r\n          <div\r\n            type=\"dashed\"\r\n            style={{ cursor: \"pointer\" }}\r\n            onClick={async () => {\r\n              if (utils.isHexString(form[key])) {\r\n                const formUpdate = { ...form };\r\n                formUpdate[key] = utils.toUtf8String(form[key]);\r\n                setForm(formUpdate);\r\n              } else {\r\n                const formUpdate = { ...form };\r\n                formUpdate[key] = utils.hexlify(utils.toUtf8Bytes(form[key]))\r\n                setForm(formUpdate);\r\n              }\r\n            }}\r\n          >\r\n            #️⃣\r\n            </div>\r\n        </Tooltip>\r\n      )\r\n    } else if (input.type == \"uint256\") {\r\n      buttons = (\r\n        <Tooltip placement=\"right\" title={\"* 10 ** 18\"}>\r\n          <div\r\n            type=\"dashed\"\r\n            style={{ cursor: \"pointer\" }}\r\n            onClick={async () => {\r\n              const formUpdate = { ...form };\r\n              formUpdate[key] = utils.parseEther(form[key])\r\n              setForm(formUpdate);\r\n            }}\r\n          >\r\n            ✴️\r\n            </div>\r\n        </Tooltip>\r\n      )\r\n    } else if (input.type == \"address\") {\r\n      const possibleAddress = form[key]&&form[key].toLowerCase&&form[key].toLowerCase().trim()\r\n      if(possibleAddress && possibleAddress.length==42){\r\n        buttons = (\r\n          <Tooltip placement=\"right\" title={\"blockie\"}>\r\n            <Blockies seed={possibleAddress} scale={3} />\r\n          </Tooltip>\r\n        )\r\n      }\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n      <div style={{ margin: 2 }} key={key}>\r\n        <Input\r\n          size=\"large\"\r\n          placeholder={input.name ? input.type + \" \" + input.name : input.type}\r\n          autoComplete=\"off\"\r\n          value={form[key]}\r\n          name={key}\r\n          onChange={(event) => {\r\n            const formUpdate = { ...form };\r\n            formUpdate[event.target.name] = event.target.value;\r\n            setForm(formUpdate);\r\n          }}\r\n          suffix={buttons}\r\n        />\r\n      </div>\r\n    )\r\n  });\r\n\r\n  const txValueInput = (\r\n    <div style={{ margin: 2 }} key={\"txValueInput\"}>\r\n      <Input\r\n        placeholder=\"transaction value\"\r\n        onChange={e => setTxValue(e.target.value)}\r\n        value={txValue}\r\n        addonAfter={\r\n          <div>\r\n            <Row>\r\n              <Col span={16}>\r\n                <Tooltip placement=\"right\" title={\" * 10^18 \"}>\r\n                  <div\r\n                    type=\"dashed\"\r\n                    style={{ cursor: \"pointer\" }}\r\n                    onClick={async () => {\r\n                      let floatValue = parseFloat(txValue)\r\n                      if(floatValue) setTxValue(\"\" + floatValue * 10 ** 18);\r\n                    }}\r\n                  >\r\n                    ✳️\r\n                  </div>\r\n                </Tooltip>\r\n              </Col>\r\n              <Col span={16}>\r\n                <Tooltip placement=\"right\" title={\"number to hex\"}>\r\n                  <div\r\n                    type=\"dashed\"\r\n                    style={{ cursor: \"pointer\" }}\r\n                    onClick={async () => {\r\n                      setTxValue(BigNumber.from(txValue).toHexString());\r\n                    }}\r\n                  >\r\n                    #️⃣\r\n                </div>\r\n                </Tooltip>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n\r\n  if (functionInfo.payable) {\r\n    inputs.push(txValueInput);\r\n  }\r\n\r\n  const buttonIcon = functionInfo.type === \"call\" ? <Button style={{ marginLeft: -32 }}>Read📡</Button> : <Button style={{ marginLeft: -32 }}>Send💸</Button>;\r\n  inputs.push(\r\n    <div style={{ cursor: \"pointer\", margin: 2 }} key={\"goButton\"}>\r\n      <Input\r\n        onChange={e => setReturnValue(e.target.value)}\r\n        defaultValue=\"\"\r\n        bordered={false}\r\n        disabled={true}\r\n        value={returnValue}\r\n        suffix={\r\n          <div\r\n            style={{ width: 50, height: 30, margin: 0 }}\r\n            type=\"default\"\r\n            onClick={async () => {\r\n              let innerIndex = 0\r\n              const args = functionInfo.inputs.map((input) => {\r\n                const key = functionInfo.name + \"_\" + input.name + \"_\" + input.type + \"_\" + innerIndex++\r\n                let value = form[key]\r\n                if(input.baseType==\"array\"){\r\n                  value = JSON.parse(value)\r\n                } else if(input.type === \"bool\"){\r\n                  if(value==='true' || value==='1' || value ===\"0x1\"|| value ===\"0x01\"|| value ===\"0x0001\"){\r\n                    value = 1;\r\n                  }else{\r\n                    value = 0;\r\n                  }\r\n                }\r\n                return value\r\n              });\r\n\r\n              let result\r\n              if(functionInfo.stateMutability === \"view\"||functionInfo.stateMutability === \"pure\"){\r\n                const returned = await contractFunction(...args)\r\n                result = tryToDisplay(returned);\r\n              }else{\r\n                const overrides = {};\r\n                if (txValue) {\r\n                  overrides.value = txValue; // ethers.utils.parseEther()\r\n                }\r\n                // Uncomment this if you want to skip the gas estimation for each transaction\r\n                // overrides.gasLimit = hexlify(1200000);\r\n\r\n\r\n                // console.log(\"Running with extras\",extras)\r\n                const returned = await tx(contractFunction(...args, overrides));\r\n                result = tryToDisplay(returned);\r\n              }\r\n\r\n\r\n              console.log(\"SETTING RESULT:\", result);\r\n              setReturnValue(result);\r\n              triggerRefresh(true);\r\n            }}\r\n          >\r\n            {buttonIcon}\r\n          </div>\r\n        }\r\n      />\r\n    </div>,\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Row>\r\n        <Col\r\n          span={8}\r\n          style={{\r\n            textAlign: \"right\",\r\n            opacity: 0.333,\r\n            paddingRight: 6,\r\n            fontSize: 24,\r\n          }}\r\n        >\r\n          {functionInfo.name}\r\n        </Col>\r\n        <Col span={16}>{inputs}</Col>\r\n      </Row>\r\n      <Divider />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useMemo, useState } from \"react\";\r\nimport { Card } from \"antd\";\r\nimport { useContractLoader, useContractExistsAtAddress } from \"../../hooks\";\r\nimport Account from \"../Account\";\r\nimport DisplayVariable from \"./DisplayVariable\";\r\nimport FunctionForm from \"./FunctionForm\";\r\n\r\nconst noContractDisplay = (\r\n  <div>\r\n    Loading...{\" \"}\r\n    <div style={{ padding: 32 }}>\r\n      You need to run{\" \"}\r\n      <span class=\"highlight\" style={{ marginLeft: 4, /*backgroundColor: \"#f1f1f1\",*/ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}>\r\n        yarn run chain\r\n      </span>{\" \"}\r\n      and{\" \"}\r\n      <span class=\"highlight\" style={{ marginLeft: 4, /*backgroundColor: \"#f1f1f1\",*/ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}>\r\n        yarn run deploy\r\n      </span>{\" \"}\r\n      to see your contract here.\r\n    </div>\r\n    <div style={{ padding: 32 }}>\r\n      <span style={{ marginRight: 4 }} role=\"img\" aria-label=\"warning\">\r\n        ☢️\r\n      </span>\r\n      Warning: You might need to run\r\n      <span class=\"highlight\" style={{ marginLeft: 4, /*backgroundColor: \"#f1f1f1\",*/ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}>\r\n        yarn run deploy\r\n      </span>{\" \"}\r\n      <i>again</i> after the frontend comes up!\r\n    </div>\r\n  </div>\r\n);\r\n\r\nconst isQueryable = fn => (fn.stateMutability === \"view\" || fn.stateMutability === \"pure\") && fn.inputs.length === 0;\r\n\r\nexport default function Contract({ customContract, account, gasPrice, signer, provider, name, show, price, blockExplorer }) {\r\n\r\n  const contracts = useContractLoader(provider);\r\n  let contract\r\n  if(!customContract){\r\n    contract = contracts ? contracts[name] : \"\";\r\n  }else{\r\n    contract = customContract\r\n  }\r\n\r\n  const address = contract ? contract.address : \"\";\r\n  const contractIsDeployed = useContractExistsAtAddress(provider, address);\r\n\r\n  const displayedContractFunctions = useMemo(\r\n    () =>\r\n      contract\r\n        ? Object.values(contract.interface.functions).filter(\r\n            fn => fn.type === \"function\" && !(show && show.indexOf(fn.name) < 0),\r\n          )\r\n        : [],\r\n    [contract, show],\r\n  );\r\n\r\n  const [refreshRequired, triggerRefresh] = useState(false)\r\n  const contractDisplay = displayedContractFunctions.map(fn => {\r\n    if (isQueryable(fn)) {\r\n      // If there are no inputs, just display return value\r\n      return <DisplayVariable key={fn.name} contractFunction={contract[fn.name]} functionInfo={fn} refreshRequired={refreshRequired} triggerRefresh={triggerRefresh}/>;\r\n    }\r\n    // If there are inputs, display a form to allow users to provide these\r\n    return (\r\n      <FunctionForm\r\n        key={\"FF\" + fn.name}\r\n        contractFunction={(fn.stateMutability === \"view\" || fn.stateMutability === \"pure\")?contract[fn.name]:contract.connect(signer)[fn.name]}\r\n        functionInfo={fn}\r\n        provider={provider}\r\n        gasPrice={gasPrice}\r\n        triggerRefresh={triggerRefresh}\r\n      />\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div style={{ margin: \"auto\", width: \"70vw\" }}>\r\n      <Card\r\n        title={\r\n          <div>\r\n            {name}\r\n            <div style={{ float: \"right\" }}>\r\n              <Account\r\n                address={address}\r\n                localProvider={provider}\r\n                injectedProvider={provider}\r\n                mainnetProvider={provider}\r\n                price={price}\r\n                blockExplorer={blockExplorer}\r\n              />\r\n              {account}\r\n            </div>\r\n          </div>\r\n        }\r\n        size=\"large\"\r\n        style={{ marginTop: 25, width: \"100%\" }}\r\n        loading={contractDisplay && contractDisplay.length <= 0}\r\n      >\r\n        {contractIsDeployed ? contractDisplay : noContractDisplay}\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Button, Modal, Divider } from \"antd\";\r\nimport { DollarCircleOutlined } from \"@ant-design/icons\";\r\nimport { RampInstantSDK } from \"@ramp-network/ramp-instant-sdk\";\r\n\r\n// added display of 0 if price={price} is not provided\r\n\r\n/*\r\n  ~ What it does? ~\r\n\r\n  Displays current ETH price and gives options to buy ETH through Wyre/Ramp/Coinbase\r\n                            or get through Rinkeby/Ropsten/Kovan/Goerli\r\n\r\n  ~ How can I use? ~\r\n\r\n  <Ramp \r\n    price={price} \r\n    address={address}\r\n  />\r\n\r\n  ~ Features ~\r\n\r\n  - Ramp opens directly in the application, component uses RampInstantSDK\r\n  - Provide price={price} and current ETH price will be displayed\r\n  - Provide address={address} and your address will be pasted into Wyre/Ramp instantly\r\n*/\r\n\r\nexport default function Ramp(props) {\r\n  const [modalUp, setModalUp] = useState(\"down\");\r\n\r\n  const type = \"default\";\r\n\r\n  let allFaucets = []\r\n  for(let n in props.networks){\r\n    if(props.networks[n].chainId!=31337&&props.networks[n].chainId!=1){\r\n      allFaucets.push(\r\n        <p key={props.networks[n].chainId}>\r\n          <Button\r\n            style={{color:props.networks[n].color}}\r\n            type={type}\r\n            size=\"large\"\r\n            shape=\"round\"\r\n            onClick={() => {\r\n              window.open(props.networks[n].faucet);\r\n            }}\r\n          >\r\n            {props.networks[n].name}\r\n          </Button>\r\n        </p>\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        size=\"large\"\r\n        shape=\"round\"\r\n        onClick={() => {\r\n          setModalUp(\"up\");\r\n        }}\r\n      >\r\n        <DollarCircleOutlined style={{ color: \"#52c41a\" }} /> {typeof props.price == \"undefined\" ? 0 : props.price.toFixed(2)}\r\n      </Button>\r\n      <Modal\r\n        title=\"Buy ETH\"\r\n        visible={modalUp === \"up\"}\r\n        onCancel={() => {\r\n          setModalUp(\"down\");\r\n        }}\r\n        footer={[\r\n          <Button\r\n            key=\"back\"\r\n            onClick={() => {\r\n              setModalUp(\"down\");\r\n            }}\r\n          >\r\n            cancel\r\n          </Button>,\r\n        ]}\r\n      >\r\n        <p>\r\n          <Button\r\n            type={type}\r\n            size=\"large\"\r\n            shape=\"round\"\r\n            onClick={() => {\r\n              window.open(\"https://pay.sendwyre.com/purchase?destCurrency=ETH&sourceAmount=25&dest=\" + props.address);\r\n            }}\r\n          >\r\n            <span style={{ paddingRight: 15 }} role=\"img\">\r\n              <span role=\"img\" aria-label=\"flag-us\">🇺🇸</span>\r\n            </span>\r\n            Wyre\r\n          </Button>\r\n        </p>\r\n        <p>\r\n          {\" \"}\r\n          <Button\r\n            type={type}\r\n            size=\"large\"\r\n            shape=\"round\"\r\n            onClick={() => {\r\n              new RampInstantSDK({\r\n                hostAppName: \"scaffold-eth\",\r\n                hostLogoUrl: \"https://scaffoldeth.io/scaffold-eth.png\",\r\n                swapAmount: \"100000000000000000\", // 0.1 ETH in wei  ?\r\n                swapAsset: \"ETH\",\r\n                userAddress: props.address,\r\n              })\r\n                .on(\"*\", event => console.log(event))\r\n                .show();\r\n            }}\r\n          >\r\n            <span style={{ paddingRight: 15 }} role=\"img\">\r\n            <span role=\"img\" aria-label=\"flag-gb\">🇬🇧</span>\r\n            </span>\r\n            Ramp\r\n          </Button>\r\n        </p>\r\n\r\n        <p>\r\n          <Button\r\n            type={type}\r\n            size=\"large\"\r\n            shape=\"round\"\r\n            onClick={() => {\r\n              window.open(\"https://www.coinbase.com/buy-ethereum\");\r\n            }}\r\n          >\r\n            <span style={{ paddingRight: 15 }} role=\"img\" aria-label=\"bank\">\r\n              🏦\r\n            </span>\r\n            Coinbase\r\n          </Button>\r\n        </p>\r\n\r\n        <Divider />\r\n\r\n        <h2>Testnet ETH</h2>\r\n\r\n        {allFaucets}\r\n\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useCallback } from \"react\";\r\nimport { Input, Button, Tooltip } from \"antd\";\r\nimport Blockies from \"react-blockies\";\r\nimport { SendOutlined } from \"@ant-design/icons\";\r\nimport { parseEther } from \"@ethersproject/units\";\r\nimport { Transactor } from \"../helpers\";\r\nimport Wallet from \"./Wallet\";\r\nimport { useLookupAddress } from \"eth-hooks\";\r\n\r\n// improved a bit by converting address to ens if it exists\r\n// added option to directly input ens name\r\n// added placeholder option\r\n\r\n/*\r\n  ~ What it does? ~\r\n\r\n  Displays a local faucet to send ETH to given address, also wallet is provided\r\n\r\n  ~ How can I use? ~\r\n\r\n  <Faucet \r\n    price={price}\r\n    localProvider={localProvider}  \r\n    ensProvider={mainnetProvider}\r\n    placeholder={\"Send local faucet\"}\r\n  />\r\n\r\n  ~ Features ~\r\n\r\n  - Provide price={price} of ether and convert between USD and ETH in a wallet\r\n  - Provide localProvider={localProvider} to be able to send ETH to given address\r\n  - Provide ensProvider={mainnetProvider} and your address will be replaced by ENS name\r\n              (ex. \"0xa870\" => \"user.eth\") or you can enter directly ENS name instead of address\r\n              works both in input field & wallet\r\n  - Provide placeholder=\"Send local faucet\" value for the input\r\n*/\r\n\r\nexport default function Faucet(props) {\r\n  const [address, setAddress] = useState();\r\n\r\n  let blockie;\r\n  if (address && typeof address.toLowerCase === \"function\") {\r\n    blockie = <Blockies seed={address.toLowerCase()} size={8} scale={4} />;\r\n  } else {\r\n    blockie = <div />;\r\n  }\r\n\r\n  const ens = useLookupAddress(props.ensProvider, address);\r\n\r\n  const updateAddress = useCallback(\r\n    async newValue => {\r\n      if (typeof newValue !== \"undefined\") {\r\n        let address = newValue;\r\n        if (address.indexOf(\".eth\") > 0 || address.indexOf(\".xyz\") > 0) {\r\n          try {\r\n            const possibleAddress = await props.ensProvider.resolveName(address);\r\n            if (possibleAddress) {\r\n              address = possibleAddress;\r\n            }\r\n            // eslint-disable-next-line no-empty\r\n          } catch (e) {}\r\n        }\r\n        setAddress(address);\r\n      }\r\n    },\r\n    [props.ensProvider, props.onChange],\r\n  );\r\n\r\n  const tx = Transactor(props.localProvider);\r\n\r\n  return (\r\n    <span>\r\n      <Input\r\n        size=\"large\"\r\n        placeholder={props.placeholder ? props.placeholder : \"local faucet\"}\r\n        prefix={blockie}\r\n        //value={address}\r\n        value={ens || address}\r\n        onChange={e => {\r\n          //setAddress(e.target.value);\r\n          updateAddress(e.target.value);\r\n        }}\r\n        suffix={\r\n          <Tooltip title=\"Faucet: Send local ether to an address.\">\r\n            <Button\r\n              onClick={() => {\r\n                tx({\r\n                  to: address,\r\n                  value: parseEther(\"0.01\"),\r\n                });\r\n                setAddress(\"\");\r\n              }}\r\n              shape=\"circle\"\r\n              icon={<SendOutlined />}\r\n            />\r\n            <Wallet color=\"#888888\" provider={props.localProvider} ensProvider={props.ensProvider} price={props.price} />\r\n          </Tooltip>\r\n        }\r\n      />\r\n    </span>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { PageHeader } from \"antd\";\r\n\r\n// displays a page header\r\n\r\nexport default function Header() {\r\n  return (\r\n    <a href=\"https://github.com/austintgriffith/scaffold-eth/tree/meta-multi-sig\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n      <PageHeader\r\n        title=\"🏗 scaffold-eth\"\r\n        subTitle=\"meta-multi-sig example\"\r\n        style={{ cursor: \"pointer\" }}\r\n      />\r\n    </a>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Blockies from \"react-blockies\";\r\nimport { Timeline, Typography } from \"antd\";\r\nimport { SendOutlined, DownloadOutlined, EditOutlined } from \"@ant-design/icons\";\r\n\r\nconst { Text } = Typography;\r\n\r\n// displays a timeline for scaffold-eth usage\r\n\r\nexport default function TimelineDisplay(props) {\r\n  return (\r\n    <Timeline mode=\"right\">\r\n      <Timeline.Item dot=\"💾\">\r\n        <Text delete>\r\n          Clone and Install from the{\" \"}\r\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/austintgriffith/scaffold-eth\">\r\n            github repo\r\n          </a>\r\n        </Text>\r\n      </Timeline.Item>\r\n\r\n      <Timeline.Item dot=\"⚛️\">\r\n        <Text delete>\r\n          Start your frontend app with: <Text strong>yarn start</Text>\r\n        </Text>\r\n      </Timeline.Item>\r\n\r\n      <Timeline.Item dot=\"⛓\">\r\n        <Text delete={props.chainIsUp}>\r\n          Start your local blockchain with: <Text strong>yarn run chain</Text> (and refresh)\r\n        </Text>\r\n      </Timeline.Item>\r\n\r\n      <Timeline.Item dot=\"📝\">\r\n        <Text delete={props.hasOwner}>\r\n          Compile and deploy your smart contract: <Text strong>yarn run deploy</Text>\r\n        </Text>\r\n      </Timeline.Item>\r\n\r\n      <Timeline.Item dot=\"🤡\">\r\n        <Text delete={props.isNotSmoort}>\r\n          Fix error in <Text code>SmartContractWallet.sol</Text> then: <Text strong>yarn run deploy</Text>\r\n        </Text>\r\n      </Timeline.Item>\r\n\r\n      <Timeline.Item dot={<SendOutlined style={{ fontSize: \"16px\" }} />} color={props.hasEther ? \"green\" : \"blue\"}>\r\n        <Text delete={props.hasEther}>\r\n          Send test ether to your{\" \"}\r\n          <Blockies seed={(props.address ? props.address : \"\").toLowerCase()} size={8} scale={2} /> address using\r\n          (bottom left) faucet\r\n        </Text>\r\n      </Timeline.Item>\r\n\r\n      <Timeline.Item\r\n        dot={<DownloadOutlined style={{ fontSize: \"16px\" }} />}\r\n        color={props.contractHasEther ? \"green\" : \"blue\"}\r\n      >\r\n        <Text delete={props.contractHasEther}>\r\n          Deposit some funds into your{\" \"}\r\n          <Blockies seed={(props.contractAddress ? props.contractAddress : \"\").toLowerCase()} size={8} scale={2} />{\" \"}\r\n          smart contract wallet\r\n        </Text>\r\n      </Timeline.Item>\r\n\r\n      <Timeline.Item\r\n        dot={<EditOutlined style={{ fontSize: \"16px\" }} />}\r\n        color={props.amOwnerOfContract ? \"green\" : \"blue\"}\r\n      >\r\n        <Text delete={props.amOwnerOfContract}>\r\n          Set <b>owner</b> of your{\" \"}\r\n          <Blockies seed={(props.contractAddress ? props.contractAddress : \"\").toLowerCase()} size={8} scale={2} />{\" \"}\r\n          smart contract wallet to your{\" \"}\r\n          <Blockies seed={(props.address ? props.address : \"\").toLowerCase()} size={8} scale={2} /> address\r\n        </Text>\r\n      </Timeline.Item>\r\n\r\n      <Timeline.Item dot=\"☢️\">\r\n        <Text>\r\n          Yikes, anyone can take ownership of <Text code>SmartContractWallet.sol</Text>\r\n        </Text>\r\n      </Timeline.Item>\r\n\r\n      <Timeline.Item dot=\"🔬\">\r\n        <Text>\r\n          Test your contract with <Text code>buidler/test/myTest.js</Text> then:\r\n          <Text strong>yarn run test</Text>\r\n        </Text>\r\n      </Timeline.Item>\r\n\r\n      <Timeline.Item dot=\"🚀\">\r\n        <Text>\r\n          Build something awesome with 🏗 <a href=\"https://github.com/austintgriffith/scaffold-eth\">scaffold-eth</a> and{\" \"}\r\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://twitter.com/austingriffith\">\r\n            @ me\r\n          </a>\r\n          !\r\n        </Text>\r\n      </Timeline.Item>\r\n\r\n      <Timeline.Item dot=\"📖\">\r\n        <Text>\r\n          Read more about{\" \"}\r\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://ethereum.org/developers\">\r\n            Ethereum\r\n          </a>\r\n          ,{\" \"}\r\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://solidity.readthedocs.io/en/develop/contracts.html\">\r\n            Solidity\r\n          </a>\r\n          , and{\" \"}\r\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://buidler.dev/tutorial\">\r\n            Buidler\r\n          </a>\r\n        </Text>\r\n      </Timeline.Item>\r\n    </Timeline>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Button } from \"antd\";\r\n\r\n// added display of 0 instead of NaN if gas price is not provided\r\n\r\n/*\r\n  ~ What it does? ~\r\n\r\n  Displays gas gauge \r\n\r\n  ~ How can I use? ~\r\n\r\n  <GasGauge \r\n    gasPrice={gasPrice}\r\n  />\r\n\r\n  ~ Features ~\r\n\r\n  - Provide gasPrice={gasPrice} and get current gas gauge\r\n*/\r\n\r\nexport default function GasGauge(props) {\r\n  \r\n  return (\r\n    <Button\r\n      onClick={() => {\r\n        window.open(\"https://ethgasstation.info/\");\r\n      }}\r\n      size=\"large\"\r\n      shape=\"round\"\r\n    >\r\n      <span style={{ marginRight: 8 }}><span role=\"img\" aria-label=\"fuelpump\">⛽️</span></span>\r\n      {typeof props.gasPrice == \"undefined\" ? 0 : parseInt(props.gasPrice, 10) / 10 ** 9}g\r\n    </Button>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Input } from \"antd\";\r\nconst { utils, constants } = require(\"ethers\");\r\n\r\n/*\r\n  ~ What it does? ~\r\n\r\n  Displays input field with options to convert between STRING and BYTES32\r\n\r\n  ~ How can I use? ~\r\n\r\n  <BytesStringInput\r\n    autofocus\r\n    value={\"scaffold-eth\"}\r\n    placeholder=\"Enter value...\"\r\n    onChange={value => {\r\n      setValue(value);\r\n    }}\r\n  />\r\n\r\n  ~ Features ~\r\n\r\n  - Provide value={value} to specify initial string\r\n  - Provide placeholder=\"Enter value...\" value for the input\r\n  - Control input change by onChange={value => { setValue(value);}}\r\n\r\n*/\r\n\r\nexport default function BytesStringInput(props) {\r\n  const [mode, setMode] = useState(\"STRING\");\r\n  const [display, setDisplay] = useState();\r\n  const [value, setValue] = useState(constants.HashZero);\r\n\r\n  // current value is the value in bytes32\r\n  const currentValue = typeof props.value !== \"undefined\" ? props.value : value;\r\n\r\n  const option = title => {\r\n\r\n    return (\r\n      <div\r\n        style={{ cursor: \"pointer\" }}\r\n        onClick={() => {\r\n          if (mode === \"STRING\") {\r\n            setMode(\"BYTES32\");\r\n            if (!utils.isHexString(currentValue)) {\r\n                /* in case user enters invalid bytes32 number, \r\n                   it considers it as string and converts to bytes32 */\r\n                const changedValue = utils.formatBytes32String(currentValue);\r\n                setDisplay(changedValue);\r\n            }\r\n            else {\r\n                setDisplay(currentValue);\r\n            }\r\n            \r\n            \r\n          } \r\n          else {\r\n            setMode(\"STRING\");\r\n            if (currentValue && utils.isHexString(currentValue)) {\r\n              setDisplay(utils.parseBytes32String(currentValue));\r\n            } \r\n            else {\r\n              setDisplay(currentValue);\r\n            }\r\n          }\r\n        }}\r\n      >\r\n        {title}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  let addonAfter;\r\n  if (mode === \"STRING\") {\r\n    addonAfter = option(\"STRING 🔀\");\r\n  } else {\r\n    addonAfter = option(\"BYTES32 🔀\");\r\n  }\r\n\r\n  useEffect(\r\n    ()=>{\r\n      if(!currentValue){\r\n        setDisplay(\"\");\r\n      }\r\n    }\r\n  ,[ currentValue ])\r\n\r\n  return (\r\n    <Input\r\n      placeholder={props.placeholder ? props.placeholder : \"Enter value in \" + mode}\r\n      autoFocus={props.autoFocus}\r\n      value={display}\r\n      addonAfter={addonAfter}\r\n      onChange={async e => {\r\n        const newValue = e.target.value;\r\n        if (mode === \"STRING\") {\r\n          //const ethValue = parseFloat(newValue) / props.price;\r\n          //setValue(ethValue);\r\n          if (typeof props.onChange === \"function\") {\r\n            props.onChange(utils.formatBytes32String(newValue));\r\n          }\r\n          setValue(utils.formatBytes32String(newValue));\r\n          setDisplay(newValue);\r\n\r\n        } else {\r\n          if (typeof props.onChange === \"function\") {\r\n            props.onChange(newValue);\r\n          }\r\n          setValue(newValue);\r\n          setDisplay(newValue);\r\n        }\r\n      }}\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Modal } from \"antd\";\r\nimport Address from \"./Address\";\r\nimport Balance from \"./Balance\";\r\nconst TransactionDetailsModal = function ({visible, handleOk, mainnetProvider, price, txnInfo = null}) {\r\n  return (\r\n    <Modal\r\n      title=\"Transaction Details\"\r\n      visible={visible}\r\n      onCancel={handleOk}\r\n      destroyOnClose\r\n      onOk={handleOk}\r\n      footer={null}\r\n      closable\r\n      maskClosable\r\n    >\r\n      {txnInfo && (\r\n        <div>\r\n          <p>\r\n            <b>Event Name :</b> {txnInfo.functionFragment.name}\r\n          </p>\r\n          <p>\r\n            <b>Function Signature :</b> {txnInfo.signature}\r\n          </p>\r\n          <h4>Arguments :&nbsp;</h4>\r\n          {txnInfo.functionFragment.inputs.map((element, index) => {\r\n            if (element.type === \"address\") {\r\n              return (\r\n                <div key={element.name} style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"center\", justifyContent: \"left\" }}>\r\n                  <b>{element.name} :&nbsp;</b>\r\n                  <Address fontSize={16} address={txnInfo.args[index]} ensProvider={mainnetProvider} />\r\n                </div>\r\n              );\r\n            }\r\n            if (element.type === \"uint256\") {\r\n              return (\r\n                <p key={element.name}>\r\n                  {element.name === \"value\" ? <><b>{element.name} : </b> <Balance fontSize={16} balance={txnInfo.args[index]} dollarMultiplier={price} /> </> : <><b>{element.name} : </b> {txnInfo.args[index] && txnInfo.args[index].toNumber()}</>}\r\n                </p>\r\n              );\r\n            }\r\n          })}\r\n          <p>\r\n            <b>SigHash : &nbsp;</b>\r\n            {txnInfo.sighash}\r\n          </p>\r\n        </div>\r\n      )}\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default TransactionDetailsModal;","import React, { useState } from \"react\";\r\nimport { Button, List } from \"antd\";\r\n\r\nimport { Address, Balance, Blockie, TransactionDetailsModal } from \"../components\";\r\nimport { EllipsisOutlined } from \"@ant-design/icons\";\r\nimport { parseEther, formatEther } from \"@ethersproject/units\";\r\n\r\nconst TransactionListItem = function ({item, mainnetProvider, blockExplorer, price, readContracts, contractName, children}) {\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [txnInfo, setTxnInfo] = useState(null);\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const  buildTxnTransferData = (transaction) => {\r\n    return {\r\n      functionFragment: {\r\n        inputs: [],\r\n        name: 'Transfer',\r\n      },\r\n      signature: '',\r\n      args: [transaction.to],\r\n      sighash: item.data\r\n    }\r\n  };\r\n\r\n  console.log(\"🔥🔥🔥🔥\", item)\r\n  let txnData;\r\n  try {\r\n    txnData = item.data === \"\" || item.data === \"0x\" || item.data === \"0x00\" ? buildTxnTransferData(item) : readContracts[contractName].interface.parseTransaction(item);\r\n  } catch (error){\r\n    console.log(\"ERROR\", error)\r\n  }\r\n  return <>\r\n    <TransactionDetailsModal\r\n      visible={isModalVisible}\r\n      txnInfo={txnData}\r\n      handleOk={handleOk}\r\n      mainnetProvider={mainnetProvider}\r\n      price={price}\r\n    />\r\n    {txnData && <List.Item key={item.hash} style={{ position: \"relative\" }}>\r\n      <div\r\n        style={{\r\n          position: \"absolute\",\r\n          top: 55,\r\n          fontSize: 12,\r\n          opacity: 0.5,\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          width: \"90%\",\r\n          justifyContent: \"space-between\",\r\n        }}\r\n      >\r\n        <p>\r\n          <b>Event Name :&nbsp;</b>\r\n          {txnData.functionFragment.name}&nbsp;\r\n        </p>\r\n        <p>\r\n          <b>Addressed to :&nbsp;</b>\r\n          {txnData.args[0]}\r\n        </p>\r\n      </div>\r\n      {<b style={{ padding: 16 }}>#{typeof(item.nonce)=== \"number\" ? item.nonce : item.nonce.toNumber()}</b>}\r\n      <span>\r\n        <Blockie size={4} scale={8} address={item.hash} /> {item.hash.substr(0, 6)}\r\n      </span>\r\n      <Address address={item.to} ensProvider={mainnetProvider} blockExplorer={blockExplorer} fontSize={16} />\r\n      <Balance balance={item.value ? item.value : parseEther(\"\" + parseFloat(item.amount).toFixed(12))} dollarMultiplier={price} />\r\n      <>\r\n        {\r\n          children\r\n        }\r\n      </>\r\n      <Button\r\n        onClick={showModal}\r\n      >\r\n        <EllipsisOutlined />\r\n      </Button>\r\n      \r\n    </List.Item>}\r\n    </>\r\n};\r\nexport default TransactionListItem;","import React, { useEffect, useState } from \"react\";\r\nimport { Switch } from \"antd\";\r\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\r\n\r\nexport default function ThemeSwitcher() {\r\n\r\n  const theme = window.localStorage.getItem(\"theme\");\r\n  const [isDarkMode, setIsDarkMode] = useState(!theme || theme == \"light\" ? false : true);\r\n  const { switcher, currentTheme, status, themes } = useThemeSwitcher();\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem(\"theme\", currentTheme);\r\n  }, [currentTheme]);\r\n\r\n  const toggleTheme = (isChecked) => {\r\n    setIsDarkMode(isChecked);\r\n    switcher({ theme: isChecked ? themes.dark : themes.light });\r\n  };\r\n\r\n  // Avoid theme change flicker\r\n  // if (status === \"loading\") {\r\n  //   return null;\r\n  // }\r\n\r\n  return (\r\n    <div className=\"main fade-in\" style={{position:\"fixed\",right:8,bottom:8}}>\r\n      <span style={{padding:8}}>{currentTheme==\"light\" ? \"☀️\" : \"🌜\"}</span>\r\n      <Switch checked={isDarkMode} onChange={toggleTheme} />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useCallback, useEffect, useState, useRef } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button, Select, List, Divider, Input, Card, DatePicker, Slider, Switch, Progress, Spin } from \"antd\";\r\nimport { SyncOutlined } from \"@ant-design/icons\";\r\nimport { parseEther, formatEther } from \"@ethersproject/units\";\r\nimport { Address, AddressInput, Balance, EtherInput, Blockie } from \"../components\";\r\nimport { useContractReader, useEventListener } from \"../hooks\";\r\nconst { Option } = Select;\r\n\r\nconst axios = require(\"axios\");\r\n\r\nexport default function CreateTransaction({\r\n  poolServerUrl,\r\n  contractName,\r\n  address,\r\n  setRoute,\r\n  userProvider,\r\n  mainnetProvider,\r\n  localProvider,\r\n  yourLocalBalance,\r\n  price,\r\n  tx,\r\n  readContracts,\r\n  writeContracts,\r\n}) {\r\n  const history = useHistory();\r\n\r\n  // keep track of a variable from the contract in the local React state:\r\n  const nonce = useContractReader(readContracts, contractName, \"nonce\");\r\n  const calldataInputRef = useRef(\"0x\");\r\n\r\n  console.log(\"🤗 nonce:\", nonce);\r\n\r\n  console.log(\"price\", price);\r\n\r\n  const [customNonce, setCustomNonce] = useState();\r\n  const [to, setTo] = useLocalStorage(\"to\");\r\n  const [amount, setAmount] = useLocalStorage(\"amount\", \"0\");\r\n  const [data, setData] = useLocalStorage(\"data\", \"0x\");\r\n  const [isCreateTxnEnabled, setCreateTxnEnabled] = useState(true);\r\n  const [decodedDataState, setDecodedData] = useState();\r\n  const [methodName, setMethodName] = useState();\r\n  const [selectDisabled, setSelectDisabled] = useState(false);\r\n  let decodedData = \"\";\r\n\r\n  const [result, setResult] = useState();\r\n\r\n  const inputStyle = {\r\n    padding: 10,\r\n  };\r\n  let decodedDataObject = \"\";\r\n  useEffect(() => {\r\n    const inputTimer = setTimeout(async () => {\r\n      console.log(\"EFFECT RUNNING\");\r\n      try {\r\n        // if(methodName == \"transferFunds\"){\r\n        //   console.log(\"Send transaction selected\")\r\n        //   console.log(\"🔥🔥🔥🔥🔥🔥\",amount)\r\n        //     const calldata = readContracts[contractName].interface.encodeFunctionData(\"transferFunds\",[to,parseEther(\"\" + parseFloat(amount).toFixed(12))])\r\n        //     setData(calldata);\r\n        // }\r\n        // decodedDataObject = readContracts ? await readContracts[contractName].interface.parseTransaction({ data }) : \"\";\r\n        // console.log(\"decodedDataObject\", decodedDataObject);\r\n        // setCreateTxnEnabled(true);\r\n        if(decodedDataObject.signature === \"addSigner(address,uint256)\"){\r\n          setMethodName(\"addSigner\")\r\n          setSelectDisabled(true)\r\n        } else if (decodedDataObject.signature === \"removeSigner(address,uint256)\"){\r\n          setMethodName(\"removeSigner\")\r\n          setSelectDisabled(true)\r\n        }\r\n        decodedData = (\r\n          <div>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"left\",\r\n                marginTop: 16,\r\n                marginBottom: 16,\r\n              }}\r\n            >\r\n              {decodedDataObject && decodedDataObject.signature && <b>Function Signature : </b>}\r\n              {decodedDataObject.signature}\r\n            </div>\r\n            {decodedDataObject.functionFragment &&\r\n              decodedDataObject.functionFragment.inputs.map((element, index) => {\r\n                if (element.type === \"address\") {\r\n                  return (\r\n                    <div\r\n                      style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"center\", justifyContent: \"left\" }}\r\n                    >\r\n                      <b>{element.name} :&nbsp;</b>\r\n                      <Address fontSize={16} address={decodedDataObject.args[index]} ensProvider={mainnetProvider} />\r\n                    </div>\r\n                  );\r\n                }\r\n                if (element.type === \"uint256\") {\r\n                  return (\r\n                    <p style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"center\", justifyContent: \"left\" }}>\r\n                  {element.name === \"value\" ? <><b>{element.name} : </b> <Balance fontSize={16} balance={decodedDataObject.args[index]} dollarMultiplier={price} /> </> : <><b>{element.name} : </b> {decodedDataObject.args[index] && decodedDataObject.args[index].toNumber()}</>}\r\n                    </p>\r\n                  );\r\n                }\r\n              })}\r\n          </div>\r\n        );\r\n        setDecodedData(decodedData);\r\n        setCreateTxnEnabled(true);\r\n        setResult();\r\n\r\n      } catch (error) {\r\n\r\n        console.log(\"mistake: \",error);\r\n        if(data!== \"0x\") setResult(\"ERROR: Invalid calldata\");\r\n        setCreateTxnEnabled(false);\r\n      }\r\n    }, 500);\r\n    return () => {\r\n      clearTimeout(inputTimer);\r\n    };\r\n  }, [data, decodedData, amount]);\r\n\r\n  let resultDisplay;\r\n  if (result) {\r\n    if (result.indexOf(\"ERROR\") >= 0) {\r\n      resultDisplay = <div style={{ margin: 16, padding: 8, color: \"red\" }}>{result}</div>;\r\n    } else {\r\n      resultDisplay = (\r\n        <div style={{ margin: 16, padding: 8 }}>\r\n          <Blockie size={4} scale={8} address={result} /> Tx {result.substr(0, 6)} Created!\r\n          <div style={{ margin: 8, padding: 4 }}>\r\n            <Spin />\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {/*\r\n        ⚙️ Here is an example UI that displays and sets the purpose in your smart contract:\r\n      */}\r\n      <div style={{ border: \"1px solid #cccccc\", padding: 16, width: 400, margin: \"auto\", marginTop: 64 }}>\r\n        <div style={{ margin: 8 }}>\r\n          <div style={inputStyle}>\r\n            <Input\r\n              prefix=\"#\"\r\n              disabled\r\n              value={customNonce}\r\n              placeholder={\"\" + (nonce ? nonce.toNumber() : \"loading...\")}\r\n              onChange={setCustomNonce}\r\n            />\r\n          </div>\r\n                  <div style={{margin:8,padding:8}}>\r\n          <Select value={methodName} disabled={selectDisabled} style={{ width: \"100%\" }} onChange={ setMethodName }>\r\n            //<Option key=\"transferFunds\">transferFunds()</Option>\r\n            <Option disabled={true} key=\"addSigner\">addSigner()</Option>\r\n            <Option disabled={true} key=\"removeSigner\">removeSigner()</Option>\r\n          </Select>\r\n        </div>\r\n          <div style={inputStyle}>\r\n            <AddressInput\r\n              autoFocus\r\n              ensProvider={mainnetProvider}\r\n              placeholder=\"to address\"\r\n              value={to}\r\n              onChange={setTo}\r\n            />\r\n          </div>\r\n\r\n          {!selectDisabled && <div style={inputStyle}>\r\n            <EtherInput price={price} mode=\"USD\" value={amount} onChange={setAmount} />\r\n          </div>}\r\n          <div style={inputStyle}>\r\n            <Input\r\n              placeholder=\"calldata\"\r\n              value={data}\r\n              onChange={e => {\r\n                setData(e.target.value);\r\n              }}\r\n              ref={calldataInputRef}\r\n            />\r\n            {decodedDataState}\r\n          </div>\r\n\r\n          <Button\r\n            style={{ marginTop: 32 }}\r\n            disabled={!isCreateTxnEnabled}\r\n            onClick={async () => {\r\n              // setData(calldataInputRef.current.state.value)\r\n              // if (data && data == \"0x\") {\r\n              //   setResult(\"ERROR, Call Data Invalid\");\r\n              //   return;\r\n              // }\r\n              console.log(\"customNonce\", customNonce);\r\n              const nonce = customNonce || (await readContracts[contractName].nonce());\r\n              console.log(\"nonce\", nonce);\r\n\r\n              const newHash = await readContracts[contractName].getTransactionHash(\r\n                nonce,\r\n                to,\r\n                parseEther(\"\" + parseFloat(amount).toFixed(12)),\r\n                data,\r\n              );\r\n              console.log(\"newHash\", newHash);\r\n\r\n              const signature = await userProvider.send(\"personal_sign\", [newHash, address]);\r\n              console.log(\"signature\", signature);\r\n\r\n              const recover = await readContracts[contractName].recover(newHash, signature);\r\n              console.log(\"recover\", recover);\r\n\r\n              const isOwner = await readContracts[contractName].isOwner(recover);\r\n              console.log(\"isOwner\", isOwner);\r\n\r\n              if (isOwner) {\r\n                const res = await axios.post(poolServerUrl, {\r\n                  chainId: localProvider._network.chainId,\r\n                  address: readContracts[contractName].address,\r\n                  nonce: nonce.toNumber(),\r\n                  to,\r\n                  amount,\r\n                  data,\r\n                  hash: newHash,\r\n                  signatures: [signature],\r\n                  signers: [recover],\r\n                });\r\n                // IF SIG IS VALUE ETC END TO SERVER AND SERVER VERIFIES SIG IS RIGHT AND IS SIGNER BEFORE ADDING TY\r\n\r\n                console.log(\"RESULT\", res.data);\r\n\r\n                setTimeout(() => {\r\n                  history.push(\"/pool\");\r\n                }, 2777);\r\n\r\n                setResult(res.data.hash);\r\n                setTo();\r\n                setAmount(\"0\");\r\n                setData(\"0x\");\r\n              } else {\r\n                console.log(\"ERROR, NOT OWNER.\");\r\n                setResult(\"ERROR, NOT OWNER.\");\r\n              }\r\n            }}\r\n          >\r\n            Create\r\n          </Button>\r\n        </div>\r\n\r\n        {resultDisplay}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction useLocalStorage(key, initialValue) {\r\n  // State to store our value\r\n  // Pass initial state function to useState so logic is only executed once\r\n  const [storedValue, setStoredValue] = useState(() => {\r\n    try {\r\n      // Get from local storage by key\r\n      const item = window.localStorage.getItem(key);\r\n      // Parse stored json or if none return initialValue\r\n      return item ? JSON.parse(item) : initialValue;\r\n    } catch (error) {\r\n      // If error also return initialValue\r\n      console.log(error);\r\n      return initialValue;\r\n    }\r\n  });\r\n\r\n  // Return a wrapped version of useState's setter function that ...\r\n  // ... persists the new value to localStorage.\r\n  const setValue = value => {\r\n    try {\r\n      // Allow value to be a function so we have same API as useState\r\n      const valueToStore = value instanceof Function ? value(storedValue) : value;\r\n      // Save state\r\n      setStoredValue(valueToStore);\r\n      // Save to local storage\r\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\r\n    } catch (error) {\r\n      // A more advanced implementation would handle the error case\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return [storedValue, setValue];\r\n}\r\n","/* eslint-disable jsx-a11y/accessible-emoji */\r\n\r\nimport React, { useState } from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Button, Typography, Table, Input } from \"antd\";\r\nimport { useQuery, gql } from '@apollo/client';\r\nimport { Address } from \"../components\";\r\nimport GraphiQL from 'graphiql';\r\nimport 'graphiql/graphiql.min.css';\r\nimport fetch from 'isomorphic-fetch';\r\n\r\n  const highlight = { marginLeft: 4, marginRight: 8, /*backgroundColor: \"#f9f9f9\",*/ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }\r\n\r\nfunction Subgraph(props) {\r\n\r\n  function graphQLFetcher(graphQLParams) {\r\n    return fetch(props.subgraphUri, {\r\n      method: 'post',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(graphQLParams),\r\n    }).then(response => response.json());\r\n  }\r\n\r\n  const EXAMPLE_GRAPHQL = `\r\n  {\r\n    purposes(first: 25, orderBy: createdAt, orderDirection: desc) {\r\n      id\r\n      purpose\r\n      createdAt\r\n      sender {\r\n        id\r\n      }\r\n    }\r\n    senders {\r\n      id\r\n      address\r\n      purposeCount\r\n    }\r\n  }\r\n  `\r\n  const EXAMPLE_GQL = gql(EXAMPLE_GRAPHQL)\r\n  const { loading, data } = useQuery(EXAMPLE_GQL,{pollInterval: 2500});\r\n\r\n  const purposeColumns = [\r\n    {\r\n      title: 'Purpose',\r\n      dataIndex: 'purpose',\r\n      key: 'purpose',\r\n    },\r\n    {\r\n      title: 'Sender',\r\n      key: 'id',\r\n      render: (record) => <Address\r\n                        value={record.sender.id}\r\n                        ensProvider={props.mainnetProvider}\r\n                        fontSize={16}\r\n                      />\r\n    },\r\n    {\r\n      title: 'createdAt',\r\n      key: 'createdAt',\r\n      dataIndex: 'createdAt',\r\n      render: d => (new Date(d * 1000)).toISOString()\r\n    },\r\n    ];\r\n\r\n  const [newPurpose, setNewPurpose] = useState(\"loading...\");\r\n\r\n\r\n  const deployWarning = (\r\n    <div style={{marginTop:8,padding:8}}>{\"Warning: 🤔 Have you deployed your subgraph yet?\"}</div>\r\n  )\r\n\r\n  return (\r\n      <>\r\n          <div style={{ margin: \"auto\", marginTop: 32 }}>\r\n            You will find that parsing/tracking events with the <span class=\"highlight\" style={highlight}>useEventListener</span> hook becomes a chore for every new project.\r\n          </div>\r\n          <div style={{ margin: \"auto\", marginTop: 32 }}>\r\n            Instead, you can use <a href=\"https://thegraph.com/docs/introduction\" target=\"_blank\" rel=\"noopener noreferrer\">The Graph</a> with 🏗 scaffold-eth (<a href=\"https://youtu.be/T5ylzOTkn-Q\" target=\"_blank\">learn more</a>):\r\n          </div>\r\n\r\n          <div style={{ margin: 32 }}>\r\n            <span style={{ marginRight: 8 }}>🚮</span>\r\n            Clean up previous data:\r\n            <span class=\"highlight\" style={highlight}>\r\n              rm -rf docker/graph-node/data/\r\n            </span>\r\n          </div>\r\n\r\n          <div style={{ margin: 32 }}>\r\n            <span style={{ marginRight: 8 }}>📡</span>\r\n            Spin up a local graph node by running\r\n            <span class=\"highlight\" style={highlight}>\r\n              yarn graph-run-node\r\n            </span>\r\n            <span style={{ marginLeft: 4}}> (requires <a href=\"https://www.docker.com/products/docker-desktop\" target=\"_blank\" rel=\"noopener noreferrer\"> Docker</a>) </span>\r\n          </div>\r\n\r\n          <div style={{ margin: 32 }}>\r\n            <span style={{ marginRight: 8 }}>📝</span>\r\n            Create your <b>local subgraph</b> by running\r\n            <span class=\"highlight\" style={highlight}>\r\n              yarn graph-create-local\r\n            </span>\r\n            (only required once!)\r\n          </div>\r\n\r\n          <div style={{ margin: 32 }}>\r\n            <span style={{ marginRight: 8 }}>🚢</span>\r\n            Deploy your <b>local subgraph</b> by running\r\n            <span class=\"highlight\" style={highlight}>\r\n              yarn graph-ship-local\r\n            </span>\r\n          </div>\r\n\r\n          <div style={{ margin: 32 }}>\r\n            <span style={{ marginRight: 8 }}>🖍️</span>\r\n            Edit your <b>local subgraph</b> in\r\n            <span class=\"highlight\" style={highlight}>\r\n              packages/subgraph/src\r\n            </span>\r\n             (learn more about subgraph definition <a href=\"https://thegraph.com/docs/define-a-subgraph\" target=\"_blank\" rel=\"noopener noreferrer\">here</a>)\r\n          </div>\r\n\r\n          <div style={{ margin: 32 }}>\r\n            <span style={{ marginRight: 8 }}>🤩</span>\r\n            Deploy your <b>contracts and your subgraph</b> in one go by running\r\n            <span class=\"highlight\" style={highlight}>\r\n              yarn deploy-and-graph\r\n            </span>\r\n          </div>\r\n\r\n          <div style={{width:780, margin: \"auto\", paddingBottom:64}}>\r\n\r\n            <div style={{margin:32, textAlign:'right'}}>\r\n              <Input onChange={(e)=>{setNewPurpose(e.target.value)}} />\r\n              <Button onClick={()=>{\r\n                console.log(\"newPurpose\",newPurpose)\r\n                /* look how you call setPurpose on your contract: */\r\n                props.tx( props.writeContracts.YourContract.setPurpose(newPurpose) )\r\n              }}>Set Purpose</Button>\r\n            </div>\r\n\r\n            {data?<Table dataSource={data.purposes} columns={purposeColumns} rowKey={\"id\"} />:<Typography>{(loading?\"Loading...\":deployWarning)}</Typography>}\r\n\r\n            <div style={{margin:32, height:400, border:\"1px solid #888888\", textAlign:'left'}}>\r\n              <GraphiQL fetcher={graphQLFetcher} docExplorerOpen={true} query={EXAMPLE_GRAPHQL}/>\r\n            </div>\r\n\r\n          </div>\r\n\r\n          <div style={{padding:64}}>\r\n          ...\r\n          </div>\r\n      </>\r\n  );\r\n}\r\n\r\nexport default Subgraph;\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Select, Button, List, Divider, Input, Card, DatePicker, Slider, Switch, Progress, Spin } from \"antd\";\r\nimport { SyncOutlined } from '@ant-design/icons';\r\nimport { Address, AddressInput, Balance, Blockie } from \"../components\";\r\nimport { parseEther, formatEther } from \"@ethersproject/units\";\r\nimport { ethers } from \"ethers\";\r\nimport { useContractReader, useEventListener, useLocalStorage } from \"../hooks\";\r\nconst axios = require('axios');\r\nconst { Option } = Select;\r\n\r\nexport default function Owners({contractName, ownerEvents, signaturesRequired, address, nonce, userProvider, mainnetProvider, localProvider, yourLocalBalance, price, tx, readContracts, writeContracts, blockExplorer }) {\r\n\r\n  const history = useHistory();\r\n\r\n  const [to, setTo] = useLocalStorage(\"to\");\r\n  const [amount, setAmount] = useLocalStorage(\"amount\",\"0\");\r\n  const [methodName, setMethodName] = useLocalStorage(\"addSigner\");\r\n  const [newOwner, setNewOwner] = useLocalStorage(\"newOwner\");\r\n  const [newSignaturesRequired, setNewSignaturesRequired] = useLocalStorage(\"newSignaturesRequired\");\r\n  const [data, setData] = useLocalStorage(\"data\",\"0x\");\r\n\r\n  return (\r\n    <div>\r\n      <h2 style={{marginTop:32}}>Signatures Required: {signaturesRequired?signaturesRequired.toNumber():<Spin></Spin>}</h2>\r\n      <List\r\n        style={{maxWidth:400,margin:\"auto\",marginTop:32}}\r\n        bordered\r\n        dataSource={ownerEvents}\r\n        renderItem={(item) => {\r\n          return (\r\n            <List.Item key={\"owner_\"+item[0]}>\r\n            <Address\r\n              address={item[0]}\r\n              ensProvider={mainnetProvider}\r\n              blockExplorer={blockExplorer}\r\n              fontSize={32}\r\n            />\r\n            <div style={{padding:16}}>\r\n              {item[1]?\"👍\":\"👎\"}\r\n            </div>\r\n            </List.Item>\r\n          )\r\n        }}\r\n      />\r\n\r\n      <div style={{border:\"1px solid #cccccc\", padding:16, width:400, margin:\"auto\",marginTop:64}}>\r\n        <div style={{margin:8,padding:8}}>\r\n          <Select value={methodName} style={{ width: \"100%\" }} onChange={ setMethodName }>\r\n            <Option key=\"addSigner\">addSigner()</Option>\r\n            <Option key=\"removeSigner\">removeSigner()</Option>\r\n          </Select>\r\n        </div>\r\n        <div style={{margin:8,padding:8}}>\r\n          <AddressInput\r\n            autoFocus\r\n            ensProvider={mainnetProvider}\r\n            placeholder=\"new owner address\"\r\n            value={newOwner}\r\n            onChange={setNewOwner}\r\n          />\r\n        </div>\r\n        <div style={{margin:8,padding:8}}>\r\n          <Input\r\n            ensProvider={mainnetProvider}\r\n            placeholder=\"new # of signatures required\"\r\n            value={newSignaturesRequired}\r\n            onChange={(e)=>{setNewSignaturesRequired(e.target.value)}}\r\n          />\r\n        </div>\r\n        <div style={{margin:8,padding:8}}>\r\n          <Button onClick={()=>{\r\n            console.log(\"METHOD\",setMethodName)\r\n            let calldata = readContracts[contractName].interface.encodeFunctionData(methodName,[newOwner,newSignaturesRequired])\r\n            console.log(\"calldata\",calldata)\r\n            setData(calldata)\r\n            setAmount(\"0\")\r\n            setTo(readContracts[contractName].address)\r\n            setTimeout(()=>{\r\n              history.push('/create')\r\n            },777)\r\n          }}>\r\n          Create Tx\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { Button, List, Modal, Input, Card, DatePicker, Slider, Switch, Progress, Spin } from \"antd\";\r\nimport { SyncOutlined } from \"@ant-design/icons\";\r\nimport { parseEther, formatEther } from \"@ethersproject/units\";\r\nimport { ethers } from \"ethers\";\r\nimport QR from \"qrcode.react\";\r\nimport { useContractReader, useEventListener, useLocalStorage, useLookupAddress } from \"../hooks\";\r\nimport { Address, AddressInput, Balance, Blockie, TransactionListItem } from \"../components\";\r\n\r\nconst axios = require(\"axios\");\r\n\r\nexport default function FrontPage({\r\n  executeTransactionEvents,\r\n  contractName,\r\n  localProvider,\r\n  readContracts,\r\n  price,\r\n  mainnetProvider,\r\n  blockExplorer,\r\n}) {\r\n  const [methodName, setMethodName] = useLocalStorage(\"addSigner\");\r\n  return (\r\n    <div style={{ padding: 32, maxWidth: 750, margin: \"auto\" }}>\r\n      <div style={{ paddingBottom: 32 }}>\r\n        <div>\r\n          <Balance\r\n            address={readContracts ? readContracts[contractName].address : readContracts}\r\n            provider={localProvider}\r\n            dollarMultiplier={price}\r\n            fontSize={64}\r\n          />\r\n        </div>\r\n        <div>\r\n          <QR\r\n            value={readContracts ? readContracts[contractName].address : \"\"}\r\n            size=\"180\"\r\n            level=\"H\"\r\n            includeMargin\r\n            renderAs=\"svg\"\r\n            imageSettings={{ excavate: false }}\r\n          />\r\n        </div>\r\n        <div>\r\n          <Address\r\n            address={readContracts ? readContracts[contractName].address : readContracts}\r\n            ensProvider={mainnetProvider}\r\n            blockExplorer={blockExplorer}\r\n            fontSize={32}\r\n          />\r\n        </div>\r\n      </div>\r\n      <List\r\n        bordered\r\n        dataSource={executeTransactionEvents}\r\n        renderItem={item => {\r\n\r\n          return (\r\n            <>\r\n                <TransactionListItem item={item} mainnetProvider={mainnetProvider} blockExplorer={blockExplorer} price={price} readContracts={readContracts} contractName={contractName}/>\r\n            </>\r\n          );\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { Button, List, Divider, Input, Card, DatePicker, Slider, Switch, Progress, Spin } from \"antd\";\r\nimport { SyncOutlined } from \"@ant-design/icons\";\r\nimport { parseEther, formatEther } from \"@ethersproject/units\";\r\nimport { ethers } from \"ethers\";\r\nimport { Address, AddressInput, Balance, Blockie, TransactionListItem } from \"../components\";\r\nimport { useContractReader, useEventListener, usePoller } from \"../hooks\";\r\n\r\nconst axios = require(\"axios\");\r\n\r\nconst DEBUG = false;\r\n\r\nexport default function Transactions({\r\n  poolServerUrl,\r\n  contractName,\r\n  signaturesRequired,\r\n  address,\r\n  nonce,\r\n  userProvider,\r\n  mainnetProvider,\r\n  localProvider,\r\n  yourLocalBalance,\r\n  price,\r\n  tx,\r\n  readContracts,\r\n  writeContracts,\r\n  blockExplorer,\r\n}) {\r\n  const [transactions, setTransactions] = useState();\r\n  usePoller(() => {\r\n    const getTransactions = async () => {\r\n      if (true) console.log(\"🛰 Requesting Transaction List\");\r\n      const res = await axios.get(\r\n        poolServerUrl + readContracts[contractName].address + \"_\" + localProvider._network.chainId,\r\n      );\r\n      const newTransactions = [];\r\n      for (const i in res.data) {\r\n        // console.log(\"look through signatures of \",res.data[i])\r\n        const thisNonce = ethers.BigNumber.from(res.data[i].nonce);\r\n        if (thisNonce && nonce && thisNonce.gte(nonce)) {\r\n          const validSignatures = [];\r\n          for (const s in res.data[i].signatures) {\r\n            // console.log(\"RECOVER:\",res.data[i].signatures[s],res.data[i].hash)\r\n            const signer = await readContracts[contractName].recover(res.data[i].hash, res.data[i].signatures[s]);\r\n            const isOwner = await readContracts[contractName].isOwner(signer);\r\n            if (signer && isOwner) {\r\n              validSignatures.push({ signer, signature: res.data[i].signatures[s] });\r\n            }\r\n          }\r\n          const update = { ...res.data[i], validSignatures };\r\n          // console.log(\"update\",update)\r\n          newTransactions.push(update);\r\n        }\r\n      }\r\n      setTransactions(newTransactions);\r\n      console.log(\"Loaded\",newTransactions.length)\r\n    };\r\n    if (readContracts) getTransactions();\r\n  }, 3777);\r\n\r\n  const getSortedSigList = async (allSigs, newHash) => {\r\n    console.log(\"allSigs\", allSigs);\r\n\r\n    const sigList = [];\r\n    for (const s in allSigs) {\r\n      console.log(\"SIG\", allSigs[s]);\r\n      const recover = await readContracts[contractName].recover(newHash, allSigs[s]);\r\n      sigList.push({ signature: allSigs[s], signer: recover });\r\n    }\r\n\r\n    sigList.sort((a, b) => {\r\n      return ethers.BigNumber.from(a.signer).sub(ethers.BigNumber.from(b.signer));\r\n    });\r\n\r\n    console.log(\"SORTED SIG LIST:\", sigList);\r\n\r\n    const finalSigList = [];\r\n    const finalSigners = [];\r\n    const used = {};\r\n    for (const s in sigList) {\r\n      if (!used[sigList[s].signature]) {\r\n        finalSigList.push(sigList[s].signature);\r\n        finalSigners.push(sigList[s].signer);\r\n      }\r\n      used[sigList[s].signature] = true;\r\n    }\r\n\r\n    console.log(\"FINAL SIG LIST:\", finalSigList);\r\n    return [finalSigList, finalSigners];\r\n  };\r\n\r\n  if (!signaturesRequired) {\r\n    return <Spin />;\r\n  }\r\n\r\n  console.log(\"transactions\",transactions)\r\n\r\n  return (\r\n    <div style={{ maxWidth: 750, margin: \"auto\", marginTop: 32, marginBottom: 32 }}>\r\n      <h1>\r\n        <b style={{ padding: 16 }}>#{nonce ? nonce.toNumber() : <Spin />}</b>\r\n      </h1>\r\n\r\n      <List\r\n        bordered\r\n        dataSource={transactions}\r\n        renderItem={item => {\r\n          console.log(\"ITE88888M\", item);\r\n\r\n          const hasSigned = item.signers.indexOf(address) >= 0;\r\n          const hasEnoughSignatures = item.signatures.length <= signaturesRequired.toNumber();\r\n\r\n          return (\r\n            <TransactionListItem item={item} mainnetProvider={mainnetProvider} blockExplorer={blockExplorer} price={price} readContracts={readContracts} contractName={contractName}>\r\n              <span>\r\n                {item.signatures.length}/{signaturesRequired.toNumber()} {hasSigned ? \"✅\" : \"\"}\r\n              </span>\r\n              <Button\r\n                onClick={async () => {\r\n                  console.log(\"item.signatures\", item.signatures);\r\n\r\n                  const newHash = await readContracts[contractName].getTransactionHash(\r\n                    item.nonce,\r\n                    item.to,\r\n                    parseEther(\"\" + parseFloat(item.amount).toFixed(12)),\r\n                    item.data,\r\n                  );\r\n                  console.log(\"newHash\", newHash);\r\n\r\n                  const signature = await userProvider.send(\"personal_sign\", [newHash, address]);\r\n                  console.log(\"signature\", signature);\r\n\r\n                  const recover = await readContracts[contractName].recover(newHash, signature);\r\n                  console.log(\"recover--->\", recover);\r\n\r\n                  const isOwner = await readContracts[contractName].isOwner(recover);\r\n                  console.log(\"isOwner\", isOwner);\r\n\r\n                  if (isOwner) {\r\n                    const [finalSigList, finalSigners] = await getSortedSigList(\r\n                      [...item.signatures, signature],\r\n                      newHash,\r\n                    );\r\n                    const res = await axios.post(poolServerUrl, {\r\n                      ...item,\r\n                      signatures: finalSigList,\r\n                      signers: finalSigners,\r\n                    });\r\n                  }\r\n\r\n                  // tx( writeContracts[contractName].executeTransaction(item.to,parseEther(\"\"+parseFloat(item.amount).toFixed(12)), item.data, item.signatures))\r\n                }}\r\n                type=\"secondary\"\r\n              >\r\n                Sign\r\n              </Button>\r\n              <Button\r\n\r\n                key={item.hash}\r\n                \r\n                onClick={async () => {\r\n                  const newHash = await readContracts[contractName].getTransactionHash(\r\n                    item.nonce,\r\n                    item.to,\r\n                    parseEther(\"\" + parseFloat(item.amount).toFixed(12)),\r\n                    item.data,\r\n                  );\r\n                  console.log(\"newHash\", newHash);\r\n\r\n                  console.log(\"item.signatures\", item.signatures);\r\n\r\n                  const [finalSigList, finalSigners] = await getSortedSigList(item.signatures, newHash);\r\n\r\n                  tx(\r\n                    writeContracts[contractName].executeTransaction(\r\n                      item.to,\r\n                      parseEther(\"\" + parseFloat(item.amount).toFixed(12)),\r\n                      item.data,\r\n                      finalSigList,\r\n                    ),\r\n                  );\r\n                }}\r\n                type={hasEnoughSignatures ? \"primary\" : \"secondary\"}\r\n              >\r\n                Exec\r\n              </Button>\r\n          </TransactionListItem>\r\n          );\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { notification, InputNumber, Select, Button, List, Divider, Input, Card, DatePicker, Slider, Switch, Progress, Spin } from \"antd\";\r\nimport { SyncOutlined } from '@ant-design/icons';\r\nimport { Address, AddressInput, Balance, Blockie, EtherInput } from \"../components\";\r\nimport { parseEther, formatEther } from \"@ethersproject/units\";\r\nimport { ethers } from \"ethers\";\r\nimport { useContractReader, useEventListener, useLocalStorage, useBalance } from \"../hooks\";\r\nimport { useBlockNumber } from \"eth-hooks\";\r\nconst axios = require('axios');\r\nconst { Option } = Select;\r\n\r\nconst DEBUG = false\r\n\r\nexport default function Streams({withdrawStreamEvents, openStreamEvents, contractName, signaturesRequired, address, nonce, userProvider, mainnetProvider, localProvider, yourLocalBalance, price, tx, readContracts, writeContracts, blockExplorer }) {\r\n\r\n  const walletBalance = useBalance(localProvider, readContracts?readContracts[contractName].address:readContracts);\r\n  if(DEBUG) console.log(\"💵 walletBalance\",walletBalance?formatEther(walletBalance):\"...\")\r\n\r\n  const blockNumber = useBlockNumber(localProvider,1777);\r\n  if(DEBUG) console.log(\"# blockNumber:\",blockNumber)\r\n\r\n  const [streams, setStreams] = useState()\r\n  const [streamInfo, setStreamInfo] = useState()\r\n  const [streamReason, setStreamReason] = useState()\r\n  const [streamReasonUp, setStreamReasonUp] = useState()\r\n  const [customStreamAmount, setCustomStreamAmount] = useState();\r\n\r\n  useEffect(()=>{\r\n      let getStreams = async ()=>{\r\n        let newStreams = []\r\n        let newStreamInfo = {}\r\n\r\n        for(let s in openStreamEvents){\r\n          if(openStreamEvents[s].to && newStreams.indexOf(openStreamEvents[s].to)<0){\r\n            newStreams.push(openStreamEvents[s].to)\r\n            //console.log(\"GETTING STREAM BALANCE OF \",openStreamEvents[s].to,\"from\",readContracts)\r\n            try{\r\n              let update = {}\r\n              update.stream = await readContracts[contractName].streams(openStreamEvents[s].to)\r\n              if(update.stream && update.stream.amount.gt(0)){\r\n                update.balance = await readContracts[contractName].streamBalance(openStreamEvents[s].to)\r\n              }\r\n              newStreamInfo[openStreamEvents[s].to] = update\r\n            }catch(e){\r\n              console.log(e)\r\n            }\r\n\r\n          }\r\n        }\r\n        setStreams(newStreams)\r\n        setStreamInfo(newStreamInfo)\r\n      }\r\n      if(readContracts && readContracts[contractName]){\r\n        getStreams()\r\n      }\r\n    },[ openStreamEvents, blockNumber ]\r\n  )\r\n\r\n  const history = useHistory();\r\n\r\n  const [to, setTo] = useLocalStorage(\"to\");\r\n  const [amount, setAmount] = useLocalStorage(\"amount\",\"0\");\r\n  const [methodName, setMethodName] = useLocalStorage(\"openStream\");\r\n  const [streamToAddress, setStreamToAddress] = useLocalStorage(\"streamToAddress\");\r\n  const [streamAmount, setStreamAmount] = useLocalStorage(\"streamAmount\");\r\n  const [streamFrequency, setStreamFrequency] = useLocalStorage(\"streamFrequency\");\r\n  const [data, setData] = useLocalStorage(\"data\",\"0x\");\r\n\r\n  let streamDetailForm = \"\"\r\n  let displayedStream = {}\r\n\r\n  let extraDisplay = \"\"\r\n\r\n  if(streamFrequency&&streamFrequency>0){\r\n    if(streamFrequency>86400){\r\n      extraDisplay = \"(\"+(streamFrequency/86400).toFixed(2)+\" days)\"\r\n    }else if(streamFrequency>3600){\r\n      extraDisplay = \"(\"+(streamFrequency/3600).toFixed(2)+\" hours)\"\r\n    }else if(streamFrequency>60){\r\n      extraDisplay = \"(\"+(streamFrequency/60).toFixed(2)+\" minutes)\"\r\n    }\r\n  }\r\n\r\n  if(methodName==\"openStream\"){\r\n    streamDetailForm = (\r\n      <div>\r\n        <div style={{margin:8,padding:8}}>\r\n          <EtherInput\r\n            price={price}\r\n            placeholder=\"amount\"\r\n            value={streamAmount}\r\n            onChange={setStreamAmount}\r\n          />\r\n        </div>\r\n        <div style={{margin:8,padding:8}}>\r\n          every <InputNumber\r\n            style={{width:180}}\r\n            placeholder=\"frequency\"\r\n            value={streamFrequency}\r\n            onChange={setStreamFrequency}\r\n          /> seconds <div style={{opacity:0.5,padding:4}}>{extraDisplay}</div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  let withdrawalDisplay = \"\"\r\n  let index=0\r\n  if(withdrawStreamEvents){\r\n    withdrawalDisplay = (\r\n      <div style={{border:\"1px solid #cccccc\",padding:16, width:550, margin:\"auto\",marginTop:64}}>\r\n        <b>Withdrawals:</b>\r\n        <List\r\n          title={\"Withdrawals\"}\r\n          dataSource={withdrawStreamEvents}\r\n          renderItem={(item) => {\r\n            return (\r\n              <List.Item key={\"withdrawal_\"+index++}>\r\n              <div>\r\n                <Address\r\n                  address={item.to}\r\n                  ensProvider={mainnetProvider}\r\n                  fontSize={16}\r\n                />\r\n                <Balance\r\n                  balance={item.amount}\r\n                  dollarMultiplier={price}\r\n                />\r\n              </div>\r\n              {item.reason}\r\n              </List.Item>\r\n            )\r\n          }}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <List\r\n        style={{maxWidth:550,margin:\"auto\",marginTop:32}}\r\n        bordered\r\n        dataSource={streams}\r\n        renderItem={(item) => {\r\n          if(!streamInfo) return \"...\"\r\n\r\n          let withdrawButtonOrBalance = \"\"\r\n\r\n          let prettyBalanceDisplay = \"$\" + (parseFloat(formatEther(streamInfo[item]&&streamInfo[item].balance?streamInfo[item].balance:0)) * price).toFixed(2)\r\n          let currentButtonDisplay = prettyBalanceDisplay\r\n\r\n          let addressDisplay = (\r\n            <Address\r\n              address={item}\r\n              ensProvider={mainnetProvider}\r\n              blockExplorer={blockExplorer}\r\n              fontSize={32}\r\n            />\r\n          )\r\n\r\n          if(streamInfo[item] && !streamInfo[item].balance){\r\n            withdrawButtonOrBalance = (\r\n              <div style={{opacity:0.5}}>closed</div>\r\n            )\r\n          } else if(address==item){\r\n\r\n\r\n            if(streamReasonUp){\r\n              addressDisplay = \"\"\r\n              const formStyle = { padding:8 }\r\n\r\n              currentButtonDisplay = \"Withdraw\"\r\n\r\n              withdrawButtonOrBalance = (\r\n                <div>\r\n                  <div style={formStyle}>\r\n                    <Input\r\n                      placeholder=\"withdrawal reason or link to PR/work\"\r\n                      value={streamReason}\r\n                      onChange={(e)=>{\r\n                        setStreamReason(e.target.value)\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <div style={formStyle}>\r\n                    <Input\r\n                      placeholder={\"amount (leave blank for max: \"+prettyBalanceDisplay+\")\"}\r\n                      value={customStreamAmount}\r\n                      onChange={(e)=>{\r\n                        setCustomStreamAmount(e.target.value)\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <div style={formStyle}>\r\n                  <Button style={{paddingTop:-8}} type={\"primary\"} onClick={() => {\r\n                    if(!streamReason){\r\n                      notification.info({\r\n                        message: \"Error: Provide Reason\",\r\n                        description: \"Please provide a reason or url to work.\",\r\n                        placement: \"bottomRight\",\r\n                      });\r\n                    }else{\r\n\r\n                      let amountToWithdraw = streamInfo[item].balance\r\n                      console.log(\"amountToWithdraw1\",amountToWithdraw)\r\n                      if(customStreamAmount){\r\n                        let cleaned = parseFloat(customStreamAmount.replace(\"\\$\",\"\")).toFixed(8)\r\n                        //console.log(\"cleaned\",cleaned)\r\n                        let floatToWithdraw = parseFloat(cleaned/price).toFixed(8)\r\n                        //console.log(\"floatToWithdraw\",floatToWithdraw)\r\n                        amountToWithdraw = parseEther(\"\"+floatToWithdraw)\r\n                        //console.log(\"amountToWithdraw2\",amountToWithdraw)\r\n                      }\r\n\r\n                      if(streamInfo[item] && streamInfo[item].balance && streamInfo[item].balance.gt(walletBalance)){\r\n                        notification.info({\r\n                          message: \"Warning: Contract Balance\",\r\n                          description: \"It looks like there isn't enough in the contract to withdraw?\",\r\n                          placement: \"bottomRight\",\r\n                        });\r\n                      }\r\n                      tx( writeContracts[contractName].streamWithdraw(amountToWithdraw, streamReason) )\r\n                      setStreamReason(\"\")\r\n                      setStreamReasonUp(false)\r\n                      setCustomStreamAmount(\"\")\r\n                    }\r\n                  }}>\r\n                    { currentButtonDisplay }\r\n                  </Button></div>\r\n                </div>\r\n\r\n              )\r\n            }else{\r\n              withdrawButtonOrBalance = (\r\n                <Button style={{paddingTop:-8}} onClick={()=>{setStreamReasonUp(true)}}>\r\n                  { \"$\" + (parseFloat(formatEther(streamInfo[item]&&streamInfo[item].balance?streamInfo[item].balance:0)) * price).toFixed(2) }\r\n                </Button>\r\n              )\r\n            }\r\n\r\n\r\n\r\n          }else{\r\n            withdrawButtonOrBalance = (\r\n              <Balance\r\n                balance={streamInfo[item]?streamInfo[item].balance:0}\r\n                dollarMultiplier={price}\r\n              />\r\n            )\r\n          }\r\n\r\n          return (\r\n            <List.Item key={\"stream_\"+item}>\r\n              {addressDisplay}\r\n              {withdrawButtonOrBalance}\r\n            </List.Item>\r\n          )\r\n\r\n        }}\r\n      />\r\n\r\n      {withdrawalDisplay}\r\n\r\n      <div style={{border:\"1px solid #cccccc\", padding:16, width:400, margin:\"auto\",marginTop:64}}>\r\n        <div style={{margin:8,padding:8}}>\r\n          <Select value={methodName} style={{ width: \"100%\" }} onChange={ setMethodName }>\r\n            <Option key=\"openStream\">openStream()</Option>\r\n            <Option key=\"closeStream\">closeStream()</Option>\r\n          </Select>\r\n        </div>\r\n        <div style={{margin:8,padding:8}}>\r\n          <AddressInput\r\n            autoFocus\r\n            ensProvider={mainnetProvider}\r\n            placeholder=\"stream to address\"\r\n            value={streamToAddress}\r\n            onChange={setStreamToAddress}\r\n          />\r\n        </div>\r\n        {streamDetailForm}\r\n        <div style={{margin:8,padding:8}}>\r\n          <Button onClick={()=>{\r\n            //console.log(\"METHOD\",setMethodName)\r\n\r\n            let calldata\r\n            if(methodName==\"openStream\"){\r\n              calldata = readContracts[contractName].interface.encodeFunctionData(\"openStream\",[streamToAddress,parseEther(\"\"+parseFloat(streamAmount).toFixed(12)),streamFrequency])\r\n            }else{\r\n              calldata = readContracts[contractName].interface.encodeFunctionData(\"closeStream\",[streamToAddress])\r\n            }\r\n            console.log(\"calldata\",calldata)\r\n            setData(calldata)\r\n            setAmount(\"0\")\r\n            setTo(readContracts[contractName].address)\r\n            setTimeout(()=>{\r\n              history.push('/create')\r\n            },777)\r\n          }}>\r\n            Create Tx\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { BrowserRouter, Switch, Route, Link } from \"react-router-dom\";\r\nimport \"antd/dist/antd.css\";\r\nimport {  StaticJsonRpcProvider, JsonRpcProvider, Web3Provider,InfuraProvider } from \"@ethersproject/providers\";\r\nimport \"./App.css\";\r\nimport { Row, Col, Button, Menu, Alert, Switch as SwitchD } from \"antd\";\r\nimport Web3Modal from \"web3modal\";\r\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\r\nimport { useUserAddress } from \"eth-hooks\";\r\nimport { Balance, Header, Account, Faucet, Ramp, Contract, GasGauge, Address, ThemeSwitch } from \"./components\";\r\nimport { useExchangePrice, useGasPrice, useUserProvider, useContractLoader, useContractReader, useEventListener, useBalance, useExternalContractLoader, useOnBlock } from \"./hooks\";\r\nimport { Transactor } from \"./helpers\";\r\nimport { formatEther, parseEther } from \"@ethersproject/units\";\r\n//import Hints from \"./Hints\";\r\nimport { Hints, ExampleUI, Subgraph } from \"./views\"\r\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\r\nimport { INFURA_ID, DAI_ADDRESS, DAI_ABI, NETWORK, NETWORKS } from \"./constants\";\r\nimport { CreateTransaction, Transactions, Owners, FrontPage } from \"./views\"\r\n\r\n/*\r\n    Welcome to 🏗 scaffold-eth !\r\n\r\n    Code:\r\n    https://github.com/austintgriffith/scaffold-eth\r\n\r\n    Support:\r\n    https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\r\n    or DM @austingriffith on twitter or telegram\r\n\r\n    You should get your own Infura.io ID and put it in `constants.js`\r\n    (this is your connection to the main Ethereum network for ENS etc.)\r\n\r\n\r\n    🌏 EXTERNAL CONTRACTS:\r\n    You can also bring in contract artifacts in `constants.js`\r\n    (and then use the `useExternalContractLoader()` hook!)\r\n*/\r\n\r\n\r\n/// 📡 What chain are your contracts deployed to?\r\nconst targetNetwork = NETWORKS['rinkeby']; // <------- select your target frontend network (localhost, rinkeby, xdai, mainnet)\r\n\r\nconst poolServerUrl = \"https://backend.multisig.holdings:49832/\"\r\n//const poolServerUrl = \"http://localhost:49832/\"\r\n\r\n// 😬 Sorry for all the console logging\r\nconst DEBUG = true\r\n\r\n\r\n// 🛰 providers\r\nif(DEBUG) console.log(\"📡 Connecting to Mainnet Ethereum\");\r\n// const mainnetProvider = getDefaultProvider(\"mainnet\", { infura: INFURA_ID, etherscan: ETHERSCAN_KEY, quorum: 1 });\r\n// const mainnetProvider = new InfuraProvider(\"mainnet\",INFURA_ID);\r\n//\r\n// attempt to connect to our own scaffold eth rpc and if that fails fall back to infura...\r\nconst scaffoldEthProvider = new JsonRpcProvider(\"https://rpc.scaffoldeth.io:48544\")\r\nconst mainnetInfura = new JsonRpcProvider(\"https://mainnet.infura.io/v3/\" + INFURA_ID)\r\n// ( ⚠️ Getting \"failed to meet quorum\" errors? Check your INFURA_I\r\n\r\n// 🏠 Your local provider is usually pointed at your local blockchain\r\nconst localProviderUrl = targetNetwork.rpcUrl;\r\n// as you deploy to other networks you can set REACT_APP_PROVIDER=https://dai.poa.network in packages/react-app/.env\r\nconst localProviderUrlFromEnv = process.env.REACT_APP_PROVIDER ? process.env.REACT_APP_PROVIDER : localProviderUrl;\r\nif(DEBUG) console.log(\"🏠 Connecting to provider:\", localProviderUrlFromEnv);\r\nconst localProvider = new StaticJsonRpcProvider(localProviderUrlFromEnv);\r\n\r\n\r\n// 🔭 block explorer URL\r\nconst blockExplorer = targetNetwork.blockExplorer;\r\n\r\n\r\n\r\n\r\nfunction App(props) {\r\n\r\n  const mainnetProvider = (scaffoldEthProvider && scaffoldEthProvider._network) ? scaffoldEthProvider : mainnetInfura\r\n\r\n  const [injectedProvider, setInjectedProvider] = useState();\r\n  /* 💵 This hook will get the price of ETH from 🦄 Uniswap: */\r\n  const price = useExchangePrice(targetNetwork,mainnetProvider);\r\n\r\n  /* 🔥 This hook will get the price of Gas from ⛽️ EtherGasStation */\r\n  const gasPrice = useGasPrice(targetNetwork,\"fast\");\r\n  // Use your injected provider from 🦊 Metamask or if you don't have it then instantly generate a 🔥 burner wallet.\r\n  const userProvider = useUserProvider(injectedProvider, localProvider);\r\n  const address = useUserAddress(userProvider);\r\n\r\n  // You can warn the user if you would like them to be on a specific network\r\n  let localChainId = localProvider && localProvider._network && localProvider._network.chainId\r\n  let selectedChainId = userProvider && userProvider._network && userProvider._network.chainId\r\n\r\n  // For more hooks, check out 🔗eth-hooks at: https://www.npmjs.com/package/eth-hooks\r\n\r\n  // The transactor wraps transactions and provides notificiations\r\n  const tx = Transactor(userProvider, gasPrice)\r\n\r\n  // Faucet Tx can be used to send funds from the faucet\r\n  const faucetTx = Transactor(localProvider, gasPrice)\r\n\r\n  // 🏗 scaffold-eth is full of handy hooks like this one to get your balance:\r\n  const yourLocalBalance = useBalance(localProvider, address);\r\n\r\n  // Just plug in different 🛰 providers to get your balance on different chains:\r\n  const yourMainnetBalance = useBalance(mainnetProvider, address);\r\n\r\n  // Load in your local 📝 contract and read a value from it:\r\n  const readContracts = useContractLoader(localProvider)\r\n\r\n  // If you want to make 🔐 write transactions to your contracts, use the userProvider:\r\n  const writeContracts = useContractLoader(userProvider)\r\n\r\n  const contractName = \"MetaMultiSigWallet\"\r\n\r\n  //📟 Listen for broadcast events\r\n  const executeTransactionEvents = useEventListener(readContracts, contractName, \"ExecuteTransaction\", localProvider, 1);\r\n  if(DEBUG) console.log(\"📟 executeTransactionEvents:\",executeTransactionEvents)\r\n\r\n  // keep track of a variable from the contract in the local React state:\r\n  const isOwner = useContractReader(readContracts, contractName, \"isOwner\", [address])\r\n  if(DEBUG) console.log(\"🤗 isOwner (\"+address+\"):\",isOwner)\r\n\r\n  // keep track of a variable from the contract in the local React state:\r\n  const nonce = useContractReader(readContracts, contractName, \"nonce\")\r\n  if(DEBUG) console.log(\"# nonce:\",nonce)\r\n\r\n  //📟 Listen for broadcast events\r\n  const ownerEvents = useEventListener(readContracts, contractName, \"Owner\", localProvider, 1);\r\n  if(DEBUG) console.log(\"📟 ownerEvents:\",ownerEvents)\r\n\r\n  // If you want to bring in the mainnet DAI contract it would look like:\r\n  const mainnetDAIContract = useExternalContractLoader(mainnetProvider, DAI_ADDRESS, DAI_ABI)\r\n\r\n  // If you want to call a function on a new block\r\n  useOnBlock(mainnetProvider, () => {\r\n    console.log(`⛓ A new mainnet block is here: ${mainnetProvider._lastBlockNumber}`)\r\n  })\r\n\r\n  // Then read your DAI balance like:\r\n  const myMainnetDAIBalance = useContractReader({DAI: mainnetDAIContract},\"DAI\", \"balanceOf\",[\"0x34aA3F359A9D614239015126635CE7732c18fDF3\"])\r\n\r\n  // keep track of a variable from the contract in the local React state:\r\n  const purpose = useContractReader(readContracts,\"YourContract\", \"purpose\")\r\n\r\n  //📟 Listen for broadcast events\r\n  const setPurposeEvents = useEventListener(readContracts, \"YourContract\", \"SetPurpose\", localProvider, 1);\r\n\r\n  /*\r\n  const addressFromENS = useResolveName(mainnetProvider, \"austingriffith.eth\");\r\n  console.log(\"🏷 Resolved austingriffith.eth as:\",addressFromENS)\r\n  */\r\n\r\n  //\r\n  // 🧫 DEBUG 👨🏻‍🔬\r\n  //\r\n  useEffect(()=>{\r\n    if(DEBUG && mainnetProvider && address && selectedChainId && yourLocalBalance && yourMainnetBalance && readContracts && writeContracts && mainnetDAIContract){\r\n      console.log(\"_____________________________________ 🏗 scaffold-eth _____________________________________\")\r\n      console.log(\"🌎 mainnetProvider\",mainnetProvider)\r\n      console.log(\"🏠 localChainId\",localChainId)\r\n      console.log(\"👩‍💼 selected address:\",address)\r\n      console.log(\"🕵🏻‍♂️ selectedChainId:\",selectedChainId)\r\n      console.log(\"💵 yourLocalBalance\",yourLocalBalance?formatEther(yourLocalBalance):\"...\")\r\n      console.log(\"💵 yourMainnetBalance\",yourMainnetBalance?formatEther(yourMainnetBalance):\"...\")\r\n      console.log(\"📝 readContracts\",readContracts)\r\n      console.log(\"🌍 DAI contract on mainnet:\",mainnetDAIContract)\r\n      console.log(\"🔐 writeContracts\",writeContracts)\r\n    }\r\n  }, [mainnetProvider, address, selectedChainId, yourLocalBalance, yourMainnetBalance, readContracts, writeContracts, mainnetDAIContract])\r\n\r\n\r\n  let networkDisplay = \"\"\r\n  if(localChainId && selectedChainId && localChainId != selectedChainId ){\r\n    networkDisplay = (\r\n      <div style={{zIndex:2, position:'absolute', right:0,top:60,padding:16}}>\r\n        <Alert\r\n          message={\"⚠️ Wrong Network\"}\r\n          description={(\r\n            <div>\r\n              You have <b>{NETWORK(selectedChainId).name}</b> selected and you need to be on <b>{NETWORK(localChainId).name}</b>.\r\n            </div>\r\n          )}\r\n          type=\"error\"\r\n          closable={false}\r\n        />\r\n      </div>\r\n    )\r\n  }else{\r\n    networkDisplay = (\r\n      <div style={{zIndex:-1, position:'absolute', right:154,top:28,padding:16,color:targetNetwork.color}}>\r\n        {targetNetwork.name}\r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\n  const signaturesRequired = useContractReader(readContracts, contractName, \"signaturesRequired\")\r\n  if(DEBUG) console.log(\"✳️ signaturesRequired:\",signaturesRequired)\r\n\r\n  //event OpenStream( address indexed to, uint256 amount, uint256 frequency );\r\n  const openStreamEvents = useEventListener(readContracts, contractName, \"OpenStream\", localProvider, 1);\r\n  if(DEBUG) console.log(\"📟 openStreamEvents:\",openStreamEvents)\r\n\r\n  const withdrawStreamEvents = useEventListener(readContracts, contractName, \"Withdraw\", localProvider, 1);\r\n  if(DEBUG) console.log(\"📟 withdrawStreamEvents:\",withdrawStreamEvents)\r\n\r\n\r\n  const loadWeb3Modal = useCallback(async () => {\r\n    const provider = await web3Modal.connect();\r\n    setInjectedProvider(new Web3Provider(provider));\r\n  }, [setInjectedProvider]);\r\n\r\n  useEffect(() => {\r\n    if (web3Modal.cachedProvider) {\r\n      loadWeb3Modal();\r\n    }\r\n  }, [loadWeb3Modal]);\r\n\r\n  const [route, setRoute] = useState();\r\n  useEffect(() => {\r\n    setRoute(window.location.pathname)\r\n  }, [setRoute]);\r\n\r\n  let faucetHint = \"\"\r\n  const faucetAvailable = localProvider && localProvider.connection && targetNetwork.name == \"localhost\"\r\n\r\n  const [ faucetClicked, setFaucetClicked ] = useState( false );\r\n  if(!faucetClicked&&localProvider&&localProvider._network&&localProvider._network.chainId==31337&&yourLocalBalance&&formatEther(yourLocalBalance)<=0){\r\n    faucetHint = (\r\n      <div style={{padding:16}}>\r\n        <Button type={\"primary\"} onClick={()=>{\r\n          faucetTx({\r\n            to: address,\r\n            value: parseEther(\"1\"),\r\n          });\r\n          setFaucetClicked(true)\r\n        }}>\r\n          💰 Grab funds from the faucet ⛽️\r\n        </Button>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n\r\n      {/* ✏️ Edit the header and change the title to your project name */}\r\n      <Header />\r\n      {networkDisplay}\r\n      <BrowserRouter>\r\n\r\n        <Menu style={{ textAlign:\"center\" }} selectedKeys={[route]} mode=\"horizontal\">\r\n          <Menu.Item key=\"/\">\r\n            <Link onClick={()=>{setRoute(\"/\")}} to=\"/\">MultiSig</Link>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"/owners\">\r\n            <Link onClick={()=>{setRoute(\"/owners\")}} to=\"/owners\">Owners</Link>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"/create\">\r\n            <Link onClick={()=>{setRoute(\"/create\")}} to=\"/create\">Create</Link>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"/pool\">\r\n            <Link onClick={()=>{setRoute(\"/pool\")}} to=\"/pool\">Pool</Link>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"/debug\">\r\n            <Link onClick={()=>{setRoute(\"/debug\")}} to=\"/debug\">Debug</Link>\r\n          </Menu.Item>\r\n        </Menu>\r\n\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <FrontPage\r\n              executeTransactionEvents={executeTransactionEvents}\r\n              contractName={contractName}\r\n              localProvider={localProvider}\r\n              readContracts={readContracts}\r\n              price={price}\r\n              mainnetProvider={mainnetProvider}\r\n              blockExplorer={blockExplorer}\r\n            />\r\n          </Route>\r\n            { /* uncomment for a second contract:\r\n            <Contract\r\n              name=\"SecondContract\"\r\n              signer={userProvider.getSigner()}\r\n              provider={localProvider}\r\n              address={address}\r\n              blockExplorer={blockExplorer}\r\n            />\r\n            */ }\r\n\r\n            { /* Uncomment to display and interact with an external contract (DAI on mainnet):\r\n            <Contract\r\n              name=\"DAI\"\r\n              customContract={mainnetDAIContract}\r\n              signer={userProvider.getSigner()}\r\n              provider={mainnetProvider}\r\n              address={address}\r\n              blockExplorer={blockExplorer}\r\n            />\r\n            */ }\r\n          <Route exact path=\"/owners\">\r\n            <Owners\r\n              contractName={contractName}\r\n              address={address}\r\n              userProvider={userProvider}\r\n              mainnetProvider={mainnetProvider}\r\n              localProvider={localProvider}\r\n              yourLocalBalance={yourLocalBalance}\r\n              price={price}\r\n              tx={tx}\r\n              writeContracts={writeContracts}\r\n              readContracts={readContracts}\r\n              blockExplorer={blockExplorer}\r\n              nonce={nonce}\r\n              ownerEvents={ownerEvents}\r\n              signaturesRequired={signaturesRequired}\r\n            />\r\n          </Route>\r\n          <Route path=\"/create\">\r\n            <CreateTransaction\r\n              poolServerUrl={poolServerUrl}\r\n              contractName={contractName}\r\n              address={address}\r\n              userProvider={userProvider}\r\n              mainnetProvider={mainnetProvider}\r\n              localProvider={localProvider}\r\n              yourLocalBalance={yourLocalBalance}\r\n              price={price}\r\n              tx={tx}\r\n              writeContracts={writeContracts}\r\n              readContracts={readContracts}\r\n              setRoute={setRoute}\r\n            />\r\n          </Route>\r\n          <Route path=\"/pool\">\r\n            <Transactions\r\n              poolServerUrl={poolServerUrl}\r\n              contractName={contractName}\r\n              address={address}\r\n              userProvider={userProvider}\r\n              mainnetProvider={mainnetProvider}\r\n              localProvider={localProvider}\r\n              yourLocalBalance={yourLocalBalance}\r\n              price={price}\r\n              tx={tx}\r\n              writeContracts={writeContracts}\r\n              readContracts={readContracts}\r\n              blockExplorer={blockExplorer}\r\n              nonce={nonce}\r\n              signaturesRequired={signaturesRequired}\r\n            />\r\n          </Route>\r\n          <Route path=\"/debug\">\r\n            <Contract\r\n              name=\"MetaMultiSigWallet\"\r\n              signer={userProvider.getSigner()}\r\n              provider={localProvider}\r\n              address={address}\r\n              blockExplorer={blockExplorer}\r\n              purpose={purpose}\r\n              setPurposeEvents={setPurposeEvents}\r\n            />\r\n          </Route>\r\n          <Route path=\"/mainnetdai\">\r\n            <Contract\r\n              name=\"DAI\"\r\n              customContract={mainnetDAIContract}\r\n              signer={userProvider.getSigner()}\r\n              provider={mainnetProvider}\r\n              address={address}\r\n              blockExplorer={\"https://etherscan.io/\"}\r\n            />\r\n          </Route>\r\n          <Route path=\"/subgraph\">\r\n            <Subgraph\r\n            subgraphUri={props.subgraphUri}\r\n            tx={tx}\r\n            writeContracts={writeContracts}\r\n            mainnetProvider={mainnetProvider}\r\n            />\r\n          </Route>\r\n        </Switch>\r\n      </BrowserRouter>\r\n\r\n      <ThemeSwitch />\r\n\r\n\r\n      {/* 👨‍💼 Your account is in the top right with a wallet at connect options */}\r\n      <div style={{ position: \"fixed\", textAlign: \"right\", right: 0, top: 0, padding: 10 }}>\r\n         <Account\r\n           address={address}\r\n           localProvider={localProvider}\r\n           userProvider={userProvider}\r\n           mainnetProvider={mainnetProvider}\r\n           price={price}\r\n           web3Modal={web3Modal}\r\n           loadWeb3Modal={loadWeb3Modal}\r\n           logoutOfWeb3Modal={logoutOfWeb3Modal}\r\n           blockExplorer={blockExplorer}\r\n         />\r\n         {faucetHint}\r\n      </div>\r\n\r\n      {/* 🗺 Extra UI like gas price, eth price, faucet, and support: */}\r\n       <div style={{ position: \"fixed\", textAlign: \"left\", left: 0, bottom: 20, padding: 10 }}>\r\n         <Row align=\"middle\" gutter={[4, 4]}>\r\n           <Col span={8}>\r\n             <Ramp price={price} address={address} networks={NETWORKS}/>\r\n           </Col>\r\n\r\n           <Col span={8} style={{ textAlign: \"center\", opacity: 0.8 }}>\r\n             <GasGauge gasPrice={gasPrice} />\r\n           </Col>\r\n           <Col span={8} style={{ textAlign: \"center\", opacity: 1 }}>\r\n             <Button\r\n               onClick={() => {\r\n                 window.open(\"https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\");\r\n               }}\r\n               size=\"large\"\r\n               shape=\"round\"\r\n             >\r\n               <span style={{ marginRight: 8 }} role=\"img\" aria-label=\"support\">\r\n                 💬\r\n               </span>\r\n               Support\r\n             </Button>\r\n           </Col>\r\n         </Row>\r\n\r\n         <Row align=\"middle\" gutter={[4, 4]}>\r\n           <Col span={24}>\r\n             {\r\n\r\n               /*  if the local provider has a signer, let's show the faucet:  */\r\n               faucetAvailable ? (\r\n                 <Faucet localProvider={localProvider} price={price} ensProvider={mainnetProvider}/>\r\n               ) : (\r\n                 \"\"\r\n               )\r\n             }\r\n           </Col>\r\n         </Row>\r\n       </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n/*\r\n  Web3 modal helps us \"connect\" external wallets:\r\n*/\r\nconst web3Modal = new Web3Modal({\r\n  // network: \"mainnet\", // optional\r\n  cacheProvider: true, // optional\r\n  providerOptions: {\r\n    walletconnect: {\r\n      package: WalletConnectProvider, // required\r\n      options: {\r\n        infuraId: INFURA_ID,\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nconst logoutOfWeb3Modal = async () => {\r\n  await web3Modal.clearCachedProvider();\r\n  setTimeout(() => {\r\n    window.location.reload();\r\n  }, 1);\r\n};\r\n\r\n window.ethereum && window.ethereum.on('chainChanged', chainId => {\r\n  web3Modal.cachedProvider &&\r\n  setTimeout(() => {\r\n    window.location.reload();\r\n  }, 1);\r\n})\r\n\r\n window.ethereum && window.ethereum.on('accountsChanged', accounts => {\r\n  web3Modal.cachedProvider &&\r\n  setTimeout(() => {\r\n    window.location.reload();\r\n  }, 1);\r\n})\r\n\r\nexport default App;\r\n","import { useState } from \"react\";\r\nimport { Token, WETH, Fetcher, Route } from \"@uniswap/sdk\";\r\nimport { usePoller } from \"eth-hooks\";\r\n\r\nexport default function useExchangePrice(targetNetwork, mainnetProvider, pollTime) {\r\n  const [price, setPrice] = useState(0);\r\n\r\n  const pollPrice = () => {\r\n    async function getPrice() {\r\n      if(targetNetwork.price){\r\n        setPrice(targetNetwork.price)\r\n      }else{\r\n        const DAI = new Token(\r\n          mainnetProvider.network ? mainnetProvider.network.chainId : 1,\r\n          \"0x6B175474E89094C44Da98b954EedeAC495271d0F\",\r\n          18,\r\n        );\r\n        const pair = await Fetcher.fetchPairData(DAI, WETH[DAI.chainId], mainnetProvider);\r\n        const route = new Route([pair], WETH[DAI.chainId]);\r\n        setPrice(parseFloat(route.midPrice.toSignificant(6)));\r\n      }\r\n    }\r\n    getPrice();\r\n  };\r\n  usePoller(pollPrice, pollTime || 9777);\r\n\r\n  return price;\r\n}\r\n","import { useState } from \"react\";\r\nimport { usePoller } from \"eth-hooks\";\r\nimport axios from \"axios\";\r\n\r\nexport default function useGasPrice(targetNetwork,speed) {\r\n  const [gasPrice, setGasPrice] = useState();\r\n  const loadGasPrice = async () => {\r\n    if(targetNetwork.gasPrice){\r\n      setGasPrice(targetNetwork.gasPrice);\r\n    }else{\r\n      axios\r\n        .get(\"https://ethgasstation.info/json/ethgasAPI.json\")\r\n        .then(response => {\r\n          const newGasPrice = response.data[speed || \"fast\"] * 100000000;\r\n          if (newGasPrice !== gasPrice) {\r\n            setGasPrice(newGasPrice);\r\n          }\r\n        })\r\n        .catch(error => console.log(error));\r\n    }\r\n  };\r\n\r\n  usePoller(loadGasPrice, 39999);\r\n  return gasPrice;\r\n}\r\n","/* eslint-disable import/no-dynamic-require */\r\n/* eslint-disable global-require */\r\nimport { Contract } from \"@ethersproject/contracts\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\n/*\r\n  when you want to load an existing contract using just the provider, address, and ABI\r\n*/\r\n\r\n/*\r\n  ~ What it does? ~\r\n\r\n  Enables you to load an existing mainnet DAI contract using the provider, address and abi\r\n\r\n  ~ How can I use? ~\r\n\r\n  const mainnetDAIContract = useExternalContractLoader(mainnetProvider, DAI_ADDRESS, DAI_ABI)\r\n\r\n  ~ Features ~\r\n\r\n  - Specify mainnetProvider\r\n  - Specify DAI_ADDRESS and DAI_ABI, you can load/write them using constants.js\r\n*/\r\nexport default function useExternalContractLoader(provider, address, ABI, optionalBytecode) {\r\n  const [contract, setContract] = useState();\r\n  useEffect(() => {\r\n    async function loadContract() {\r\n      if (typeof provider !== \"undefined\" && address && ABI) {\r\n        try {\r\n          // we need to check to see if this provider has a signer or not\r\n          let signer;\r\n          const accounts = await provider.listAccounts();\r\n          if (accounts && accounts.length > 0) {\r\n            signer = provider.getSigner();\r\n          } else {\r\n            signer = provider;\r\n          }\r\n\r\n          const customContract = new Contract(address, ABI, signer);\r\n          if(optionalBytecode) customContract.bytecode = optionalBytecode\r\n\r\n          setContract(customContract);\r\n        } catch (e) {\r\n          console.log(\"ERROR LOADING EXTERNAL CONTRACT AT \"+address+\" (check provider, address, and ABI)!!\", e);\r\n        }\r\n      }\r\n    }\r\n    loadContract();\r\n  }, [provider, address, ABI, optionalBytecode]);\r\n  return contract;\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { ApolloClient, ApolloProvider, InMemoryCache } from \"@apollo/client\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nimport { ThemeSwitcherProvider } from \"react-css-theme-switcher\";\r\n\r\nconst themes = {\r\n  dark: `${process.env.PUBLIC_URL}/dark-theme.css`,\r\n  light: `${process.env.PUBLIC_URL}/light-theme.css`,\r\n};\r\n\r\nconst prevTheme = window.localStorage.getItem(\"theme\");\r\n\r\nlet subgraphUri = \"http://localhost:8000/subgraphs/name/scaffold-eth/your-contract\"\r\n\r\nconst client = new ApolloClient({\r\n  uri: subgraphUri,\r\n  cache: new InMemoryCache()\r\n});\r\n\r\nReactDOM.render(\r\n  <ApolloProvider client={client}>\r\n    <ThemeSwitcherProvider themeMap={themes} defaultTheme={prevTheme ? prevTheme : \"light\"}>\r\n      <App subgraphUri={subgraphUri}/>\r\n    </ThemeSwitcherProvider>\r\n  </ApolloProvider>,\r\n  document.getElementById(\"root\"),\r\n);\r\n","var map = {\n\t\"./MetaMultiSigWallet.abi.js\": 1124,\n\t\"./Monyo.abi.js\": 1125\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 602;","var map = {\n\t\"./MetaMultiSigWallet.bytecode.js\": 1126,\n\t\"./Monyo.bytecode.js\": 1127\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 603;"],"sourceRoot":""}